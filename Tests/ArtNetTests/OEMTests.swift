//
//  OEMTests.swift
//  
//
//  Created by Alsey Coleman Miller on 2/24/20.
//

import Foundation
import XCTest
@testable import ArtNet

final class OEMTests: XCTestCase {
    
    static let allTests = [
        ("testInvalid", testInvalid),
        ("testCodes", testCodes)
    ]
    
    func testInvalid() {
        
        let oem: OEMCode = 0x00FE
        XCTAssertEqual(oem.description, "0x00FE")
        XCTAssertNil(oem.mnemonic)
        XCTAssertNil(oem.manufacturer)
        XCTAssertNil(oem.product)
        XCTAssertEqual(oem.dmxIn, 0)
        XCTAssertEqual(oem.dmxOut, 0)
        XCTAssertFalse(oem.hasPhysicalPorts)
        XCTAssertFalse(oem.isRDMSupported)
    }
    
    func testCodes() {

        // Oem0x0a92 (0xA92)
        XCTAssertEqual(OEMCode.oem0xA92, 0xA92)
        XCTAssertEqual(OEMCode.oem0xA92.description, "Oem0x0a92")
        XCTAssertEqual(OEMCode.oem0xA92.mnemonic, "Oem0x0a92")
        XCTAssertEqual(OEMCode.oem0xA92.manufacturer, "Clay Paky S.p.A.")
        XCTAssertNil(OEMCode.oem0xA92.product)
        XCTAssertEqual(OEMCode.oem0xA92.dmxIn, 2)
        XCTAssertEqual(OEMCode.oem0xA92.dmxOut, 2)
        XCTAssertEqual(OEMCode.oem0xA92.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0xA92.isRDMSupported, true)

        // Oem0x13f8 (0x13F8)
        XCTAssertEqual(OEMCode.oem0x13F8, 0x13F8)
        XCTAssertEqual(OEMCode.oem0x13F8.description, "Oem0x13f8")
        XCTAssertEqual(OEMCode.oem0x13F8.mnemonic, "Oem0x13f8")
        XCTAssertEqual(OEMCode.oem0x13F8.manufacturer, "Imimot Kft")
        XCTAssertEqual(OEMCode.oem0x13F8.product, "Mitti")
        XCTAssertEqual(OEMCode.oem0x13F8.dmxIn, 1)
        XCTAssertEqual(OEMCode.oem0x13F8.dmxOut, 0)
        XCTAssertEqual(OEMCode.oem0x13F8.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.oem0x13F8.isRDMSupported, false)

        // Oem0x13f9 (0x13F9)
        XCTAssertEqual(OEMCode.oem0x13F9, 0x13F9)
        XCTAssertEqual(OEMCode.oem0x13F9.description, "Oem0x13f9")
        XCTAssertEqual(OEMCode.oem0x13F9.mnemonic, "Oem0x13f9")
        XCTAssertEqual(OEMCode.oem0x13F9.manufacturer, "MCSWE  Technologies.INC")
        XCTAssertEqual(OEMCode.oem0x13F9.product, "MCSWE LUNA 8")
        XCTAssertEqual(OEMCode.oem0x13F9.dmxIn, 8)
        XCTAssertEqual(OEMCode.oem0x13F9.dmxOut, 8)
        XCTAssertEqual(OEMCode.oem0x13F9.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x13F9.isRDMSupported, false)

        // Oem0x13fa (0x13FA)
        XCTAssertEqual(OEMCode.oem0x13FA, 0x13FA)
        XCTAssertEqual(OEMCode.oem0x13FA.description, "Oem0x13fa")
        XCTAssertEqual(OEMCode.oem0x13FA.mnemonic, "Oem0x13fa")
        XCTAssertEqual(OEMCode.oem0x13FA.manufacturer, "MCSWE  Technologies.INC")
        XCTAssertEqual(OEMCode.oem0x13FA.product, "MCSWE LUNA 16")
        XCTAssertEqual(OEMCode.oem0x13FA.dmxIn, 16)
        XCTAssertEqual(OEMCode.oem0x13FA.dmxOut, 16)
        XCTAssertEqual(OEMCode.oem0x13FA.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x13FA.isRDMSupported, false)

        // Oem0x13fb (0x13FB)
        XCTAssertEqual(OEMCode.oem0x13FB, 0x13FB)
        XCTAssertEqual(OEMCode.oem0x13FB.description, "Oem0x13fb")
        XCTAssertEqual(OEMCode.oem0x13FB.mnemonic, "Oem0x13fb")
        XCTAssertEqual(OEMCode.oem0x13FB.manufacturer, "Digital Sputnik Lighting")
        XCTAssertEqual(OEMCode.oem0x13FB.product, "DSL1")
        XCTAssertEqual(OEMCode.oem0x13FB.dmxIn, 1)
        XCTAssertEqual(OEMCode.oem0x13FB.dmxOut, 1)
        XCTAssertEqual(OEMCode.oem0x13FB.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x13FB.isRDMSupported, true)

        // Oem0x13fc (0x13FC)
        XCTAssertEqual(OEMCode.oem0x13FC, 0x13FC)
        XCTAssertEqual(OEMCode.oem0x13FC.description, "Oem0x13fc")
        XCTAssertEqual(OEMCode.oem0x13FC.mnemonic, "Oem0x13fc")
        XCTAssertEqual(OEMCode.oem0x13FC.manufacturer, "SRS Light Design")
        XCTAssertEqual(OEMCode.oem0x13FC.product, "ANGS4")
        XCTAssertEqual(OEMCode.oem0x13FC.dmxIn, 4)
        XCTAssertEqual(OEMCode.oem0x13FC.dmxOut, 4)
        XCTAssertEqual(OEMCode.oem0x13FC.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x13FC.isRDMSupported, false)

        // Oem0x13fd (0x13FD)
        XCTAssertEqual(OEMCode.oem0x13FD, 0x13FD)
        XCTAssertEqual(OEMCode.oem0x13FD.description, "Oem0x13fd")
        XCTAssertEqual(OEMCode.oem0x13FD.mnemonic, "Oem0x13fd")
        XCTAssertEqual(OEMCode.oem0x13FD.manufacturer, "Chauvet DJ")
        XCTAssertEqual(OEMCode.oem0x13FD.product, "DMX-AN")
        XCTAssertEqual(OEMCode.oem0x13FD.dmxIn, 2)
        XCTAssertEqual(OEMCode.oem0x13FD.dmxOut, 2)
        XCTAssertEqual(OEMCode.oem0x13FD.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x13FD.isRDMSupported, false)

        // Oem0x13fe (0x13FE)
        XCTAssertEqual(OEMCode.oem0x13FE, 0x13FE)
        XCTAssertEqual(OEMCode.oem0x13FE.description, "Oem0x13fe")
        XCTAssertEqual(OEMCode.oem0x13FE.mnemonic, "Oem0x13fe")
        XCTAssertEqual(OEMCode.oem0x13FE.manufacturer, "Rosstech Signals")
        XCTAssertEqual(OEMCode.oem0x13FE.product, "DMXBridge")
        XCTAssertEqual(OEMCode.oem0x13FE.dmxIn, 4)
        XCTAssertEqual(OEMCode.oem0x13FE.dmxOut, 4)
        XCTAssertEqual(OEMCode.oem0x13FE.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x13FE.isRDMSupported, true)

        // Oem0x13ff (0x13FF)
        XCTAssertEqual(OEMCode.oem0x13FF, 0x13FF)
        XCTAssertEqual(OEMCode.oem0x13FF.description, "Oem0x13ff")
        XCTAssertEqual(OEMCode.oem0x13FF.mnemonic, "Oem0x13ff")
        XCTAssertEqual(OEMCode.oem0x13FF.manufacturer, "LSC Lighting Systems (Aust) Pty. Ltd.")
        XCTAssertEqual(OEMCode.oem0x13FF.product, "Mantra Lite")
        XCTAssertEqual(OEMCode.oem0x13FF.dmxIn, 0)
        XCTAssertEqual(OEMCode.oem0x13FF.dmxOut, 3)
        XCTAssertEqual(OEMCode.oem0x13FF.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x13FF.isRDMSupported, true)

        // Oem0x1400 (0x1400)
        XCTAssertEqual(OEMCode.oem0x1400, 0x1400)
        XCTAssertEqual(OEMCode.oem0x1400.description, "Oem0x1400")
        XCTAssertEqual(OEMCode.oem0x1400.mnemonic, "Oem0x1400")
        XCTAssertEqual(OEMCode.oem0x1400.manufacturer, "DMT")
        XCTAssertEqual(OEMCode.oem0x1400.product, "Pixelstrip controller MKII")
        XCTAssertEqual(OEMCode.oem0x1400.dmxIn, 1)
        XCTAssertEqual(OEMCode.oem0x1400.dmxOut, 0)
        XCTAssertEqual(OEMCode.oem0x1400.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.oem0x1400.isRDMSupported, false)

        // Oem0x1401 (0x1401)
        XCTAssertEqual(OEMCode.oem0x1401, 0x1401)
        XCTAssertEqual(OEMCode.oem0x1401.description, "Oem0x1401")
        XCTAssertEqual(OEMCode.oem0x1401.mnemonic, "Oem0x1401")
        XCTAssertEqual(OEMCode.oem0x1401.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.oem0x1401.product, "TVL Panel DW")
        XCTAssertEqual(OEMCode.oem0x1401.dmxIn, 1)
        XCTAssertEqual(OEMCode.oem0x1401.dmxOut, 1)
        XCTAssertEqual(OEMCode.oem0x1401.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x1401.isRDMSupported, false)

        // Oem0x1402 (0x1402)
        XCTAssertEqual(OEMCode.oem0x1402, 0x1402)
        XCTAssertEqual(OEMCode.oem0x1402.description, "Oem0x1402")
        XCTAssertEqual(OEMCode.oem0x1402.mnemonic, "Oem0x1402")
        XCTAssertEqual(OEMCode.oem0x1402.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.oem0x1402.product, "Venus X2")
        XCTAssertEqual(OEMCode.oem0x1402.dmxIn, 0)
        XCTAssertEqual(OEMCode.oem0x1402.dmxOut, 0)
        XCTAssertEqual(OEMCode.oem0x1402.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.oem0x1402.isRDMSupported, false)

        // Oem0x1403 (0x1403)
        XCTAssertEqual(OEMCode.oem0x1403, 0x1403)
        XCTAssertEqual(OEMCode.oem0x1403.description, "Oem0x1403")
        XCTAssertEqual(OEMCode.oem0x1403.mnemonic, "Oem0x1403")
        XCTAssertEqual(OEMCode.oem0x1403.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.oem0x1403.product, "TVL Panel DW")
        XCTAssertEqual(OEMCode.oem0x1403.dmxIn, 1)
        XCTAssertEqual(OEMCode.oem0x1403.dmxOut, 1)
        XCTAssertEqual(OEMCode.oem0x1403.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x1403.isRDMSupported, false)

        // Oem0x1404 (0x1404)
        XCTAssertEqual(OEMCode.oem0x1404, 0x1404)
        XCTAssertEqual(OEMCode.oem0x1404.description, "Oem0x1404")
        XCTAssertEqual(OEMCode.oem0x1404.mnemonic, "Oem0x1404")
        XCTAssertEqual(OEMCode.oem0x1404.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.oem0x1404.product, "eNode4")
        XCTAssertEqual(OEMCode.oem0x1404.dmxIn, 1)
        XCTAssertEqual(OEMCode.oem0x1404.dmxOut, 4)
        XCTAssertEqual(OEMCode.oem0x1404.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x1404.isRDMSupported, false)

        // Oem0x1405 (0x1405)
        XCTAssertEqual(OEMCode.oem0x1405, 0x1405)
        XCTAssertEqual(OEMCode.oem0x1405.description, "Oem0x1405")
        XCTAssertEqual(OEMCode.oem0x1405.mnemonic, "Oem0x1405")
        XCTAssertEqual(OEMCode.oem0x1405.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.oem0x1405.product, "eNode8 Pro")
        XCTAssertEqual(OEMCode.oem0x1405.dmxIn, 1)
        XCTAssertEqual(OEMCode.oem0x1405.dmxOut, 8)
        XCTAssertEqual(OEMCode.oem0x1405.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x1405.isRDMSupported, false)

        // Oem0x1406 (0x1406)
        XCTAssertEqual(OEMCode.oem0x1406, 0x1406)
        XCTAssertEqual(OEMCode.oem0x1406.description, "Oem0x1406")
        XCTAssertEqual(OEMCode.oem0x1406.mnemonic, "Oem0x1406")
        XCTAssertEqual(OEMCode.oem0x1406.manufacturer, "Exalux")
        XCTAssertEqual(OEMCode.oem0x1406.product, "Connect-Plus")
        XCTAssertEqual(OEMCode.oem0x1406.dmxIn, 1)
        XCTAssertEqual(OEMCode.oem0x1406.dmxOut, 1)
        XCTAssertEqual(OEMCode.oem0x1406.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x1406.isRDMSupported, false)

        // Oem0x1407 (0x1407)
        XCTAssertEqual(OEMCode.oem0x1407, 0x1407)
        XCTAssertEqual(OEMCode.oem0x1407.description, "Oem0x1407")
        XCTAssertEqual(OEMCode.oem0x1407.mnemonic, "Oem0x1407")
        XCTAssertEqual(OEMCode.oem0x1407.manufacturer, "Foshan YiFeng Electric Industrial Co ltd")
        XCTAssertEqual(OEMCode.oem0x1407.product, "CA-EN28S")
        XCTAssertEqual(OEMCode.oem0x1407.dmxIn, 8)
        XCTAssertEqual(OEMCode.oem0x1407.dmxOut, 8)
        XCTAssertEqual(OEMCode.oem0x1407.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x1407.isRDMSupported, true)

        // Oem0x1408 (0x1408)
        XCTAssertEqual(OEMCode.oem0x1408, 0x1408)
        XCTAssertEqual(OEMCode.oem0x1408.description, "Oem0x1408")
        XCTAssertEqual(OEMCode.oem0x1408.mnemonic, "Oem0x1408")
        XCTAssertEqual(OEMCode.oem0x1408.manufacturer, "Foshan YiFeng Electric Industrial Co ltd")
        XCTAssertEqual(OEMCode.oem0x1408.product, "CA-AN28")
        XCTAssertEqual(OEMCode.oem0x1408.dmxIn, 2)
        XCTAssertEqual(OEMCode.oem0x1408.dmxOut, 8)
        XCTAssertEqual(OEMCode.oem0x1408.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x1408.isRDMSupported, true)

        // Oem0x1409 (0x1409)
        XCTAssertEqual(OEMCode.oem0x1409, 0x1409)
        XCTAssertEqual(OEMCode.oem0x1409.description, "Oem0x1409")
        XCTAssertEqual(OEMCode.oem0x1409.mnemonic, "Oem0x1409")
        XCTAssertEqual(OEMCode.oem0x1409.manufacturer, "Foshan YiFeng Electric Industrial Co ltd")
        XCTAssertEqual(OEMCode.oem0x1409.product, "CA-EN28")
        XCTAssertEqual(OEMCode.oem0x1409.dmxIn, 8)
        XCTAssertEqual(OEMCode.oem0x1409.dmxOut, 8)
        XCTAssertEqual(OEMCode.oem0x1409.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x1409.isRDMSupported, true)

        // Oem0x140a (0x140A)
        XCTAssertEqual(OEMCode.oem0x140A, 0x140A)
        XCTAssertEqual(OEMCode.oem0x140A.description, "Oem0x140a")
        XCTAssertEqual(OEMCode.oem0x140A.mnemonic, "Oem0x140a")
        XCTAssertEqual(OEMCode.oem0x140A.manufacturer, "Foshan YiFeng Electric Industrial Co ltd")
        XCTAssertEqual(OEMCode.oem0x140A.product, "CA-AN08")
        XCTAssertEqual(OEMCode.oem0x140A.dmxIn, 8)
        XCTAssertEqual(OEMCode.oem0x140A.dmxOut, 8)
        XCTAssertEqual(OEMCode.oem0x140A.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x140A.isRDMSupported, true)

        // Oem0x140b (0x140B)
        XCTAssertEqual(OEMCode.oem0x140B, 0x140B)
        XCTAssertEqual(OEMCode.oem0x140B.description, "Oem0x140b")
        XCTAssertEqual(OEMCode.oem0x140B.mnemonic, "Oem0x140b")
        XCTAssertEqual(OEMCode.oem0x140B.manufacturer, "Foshan YiFeng Electric Industrial Co ltd")
        XCTAssertEqual(OEMCode.oem0x140B.product, "CA-AN04")
        XCTAssertEqual(OEMCode.oem0x140B.dmxIn, 4)
        XCTAssertEqual(OEMCode.oem0x140B.dmxOut, 4)
        XCTAssertEqual(OEMCode.oem0x140B.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.oem0x140B.isRDMSupported, true)

        // Oem_acme_xa_1000f_1 (0x2916)
        XCTAssertEqual(OEMCode.acmeXa1000F1, 0x2916)
        XCTAssertEqual(OEMCode.acmeXa1000F1.description, "Oem_acme_xa_1000f_1")
        XCTAssertEqual(OEMCode.acmeXa1000F1.mnemonic, "Oem_acme_xa_1000f_1")
        XCTAssertEqual(OEMCode.acmeXa1000F1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmeXa1000F1.product, "XA 1000F")
        XCTAssertEqual(OEMCode.acmeXa1000F1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmeXa1000F1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmeXa1000F1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmeXa1000F1.isRDMSupported, true)

        // Oem_adb_stagelight_klemantis_as1000_1 (0x2941)
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs10001, 0x2941)
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs10001.description, "Oem_adb_stagelight_klemantis_as1000_1")
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs10001.mnemonic, "Oem_adb_stagelight_klemantis_as1000_1")
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs10001.manufacturer, "ADB STAGELIGHT")
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs10001.product, "KLEMANTIS AS1000")
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs10001.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs10001.dmxOut, 1)
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs10001.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs10001.isRDMSupported, true)

        // Oem_adb_stagelight_klemantis_as500_1 (0x2940)
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs5001, 0x2940)
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs5001.description, "Oem_adb_stagelight_klemantis_as500_1")
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs5001.mnemonic, "Oem_adb_stagelight_klemantis_as500_1")
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs5001.manufacturer, "ADB STAGELIGHT")
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs5001.product, "KLEMANTIS AS500")
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs5001.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs5001.dmxOut, 1)
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs5001.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adbStagelightKlemantisAs5001.isRDMSupported, true)

        // Oem_adb_stagelight_lexpert_fresnel_m_cw_1 (0x290F)
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMCw1, 0x290F)
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMCw1.description, "Oem_adb_stagelight_lexpert_fresnel_m_cw_1")
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMCw1.mnemonic, "Oem_adb_stagelight_lexpert_fresnel_m_cw_1")
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMCw1.manufacturer, "ADB STAGELIGHT")
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMCw1.product, "LEXPERT FRESNEL M CW")
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMCw1.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMCw1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMCw1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMCw1.isRDMSupported, true)

        // Oem_adb_stagelight_lexpert_fresnel_m_ww_1 (0x290E)
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMWw1, 0x290E)
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMWw1.description, "Oem_adb_stagelight_lexpert_fresnel_m_ww_1")
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMWw1.mnemonic, "Oem_adb_stagelight_lexpert_fresnel_m_ww_1")
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMWw1.manufacturer, "ADB STAGELIGHT")
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMWw1.product, "LEXPERT FRESNEL M WW")
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMWw1.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMWw1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMWw1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adbStagelightLexpertFresnelMWw1.isRDMSupported, true)

        // Oem_adb_stagelight_lexpert_profile_l_1 (0x2912)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileL1, 0x2912)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileL1.description, "Oem_adb_stagelight_lexpert_profile_l_1")
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileL1.mnemonic, "Oem_adb_stagelight_lexpert_profile_l_1")
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileL1.manufacturer, "ADB STAGELIGHT")
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileL1.product, "LEXPERT PROFILE L")
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileL1.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileL1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileL1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileL1.isRDMSupported, true)

        // Oem_adb_stagelight_lexpert_profile_l_cw_1 (0x2911)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLCw1, 0x2911)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLCw1.description, "Oem_adb_stagelight_lexpert_profile_l_cw_1")
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLCw1.mnemonic, "Oem_adb_stagelight_lexpert_profile_l_cw_1")
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLCw1.manufacturer, "ADB STAGELIGHT")
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLCw1.product, "LEXPERT PROFILE L CW")
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLCw1.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLCw1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLCw1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLCw1.isRDMSupported, true)

        // Oem_adb_stagelight_lexpert_profile_l_ww_1 (0x2910)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLWw1, 0x2910)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLWw1.description, "Oem_adb_stagelight_lexpert_profile_l_ww_1")
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLWw1.mnemonic, "Oem_adb_stagelight_lexpert_profile_l_ww_1")
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLWw1.manufacturer, "ADB STAGELIGHT")
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLWw1.product, "LEXPERT PROFILE L WW")
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLWw1.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLWw1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLWw1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adbStagelightLexpertProfileLWw1.isRDMSupported, true)

        // Oem_adb_stagelight_oksalis_fl10_1 (0x2988)
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl101, 0x2988)
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl101.description, "Oem_adb_stagelight_oksalis_fl10_1")
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl101.mnemonic, "Oem_adb_stagelight_oksalis_fl10_1")
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl101.manufacturer, "ADB STAGELIGHT")
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl101.product, "OKSALIS FL10")
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl101.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl101.dmxOut, 1)
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl101.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl101.isRDMSupported, true)

        // Oem_adb_stagelight_oksalis_fl20_1 (0x2987)
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl201, 0x2987)
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl201.description, "Oem_adb_stagelight_oksalis_fl20_1")
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl201.mnemonic, "Oem_adb_stagelight_oksalis_fl20_1")
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl201.manufacturer, "ADB STAGELIGHT")
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl201.product, "OKSALIS FL20")
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl201.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl201.dmxOut, 1)
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl201.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adbStagelightOksalisFl201.isRDMSupported, true)

        // Oem_adb_stagelight_orkis_focus_spot_1 (0x2998)
        XCTAssertEqual(OEMCode.adbStagelightOrkisFocusSpot1, 0x2998)
        XCTAssertEqual(OEMCode.adbStagelightOrkisFocusSpot1.description, "Oem_adb_stagelight_orkis_focus_spot_1")
        XCTAssertEqual(OEMCode.adbStagelightOrkisFocusSpot1.mnemonic, "Oem_adb_stagelight_orkis_focus_spot_1")
        XCTAssertEqual(OEMCode.adbStagelightOrkisFocusSpot1.manufacturer, "ADB STAGELIGHT")
        XCTAssertEqual(OEMCode.adbStagelightOrkisFocusSpot1.product, "ORKIS FOCUS SPOT")
        XCTAssertEqual(OEMCode.adbStagelightOrkisFocusSpot1.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbStagelightOrkisFocusSpot1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adbStagelightOrkisFocusSpot1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adbStagelightOrkisFocusSpot1.isRDMSupported, true)

        // Oem_adb_stagelight_orkis_profile_m_1 (0x2A32)
        XCTAssertEqual(OEMCode.adbStagelightOrkisProfileM1, 0x2A32)
        XCTAssertEqual(OEMCode.adbStagelightOrkisProfileM1.description, "Oem_adb_stagelight_orkis_profile_m_1")
        XCTAssertEqual(OEMCode.adbStagelightOrkisProfileM1.mnemonic, "Oem_adb_stagelight_orkis_profile_m_1")
        XCTAssertEqual(OEMCode.adbStagelightOrkisProfileM1.manufacturer, "ADB STAGELIGHT")
        XCTAssertEqual(OEMCode.adbStagelightOrkisProfileM1.product, "ORKIS PROFILE M")
        XCTAssertEqual(OEMCode.adbStagelightOrkisProfileM1.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbStagelightOrkisProfileM1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adbStagelightOrkisProfileM1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adbStagelightOrkisProfileM1.isRDMSupported, true)

        // Oem_adj_group_pixie_driver_2k_1 (0x2A2A)
        XCTAssertEqual(OEMCode.adjGroupPixieDriver2K1, 0x2A2A)
        XCTAssertEqual(OEMCode.adjGroupPixieDriver2K1.description, "Oem_adj_group_pixie_driver_2k_1")
        XCTAssertEqual(OEMCode.adjGroupPixieDriver2K1.mnemonic, "Oem_adj_group_pixie_driver_2k_1")
        XCTAssertEqual(OEMCode.adjGroupPixieDriver2K1.manufacturer, "ADJ Group")
        XCTAssertEqual(OEMCode.adjGroupPixieDriver2K1.product, "Pixie Driver 2K")
        XCTAssertEqual(OEMCode.adjGroupPixieDriver2K1.dmxIn, 1)
        XCTAssertEqual(OEMCode.adjGroupPixieDriver2K1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adjGroupPixieDriver2K1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjGroupPixieDriver2K1.isRDMSupported, false)

        // Oem_adj_products_allegro_z6_1 (0x29EC)
        XCTAssertEqual(OEMCode.adjProductsAllegroZ61, 0x29EC)
        XCTAssertEqual(OEMCode.adjProductsAllegroZ61.description, "Oem_adj_products_allegro_z6_1")
        XCTAssertEqual(OEMCode.adjProductsAllegroZ61.mnemonic, "Oem_adj_products_allegro_z6_1")
        XCTAssertEqual(OEMCode.adjProductsAllegroZ61.manufacturer, "ADJ PRODUCTS")
        XCTAssertEqual(OEMCode.adjProductsAllegroZ61.product, "ALLEGRO Z6")
        XCTAssertEqual(OEMCode.adjProductsAllegroZ61.dmxIn, 2)
        XCTAssertEqual(OEMCode.adjProductsAllegroZ61.dmxOut, 2)
        XCTAssertEqual(OEMCode.adjProductsAllegroZ61.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjProductsAllegroZ61.isRDMSupported, true)

        // Oem_adj_products_encore_burst_200_1 (0x290B)
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst2001, 0x290B)
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst2001.description, "Oem_adj_products_encore_burst_200_1")
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst2001.mnemonic, "Oem_adj_products_encore_burst_200_1")
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst2001.manufacturer, "ADJ Products")
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst2001.product, "Encore Burst 200")
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst2001.dmxIn, 1)
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst2001.dmxOut, 1)
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst2001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst2001.isRDMSupported, true)

        // Oem_adj_products_encore_burst_200b_1 (0x28FF)
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst200B1, 0x28FF)
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst200B1.description, "Oem_adj_products_encore_burst_200b_1")
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst200B1.mnemonic, "Oem_adj_products_encore_burst_200b_1")
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst200B1.manufacturer, "ADJ PRODUCTS")
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst200B1.product, "ENCORE BURST 200b")
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst200B1.dmxIn, 1)
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst200B1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst200B1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjProductsEncoreBurst200B1.isRDMSupported, true)

        // Oem_adj_products_flash_kling_batten_1 (0x2939)
        XCTAssertEqual(OEMCode.adjProductsFlashKlingBatten1, 0x2939)
        XCTAssertEqual(OEMCode.adjProductsFlashKlingBatten1.description, "Oem_adj_products_flash_kling_batten_1")
        XCTAssertEqual(OEMCode.adjProductsFlashKlingBatten1.mnemonic, "Oem_adj_products_flash_kling_batten_1")
        XCTAssertEqual(OEMCode.adjProductsFlashKlingBatten1.manufacturer, "ADJ Products")
        XCTAssertEqual(OEMCode.adjProductsFlashKlingBatten1.product, "Flash Kling Batten")
        XCTAssertEqual(OEMCode.adjProductsFlashKlingBatten1.dmxIn, 1)
        XCTAssertEqual(OEMCode.adjProductsFlashKlingBatten1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adjProductsFlashKlingBatten1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjProductsFlashKlingBatten1.isRDMSupported, false)

        // Oem_adj_products_flash_kling_strip_1 (0x2938)
        XCTAssertEqual(OEMCode.adjProductsFlashKlingStrip1, 0x2938)
        XCTAssertEqual(OEMCode.adjProductsFlashKlingStrip1.description, "Oem_adj_products_flash_kling_strip_1")
        XCTAssertEqual(OEMCode.adjProductsFlashKlingStrip1.mnemonic, "Oem_adj_products_flash_kling_strip_1")
        XCTAssertEqual(OEMCode.adjProductsFlashKlingStrip1.manufacturer, "ADJ Products")
        XCTAssertEqual(OEMCode.adjProductsFlashKlingStrip1.product, "Flash Kling Strip")
        XCTAssertEqual(OEMCode.adjProductsFlashKlingStrip1.dmxIn, 1)
        XCTAssertEqual(OEMCode.adjProductsFlashKlingStrip1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adjProductsFlashKlingStrip1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjProductsFlashKlingStrip1.isRDMSupported, true)

        // Oem_adj_products_hydro_wash_x19_1 (0x2A52)
        XCTAssertEqual(OEMCode.adjProductsHydroWashX191, 0x2A52)
        XCTAssertEqual(OEMCode.adjProductsHydroWashX191.description, "Oem_adj_products_hydro_wash_x19_1")
        XCTAssertEqual(OEMCode.adjProductsHydroWashX191.mnemonic, "Oem_adj_products_hydro_wash_x19_1")
        XCTAssertEqual(OEMCode.adjProductsHydroWashX191.manufacturer, "ADJ PRODUCTS")
        XCTAssertEqual(OEMCode.adjProductsHydroWashX191.product, "HYDRO WASH X19")
        XCTAssertEqual(OEMCode.adjProductsHydroWashX191.dmxIn, 1)
        XCTAssertEqual(OEMCode.adjProductsHydroWashX191.dmxOut, 1)
        XCTAssertEqual(OEMCode.adjProductsHydroWashX191.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjProductsHydroWashX191.isRDMSupported, true)

        // Oem_adj_products_par_z100_rgbw_1 (0x2923)
        XCTAssertEqual(OEMCode.adjProductsParZ100Rgbw1, 0x2923)
        XCTAssertEqual(OEMCode.adjProductsParZ100Rgbw1.description, "Oem_adj_products_par_z100_rgbw_1")
        XCTAssertEqual(OEMCode.adjProductsParZ100Rgbw1.mnemonic, "Oem_adj_products_par_z100_rgbw_1")
        XCTAssertEqual(OEMCode.adjProductsParZ100Rgbw1.manufacturer, "ADJ Products")
        XCTAssertEqual(OEMCode.adjProductsParZ100Rgbw1.product, "Par Z100 RGBW")
        XCTAssertEqual(OEMCode.adjProductsParZ100Rgbw1.dmxIn, 1)
        XCTAssertEqual(OEMCode.adjProductsParZ100Rgbw1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adjProductsParZ100Rgbw1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjProductsParZ100Rgbw1.isRDMSupported, true)

        // Oem_adj_products_trusshub_u_1 (0x2A3E)
        XCTAssertEqual(OEMCode.adjProductsTrusshubU1, 0x2A3E)
        XCTAssertEqual(OEMCode.adjProductsTrusshubU1.description, "Oem_adj_products_trusshub_u_1")
        XCTAssertEqual(OEMCode.adjProductsTrusshubU1.mnemonic, "Oem_adj_products_trusshub_u_1")
        XCTAssertEqual(OEMCode.adjProductsTrusshubU1.manufacturer, "ADJ Products")
        XCTAssertEqual(OEMCode.adjProductsTrusshubU1.product, "TrussHub U")
        XCTAssertEqual(OEMCode.adjProductsTrusshubU1.dmxIn, 1)
        XCTAssertEqual(OEMCode.adjProductsTrusshubU1.dmxOut, 4)
        XCTAssertEqual(OEMCode.adjProductsTrusshubU1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjProductsTrusshubU1.isRDMSupported, true)

        // Oem_ainetauto_lj_1 (0x2922)
        XCTAssertEqual(OEMCode.ainetautoLj1, 0x2922)
        XCTAssertEqual(OEMCode.ainetautoLj1.description, "Oem_ainetauto_lj_1")
        XCTAssertEqual(OEMCode.ainetautoLj1.mnemonic, "Oem_ainetauto_lj_1")
        XCTAssertEqual(OEMCode.ainetautoLj1.manufacturer, "ainetauto")
        XCTAssertEqual(OEMCode.ainetautoLj1.product, "LJ")
        XCTAssertEqual(OEMCode.ainetautoLj1.dmxIn, 1)
        XCTAssertEqual(OEMCode.ainetautoLj1.dmxOut, 1)
        XCTAssertEqual(OEMCode.ainetautoLj1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ainetautoLj1.isRDMSupported, true)

        // Oem_alex_sagias_pixled_1 (0x29B1)
        XCTAssertEqual(OEMCode.alexSagiasPixled1, 0x29B1)
        XCTAssertEqual(OEMCode.alexSagiasPixled1.description, "Oem_alex_sagias_pixled_1")
        XCTAssertEqual(OEMCode.alexSagiasPixled1.mnemonic, "Oem_alex_sagias_pixled_1")
        XCTAssertEqual(OEMCode.alexSagiasPixled1.manufacturer, "Alex Sagias")
        XCTAssertEqual(OEMCode.alexSagiasPixled1.product, "PixLed")
        XCTAssertEqual(OEMCode.alexSagiasPixled1.dmxIn, 0)
        XCTAssertEqual(OEMCode.alexSagiasPixled1.dmxOut, 80)
        XCTAssertEqual(OEMCode.alexSagiasPixled1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.alexSagiasPixled1.isRDMSupported, false)

        // Oem_ambion_gmbh_ambrain_flex_led_gate_1 (0x2973)
        XCTAssertEqual(OEMCode.ambionGmbhAmbrainFlexLedGate1, 0x2973)
        XCTAssertEqual(OEMCode.ambionGmbhAmbrainFlexLedGate1.description, "Oem_ambion_gmbh_ambrain_flex_led_gate_1")
        XCTAssertEqual(OEMCode.ambionGmbhAmbrainFlexLedGate1.mnemonic, "Oem_ambion_gmbh_ambrain_flex_led_gate_1")
        XCTAssertEqual(OEMCode.ambionGmbhAmbrainFlexLedGate1.manufacturer, "Ambion Gmbh Ambrain")
        XCTAssertEqual(OEMCode.ambionGmbhAmbrainFlexLedGate1.product, "Flex Led Gate")
        XCTAssertEqual(OEMCode.ambionGmbhAmbrainFlexLedGate1.dmxIn, 0)
        XCTAssertEqual(OEMCode.ambionGmbhAmbrainFlexLedGate1.dmxOut, 1)
        XCTAssertEqual(OEMCode.ambionGmbhAmbrainFlexLedGate1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ambionGmbhAmbrainFlexLedGate1.isRDMSupported, true)

        // Oem_amolvin_dmx_node_1 (0x29A4)
        XCTAssertEqual(OEMCode.amolvinDmxNode1, 0x29A4)
        XCTAssertEqual(OEMCode.amolvinDmxNode1.description, "Oem_amolvin_dmx_node_1")
        XCTAssertEqual(OEMCode.amolvinDmxNode1.mnemonic, "Oem_amolvin_dmx_node_1")
        XCTAssertEqual(OEMCode.amolvinDmxNode1.manufacturer, "AMOLVIN")
        XCTAssertEqual(OEMCode.amolvinDmxNode1.product, "DMX NODE")
        XCTAssertEqual(OEMCode.amolvinDmxNode1.dmxIn, 4)
        XCTAssertEqual(OEMCode.amolvinDmxNode1.dmxOut, 4)
        XCTAssertEqual(OEMCode.amolvinDmxNode1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.amolvinDmxNode1.isRDMSupported, false)

        // Oem_archon_archon_dev_1 (0x2A1A)
        XCTAssertEqual(OEMCode.archonArchonDev1, 0x2A1A)
        XCTAssertEqual(OEMCode.archonArchonDev1.description, "Oem_archon_archon_dev_1")
        XCTAssertEqual(OEMCode.archonArchonDev1.mnemonic, "Oem_archon_archon_dev_1")
        XCTAssertEqual(OEMCode.archonArchonDev1.manufacturer, "Archon")
        XCTAssertEqual(OEMCode.archonArchonDev1.product, "Archon Dev")
        XCTAssertEqual(OEMCode.archonArchonDev1.dmxIn, 512)
        XCTAssertEqual(OEMCode.archonArchonDev1.dmxOut, 512)
        XCTAssertEqual(OEMCode.archonArchonDev1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.archonArchonDev1.isRDMSupported, true)

        // Oem_arrigo_lighting_al_a4rgb_1 (0x2927)
        XCTAssertEqual(OEMCode.arrigoLightingAlA4Rgb1, 0x2927)
        XCTAssertEqual(OEMCode.arrigoLightingAlA4Rgb1.description, "Oem_arrigo_lighting_al_a4rgb_1")
        XCTAssertEqual(OEMCode.arrigoLightingAlA4Rgb1.mnemonic, "Oem_arrigo_lighting_al_a4rgb_1")
        XCTAssertEqual(OEMCode.arrigoLightingAlA4Rgb1.manufacturer, "Arrigo Lighting")
        XCTAssertEqual(OEMCode.arrigoLightingAlA4Rgb1.product, "AL A4RGB")
        XCTAssertEqual(OEMCode.arrigoLightingAlA4Rgb1.dmxIn, 0)
        XCTAssertEqual(OEMCode.arrigoLightingAlA4Rgb1.dmxOut, 1)
        XCTAssertEqual(OEMCode.arrigoLightingAlA4Rgb1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.arrigoLightingAlA4Rgb1.isRDMSupported, false)

        // Oem_arrigo_lighting_al_ws2812b_1 (0x2979)
        XCTAssertEqual(OEMCode.arrigoLightingAlWs2812B1, 0x2979)
        XCTAssertEqual(OEMCode.arrigoLightingAlWs2812B1.description, "Oem_arrigo_lighting_al_ws2812b_1")
        XCTAssertEqual(OEMCode.arrigoLightingAlWs2812B1.mnemonic, "Oem_arrigo_lighting_al_ws2812b_1")
        XCTAssertEqual(OEMCode.arrigoLightingAlWs2812B1.manufacturer, "Arrigo Lighting")
        XCTAssertEqual(OEMCode.arrigoLightingAlWs2812B1.product, "AL WS2812B")
        XCTAssertEqual(OEMCode.arrigoLightingAlWs2812B1.dmxIn, 0)
        XCTAssertEqual(OEMCode.arrigoLightingAlWs2812B1.dmxOut, 4)
        XCTAssertEqual(OEMCode.arrigoLightingAlWs2812B1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.arrigoLightingAlWs2812B1.isRDMSupported, false)

        // Oem_arrigo_lighting_arrigo_lighting_liberty_22_1 (0x2929)
        XCTAssertEqual(OEMCode.arrigoLightingArrigoLightingLiberty221, 0x2929)
        XCTAssertEqual(OEMCode.arrigoLightingArrigoLightingLiberty221.description, "Oem_arrigo_lighting_arrigo_lighting_liberty_22_1")
        XCTAssertEqual(OEMCode.arrigoLightingArrigoLightingLiberty221.mnemonic, "Oem_arrigo_lighting_arrigo_lighting_liberty_22_1")
        XCTAssertEqual(OEMCode.arrigoLightingArrigoLightingLiberty221.manufacturer, "Arrigo Lighting")
        XCTAssertEqual(OEMCode.arrigoLightingArrigoLightingLiberty221.product, "Arrigo Lighting Liberty 22")
        XCTAssertEqual(OEMCode.arrigoLightingArrigoLightingLiberty221.dmxIn, 0)
        XCTAssertEqual(OEMCode.arrigoLightingArrigoLightingLiberty221.dmxOut, 1)
        XCTAssertEqual(OEMCode.arrigoLightingArrigoLightingLiberty221.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.arrigoLightingArrigoLightingLiberty221.isRDMSupported, false)

        // Oem_astera_led_technology_gmbh_10way_titan_powersupply_1 (0x294E)
        XCTAssertEqual(OEMCode.asteraLedTechnologyGmbh10WayTitanPowersupply1, 0x294E)
        XCTAssertEqual(OEMCode.asteraLedTechnologyGmbh10WayTitanPowersupply1.description, "Oem_astera_led_technology_gmbh_10way_titan_powersupply_1")
        XCTAssertEqual(OEMCode.asteraLedTechnologyGmbh10WayTitanPowersupply1.mnemonic, "Oem_astera_led_technology_gmbh_10way_titan_powersupply_1")
        XCTAssertEqual(OEMCode.asteraLedTechnologyGmbh10WayTitanPowersupply1.manufacturer, "Astera LED Technology GmbH")
        XCTAssertEqual(OEMCode.asteraLedTechnologyGmbh10WayTitanPowersupply1.product, "10way Titan Powersupply")
        XCTAssertEqual(OEMCode.asteraLedTechnologyGmbh10WayTitanPowersupply1.dmxIn, 1)
        XCTAssertEqual(OEMCode.asteraLedTechnologyGmbh10WayTitanPowersupply1.dmxOut, 1)
        XCTAssertEqual(OEMCode.asteraLedTechnologyGmbh10WayTitanPowersupply1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.asteraLedTechnologyGmbh10WayTitanPowersupply1.isRDMSupported, false)

        // Oem_atmosphere_media_gmbh_atmosphere_media_player_1 (0x298D)
        XCTAssertEqual(OEMCode.atmosphereMediaGmbhAtmosphereMediaPlayer1, 0x298D)
        XCTAssertEqual(OEMCode.atmosphereMediaGmbhAtmosphereMediaPlayer1.description, "Oem_atmosphere_media_gmbh_atmosphere_media_player_1")
        XCTAssertEqual(OEMCode.atmosphereMediaGmbhAtmosphereMediaPlayer1.mnemonic, "Oem_atmosphere_media_gmbh_atmosphere_media_player_1")
        XCTAssertEqual(OEMCode.atmosphereMediaGmbhAtmosphereMediaPlayer1.manufacturer, "atmosphere media gmbH")
        XCTAssertEqual(OEMCode.atmosphereMediaGmbhAtmosphereMediaPlayer1.product, "atmosphere media player")
        XCTAssertEqual(OEMCode.atmosphereMediaGmbhAtmosphereMediaPlayer1.dmxIn, 0)
        XCTAssertEqual(OEMCode.atmosphereMediaGmbhAtmosphereMediaPlayer1.dmxOut, 1)
        XCTAssertEqual(OEMCode.atmosphereMediaGmbhAtmosphereMediaPlayer1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.atmosphereMediaGmbhAtmosphereMediaPlayer1.isRDMSupported, false)

        // Oem_atomica_peru_arri_skypanel_1 (0x2950)
        XCTAssertEqual(OEMCode.atomicaPeruArriSkypanel1, 0x2950)
        XCTAssertEqual(OEMCode.atomicaPeruArriSkypanel1.description, "Oem_atomica_peru_arri_skypanel_1")
        XCTAssertEqual(OEMCode.atomicaPeruArriSkypanel1.mnemonic, "Oem_atomica_peru_arri_skypanel_1")
        XCTAssertEqual(OEMCode.atomicaPeruArriSkypanel1.manufacturer, "atomica peru")
        XCTAssertEqual(OEMCode.atomicaPeruArriSkypanel1.product, "arri skypanel")
        XCTAssertEqual(OEMCode.atomicaPeruArriSkypanel1.dmxIn, 1)
        XCTAssertEqual(OEMCode.atomicaPeruArriSkypanel1.dmxOut, 1)
        XCTAssertEqual(OEMCode.atomicaPeruArriSkypanel1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.atomicaPeruArriSkypanel1.isRDMSupported, true)

        // Oem_audioligh_hd217_1_1 (0x294A)
        XCTAssertEqual(OEMCode.audiolighHd21711, 0x294A)
        XCTAssertEqual(OEMCode.audiolighHd21711.description, "Oem_audioligh_hd217_1_1")
        XCTAssertEqual(OEMCode.audiolighHd21711.mnemonic, "Oem_audioligh_hd217_1_1")
        XCTAssertEqual(OEMCode.audiolighHd21711.manufacturer, "audioligh")
        XCTAssertEqual(OEMCode.audiolighHd21711.product, "HD217 1")
        XCTAssertEqual(OEMCode.audiolighHd21711.dmxIn, 1)
        XCTAssertEqual(OEMCode.audiolighHd21711.dmxOut, 2)
        XCTAssertEqual(OEMCode.audiolighHd21711.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.audiolighHd21711.isRDMSupported, true)

        // Oem_audioligh_hd217_2_1 (0x294B)
        XCTAssertEqual(OEMCode.audiolighHd21721, 0x294B)
        XCTAssertEqual(OEMCode.audiolighHd21721.description, "Oem_audioligh_hd217_2_1")
        XCTAssertEqual(OEMCode.audiolighHd21721.mnemonic, "Oem_audioligh_hd217_2_1")
        XCTAssertEqual(OEMCode.audiolighHd21721.manufacturer, "audioligh")
        XCTAssertEqual(OEMCode.audiolighHd21721.product, "HD217 2")
        XCTAssertEqual(OEMCode.audiolighHd21721.dmxIn, 1)
        XCTAssertEqual(OEMCode.audiolighHd21721.dmxOut, 8)
        XCTAssertEqual(OEMCode.audiolighHd21721.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.audiolighHd21721.isRDMSupported, true)

        // Oem_audiowerk_lc1_1 (0x297B)
        XCTAssertEqual(OEMCode.audiowerkLc11, 0x297B)
        XCTAssertEqual(OEMCode.audiowerkLc11.description, "Oem_audiowerk_lc1_1")
        XCTAssertEqual(OEMCode.audiowerkLc11.mnemonic, "Oem_audiowerk_lc1_1")
        XCTAssertEqual(OEMCode.audiowerkLc11.manufacturer, "Audiowerk")
        XCTAssertEqual(OEMCode.audiowerkLc11.product, "LC1")
        XCTAssertEqual(OEMCode.audiowerkLc11.dmxIn, 0)
        XCTAssertEqual(OEMCode.audiowerkLc11.dmxOut, 2)
        XCTAssertEqual(OEMCode.audiowerkLc11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.audiowerkLc11.isRDMSupported, false)

        // Oem_bafa_elektronik_ve_isik_tasarimlari_sanayii_ticaret_sti._zerolightartnet16_1 (0x2A47)
        XCTAssertEqual(OEMCode.bafaElektronikVeIsikTasarimlariSanayiiTicaretStiZerolightartnet161, 0x2A47)
        XCTAssertEqual(OEMCode.bafaElektronikVeIsikTasarimlariSanayiiTicaretStiZerolightartnet161.description, "Oem_bafa_elektronik_ve_isik_tasarimlari_sanayii_ticaret_sti._zerolightartnet16_1")
        XCTAssertEqual(OEMCode.bafaElektronikVeIsikTasarimlariSanayiiTicaretStiZerolightartnet161.mnemonic, "Oem_bafa_elektronik_ve_isik_tasarimlari_sanayii_ticaret_sti._zerolightartnet16_1")
        XCTAssertEqual(OEMCode.bafaElektronikVeIsikTasarimlariSanayiiTicaretStiZerolightartnet161.manufacturer, "Bafa Elektronik ve Isik Tasarimlari Sanayii Ticaret Sti.")
        XCTAssertEqual(OEMCode.bafaElektronikVeIsikTasarimlariSanayiiTicaretStiZerolightartnet161.product, "ZerolightArtnet16")
        XCTAssertEqual(OEMCode.bafaElektronikVeIsikTasarimlariSanayiiTicaretStiZerolightartnet161.dmxIn, 16)
        XCTAssertEqual(OEMCode.bafaElektronikVeIsikTasarimlariSanayiiTicaretStiZerolightartnet161.dmxOut, 16)
        XCTAssertEqual(OEMCode.bafaElektronikVeIsikTasarimlariSanayiiTicaretStiZerolightartnet161.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.bafaElektronikVeIsikTasarimlariSanayiiTicaretStiZerolightartnet161.isRDMSupported, false)

        // Oem_bandhaus_straubing_ev_wireless2dmx_bridge_1 (0x292C)
        XCTAssertEqual(OEMCode.bandhausStraubingEvWireless2DmxBridge1, 0x292C)
        XCTAssertEqual(OEMCode.bandhausStraubingEvWireless2DmxBridge1.description, "Oem_bandhaus_straubing_ev_wireless2dmx_bridge_1")
        XCTAssertEqual(OEMCode.bandhausStraubingEvWireless2DmxBridge1.mnemonic, "Oem_bandhaus_straubing_ev_wireless2dmx_bridge_1")
        XCTAssertEqual(OEMCode.bandhausStraubingEvWireless2DmxBridge1.manufacturer, "Bandhaus Straubing eV")
        XCTAssertEqual(OEMCode.bandhausStraubingEvWireless2DmxBridge1.product, "Wireless2DMX Bridge")
        XCTAssertEqual(OEMCode.bandhausStraubingEvWireless2DmxBridge1.dmxIn, 0)
        XCTAssertEqual(OEMCode.bandhausStraubingEvWireless2DmxBridge1.dmxOut, 1)
        XCTAssertEqual(OEMCode.bandhausStraubingEvWireless2DmxBridge1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.bandhausStraubingEvWireless2DmxBridge1.isRDMSupported, false)

        // Oem_belayingpin_com_bpc_video_server_1 (0x2A2B)
        XCTAssertEqual(OEMCode.belayingpinComBpcVideoServer1, 0x2A2B)
        XCTAssertEqual(OEMCode.belayingpinComBpcVideoServer1.description, "Oem_belayingpin_com_bpc_video_server_1")
        XCTAssertEqual(OEMCode.belayingpinComBpcVideoServer1.mnemonic, "Oem_belayingpin_com_bpc_video_server_1")
        XCTAssertEqual(OEMCode.belayingpinComBpcVideoServer1.manufacturer, "Belayingpin com")
        XCTAssertEqual(OEMCode.belayingpinComBpcVideoServer1.product, "BPC Video Server")
        XCTAssertEqual(OEMCode.belayingpinComBpcVideoServer1.dmxIn, 1)
        XCTAssertEqual(OEMCode.belayingpinComBpcVideoServer1.dmxOut, 0)
        XCTAssertEqual(OEMCode.belayingpinComBpcVideoServer1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.belayingpinComBpcVideoServer1.isRDMSupported, false)

        // Oem_blinkinlabs_supersweet_1 (0x2A04)
        XCTAssertEqual(OEMCode.blinkinlabsSupersweet1, 0x2A04)
        XCTAssertEqual(OEMCode.blinkinlabsSupersweet1.description, "Oem_blinkinlabs_supersweet_1")
        XCTAssertEqual(OEMCode.blinkinlabsSupersweet1.mnemonic, "Oem_blinkinlabs_supersweet_1")
        XCTAssertEqual(OEMCode.blinkinlabsSupersweet1.manufacturer, "Blinkinlabs")
        XCTAssertEqual(OEMCode.blinkinlabsSupersweet1.product, "SuperSweet")
        XCTAssertEqual(OEMCode.blinkinlabsSupersweet1.dmxIn, 1)
        XCTAssertEqual(OEMCode.blinkinlabsSupersweet1.dmxOut, 11)
        XCTAssertEqual(OEMCode.blinkinlabsSupersweet1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.blinkinlabsSupersweet1.isRDMSupported, false)

        // Oem_blue_ridge_concepts_inc_eladnidesktop_1 (0x2A00)
        XCTAssertEqual(OEMCode.blueRidgeConceptsIncEladnidesktop1, 0x2A00)
        XCTAssertEqual(OEMCode.blueRidgeConceptsIncEladnidesktop1.description, "Oem_blue_ridge_concepts_inc_eladnidesktop_1")
        XCTAssertEqual(OEMCode.blueRidgeConceptsIncEladnidesktop1.mnemonic, "Oem_blue_ridge_concepts_inc_eladnidesktop_1")
        XCTAssertEqual(OEMCode.blueRidgeConceptsIncEladnidesktop1.manufacturer, "Blue Ridge Concepts Inc")
        XCTAssertEqual(OEMCode.blueRidgeConceptsIncEladnidesktop1.product, "EladniDesktop")
        XCTAssertEqual(OEMCode.blueRidgeConceptsIncEladnidesktop1.dmxIn, 1)
        XCTAssertEqual(OEMCode.blueRidgeConceptsIncEladnidesktop1.dmxOut, 4)
        XCTAssertEqual(OEMCode.blueRidgeConceptsIncEladnidesktop1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.blueRidgeConceptsIncEladnidesktop1.isRDMSupported, false)

        // Oem_bonkon_dmx_link_pro1_1 (0x2A12)
        XCTAssertEqual(OEMCode.bonkonDmxLinkPro11, 0x2A12)
        XCTAssertEqual(OEMCode.bonkonDmxLinkPro11.description, "Oem_bonkon_dmx_link_pro1_1")
        XCTAssertEqual(OEMCode.bonkonDmxLinkPro11.mnemonic, "Oem_bonkon_dmx_link_pro1_1")
        XCTAssertEqual(OEMCode.bonkonDmxLinkPro11.manufacturer, "BonKon")
        XCTAssertEqual(OEMCode.bonkonDmxLinkPro11.product, "DMX Link Pro1")
        XCTAssertEqual(OEMCode.bonkonDmxLinkPro11.dmxIn, 512)
        XCTAssertEqual(OEMCode.bonkonDmxLinkPro11.dmxOut, 512)
        XCTAssertEqual(OEMCode.bonkonDmxLinkPro11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.bonkonDmxLinkPro11.isRDMSupported, true)

        // Oem_brink_ventures_llc_blackout_lighting_console_1 (0x29C7)
        XCTAssertEqual(OEMCode.brinkVenturesLlcBlackoutLightingConsole1, 0x29C7)
        XCTAssertEqual(OEMCode.brinkVenturesLlcBlackoutLightingConsole1.description, "Oem_brink_ventures_llc_blackout_lighting_console_1")
        XCTAssertEqual(OEMCode.brinkVenturesLlcBlackoutLightingConsole1.mnemonic, "Oem_brink_ventures_llc_blackout_lighting_console_1")
        XCTAssertEqual(OEMCode.brinkVenturesLlcBlackoutLightingConsole1.manufacturer, "Brink Ventures LLC")
        XCTAssertEqual(OEMCode.brinkVenturesLlcBlackoutLightingConsole1.product, "Blackout Lighting Console")
        XCTAssertEqual(OEMCode.brinkVenturesLlcBlackoutLightingConsole1.dmxIn, 0)
        XCTAssertEqual(OEMCode.brinkVenturesLlcBlackoutLightingConsole1.dmxOut, 0)
        XCTAssertEqual(OEMCode.brinkVenturesLlcBlackoutLightingConsole1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.brinkVenturesLlcBlackoutLightingConsole1.isRDMSupported, false)

        // Oem_bsl_bv_epikon_1 (0x299B)
        XCTAssertEqual(OEMCode.bslBvEpikon1, 0x299B)
        XCTAssertEqual(OEMCode.bslBvEpikon1.description, "Oem_bsl_bv_epikon_1")
        XCTAssertEqual(OEMCode.bslBvEpikon1.mnemonic, "Oem_bsl_bv_epikon_1")
        XCTAssertEqual(OEMCode.bslBvEpikon1.manufacturer, "BSL BV")
        XCTAssertEqual(OEMCode.bslBvEpikon1.product, "Epikon")
        XCTAssertEqual(OEMCode.bslBvEpikon1.dmxIn, 2)
        XCTAssertEqual(OEMCode.bslBvEpikon1.dmxOut, 2)
        XCTAssertEqual(OEMCode.bslBvEpikon1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.bslBvEpikon1.isRDMSupported, false)

        // Oem_bsl_bv_node_2_1 (0x2A41)
        XCTAssertEqual(OEMCode.bslBvNode21, 0x2A41)
        XCTAssertEqual(OEMCode.bslBvNode21.description, "Oem_bsl_bv_node_2_1")
        XCTAssertEqual(OEMCode.bslBvNode21.mnemonic, "Oem_bsl_bv_node_2_1")
        XCTAssertEqual(OEMCode.bslBvNode21.manufacturer, "BSL BV")
        XCTAssertEqual(OEMCode.bslBvNode21.product, "Node 2")
        XCTAssertEqual(OEMCode.bslBvNode21.dmxIn, 2)
        XCTAssertEqual(OEMCode.bslBvNode21.dmxOut, 2)
        XCTAssertEqual(OEMCode.bslBvNode21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.bslBvNode21.isRDMSupported, false)

        // Oem_bsl_bv_powernode_8_1 (0x2A40)
        XCTAssertEqual(OEMCode.bslBvPowernode81, 0x2A40)
        XCTAssertEqual(OEMCode.bslBvPowernode81.description, "Oem_bsl_bv_powernode_8_1")
        XCTAssertEqual(OEMCode.bslBvPowernode81.mnemonic, "Oem_bsl_bv_powernode_8_1")
        XCTAssertEqual(OEMCode.bslBvPowernode81.manufacturer, "BSL BV")
        XCTAssertEqual(OEMCode.bslBvPowernode81.product, "PowerNode 8")
        XCTAssertEqual(OEMCode.bslBvPowernode81.dmxIn, 0)
        XCTAssertEqual(OEMCode.bslBvPowernode81.dmxOut, 8)
        XCTAssertEqual(OEMCode.bslBvPowernode81.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.bslBvPowernode81.isRDMSupported, false)

        // Oem_buehler_electronic_gmbh_lsdigital_dmx_light_interface_1 (0x294F)
        XCTAssertEqual(OEMCode.buehlerElectronicGmbhLsdigitalDmxLightInterface1, 0x294F)
        XCTAssertEqual(OEMCode.buehlerElectronicGmbhLsdigitalDmxLightInterface1.description, "Oem_buehler_electronic_gmbh_lsdigital_dmx_light_interface_1")
        XCTAssertEqual(OEMCode.buehlerElectronicGmbhLsdigitalDmxLightInterface1.mnemonic, "Oem_buehler_electronic_gmbh_lsdigital_dmx_light_interface_1")
        XCTAssertEqual(OEMCode.buehlerElectronicGmbhLsdigitalDmxLightInterface1.manufacturer, "Buehler electronic GmbH LSdigital")
        XCTAssertEqual(OEMCode.buehlerElectronicGmbhLsdigitalDmxLightInterface1.product, "DMX Light Interface")
        XCTAssertEqual(OEMCode.buehlerElectronicGmbhLsdigitalDmxLightInterface1.dmxIn, 0)
        XCTAssertEqual(OEMCode.buehlerElectronicGmbhLsdigitalDmxLightInterface1.dmxOut, 1)
        XCTAssertEqual(OEMCode.buehlerElectronicGmbhLsdigitalDmxLightInterface1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.buehlerElectronicGmbhLsdigitalDmxLightInterface1.isRDMSupported, false)

        // Oem_chauvet_lighting_ovation_b_1965fc_1 (0x29E9)
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc1, 0x29E9)
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc1.description, "Oem_chauvet_lighting_ovation_b_1965fc_1")
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc1.mnemonic, "Oem_chauvet_lighting_ovation_b_1965fc_1")
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc1.manufacturer, "Chauvet Lighting")
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc1.product, "Ovation B 1965FC")
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc1.isRDMSupported, true)

        // Oem_chauvet_lighting_ovation_b_1965fc_2 (0x29EA)
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc2, 0x29EA)
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc2.description, "Oem_chauvet_lighting_ovation_b_1965fc_2")
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc2.mnemonic, "Oem_chauvet_lighting_ovation_b_1965fc_2")
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc2.manufacturer, "Chauvet Lighting")
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc2.product, "Ovation B 1965FC")
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc2.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc2.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetLightingOvationB1965Fc2.isRDMSupported, true)

        // Oem_chauvet_professional_colorado_solo_batten_1 (0x29F4)
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten1, 0x29F4)
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten1.description, "Oem_chauvet_professional_colorado_solo_batten_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten1.mnemonic, "Oem_chauvet_professional_colorado_solo_batten_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten1.product, "Colorado Solo Batten")
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten1.isRDMSupported, true)

        // Oem_chauvet_professional_colorado_solo_batten_4_1 (0x29F3)
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten41, 0x29F3)
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten41.description, "Oem_chauvet_professional_colorado_solo_batten_4_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten41.mnemonic, "Oem_chauvet_professional_colorado_solo_batten_4_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten41.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten41.product, "Colorado Solo Batten 4")
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten41.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten41.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalColoradoSoloBatten41.isRDMSupported, true)

        // Oem_chauvet_professional_epix_flex_drive_1 (0x2978)
        XCTAssertEqual(OEMCode.chauvetProfessionalEpixFlexDrive1, 0x2978)
        XCTAssertEqual(OEMCode.chauvetProfessionalEpixFlexDrive1.description, "Oem_chauvet_professional_epix_flex_drive_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalEpixFlexDrive1.mnemonic, "Oem_chauvet_professional_epix_flex_drive_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalEpixFlexDrive1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalEpixFlexDrive1.product, "Epix Flex Drive")
        XCTAssertEqual(OEMCode.chauvetProfessionalEpixFlexDrive1.dmxIn, 2)
        XCTAssertEqual(OEMCode.chauvetProfessionalEpixFlexDrive1.dmxOut, 0)
        XCTAssertEqual(OEMCode.chauvetProfessionalEpixFlexDrive1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chauvetProfessionalEpixFlexDrive1.isRDMSupported, true)

        // Oem_chauvet_professional_maverick_mk1_spot_1 (0x295D)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Spot1, 0x295D)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Spot1.description, "Oem_chauvet_professional_maverick_mk1_spot_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Spot1.mnemonic, "Oem_chauvet_professional_maverick_mk1_spot_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Spot1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Spot1.product, "Maverick MK1 Spot")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Spot1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Spot1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Spot1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Spot1.isRDMSupported, true)

        // Oem_chauvet_professional_maverick_mk2_profile_1 (0x295A)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Profile1, 0x295A)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Profile1.description, "Oem_chauvet_professional_maverick_mk2_profile_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Profile1.mnemonic, "Oem_chauvet_professional_maverick_mk2_profile_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Profile1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Profile1.product, "Maverick MK2 Profile")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Profile1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Profile1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Profile1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Profile1.isRDMSupported, true)

        // Oem_chauvet_professional_maverick_mk2_wash_1 (0x295C)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Wash1, 0x295C)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Wash1.description, "Oem_chauvet_professional_maverick_mk2_wash_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Wash1.mnemonic, "Oem_chauvet_professional_maverick_mk2_wash_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Wash1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Wash1.product, "Maverick MK2 Wash")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Wash1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Wash1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Wash1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk2Wash1.isRDMSupported, true)

        // Oem_chauvet_professional_maverick_mk3_profile_1 (0x29F2)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Profile1, 0x29F2)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Profile1.description, "Oem_chauvet_professional_maverick_mk3_profile_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Profile1.mnemonic, "Oem_chauvet_professional_maverick_mk3_profile_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Profile1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Profile1.product, "Maverick MK3 Profile")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Profile1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Profile1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Profile1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Profile1.isRDMSupported, true)

        // Oem_chauvet_professional_maverick_mk3_profile_cx_1 (0x29F0)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3ProfileCx1, 0x29F0)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3ProfileCx1.description, "Oem_chauvet_professional_maverick_mk3_profile_cx_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3ProfileCx1.mnemonic, "Oem_chauvet_professional_maverick_mk3_profile_cx_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3ProfileCx1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3ProfileCx1.product, "Maverick MK3 Profile CX")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3ProfileCx1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3ProfileCx1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3ProfileCx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3ProfileCx1.isRDMSupported, true)

        // Oem_chauvet_professional_maverick_mk3_spot_1 (0x29F1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Spot1, 0x29F1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Spot1.description, "Oem_chauvet_professional_maverick_mk3_spot_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Spot1.mnemonic, "Oem_chauvet_professional_maverick_mk3_spot_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Spot1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Spot1.product, "Maverick MK3 Spot")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Spot1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Spot1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Spot1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Spot1.isRDMSupported, true)

        // Oem_chauvet_professional_maverick_mk3_wash_1 (0x295B)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Wash1, 0x295B)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Wash1.description, "Oem_chauvet_professional_maverick_mk3_wash_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Wash1.mnemonic, "Oem_chauvet_professional_maverick_mk3_wash_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Wash1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Wash1.product, "Maverick MK3 Wash")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Wash1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Wash1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Wash1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk3Wash1.isRDMSupported, true)

        // Oem_chauvet_professional_maverick_mk_1_hybrid_1 (0x2958)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Hybrid1, 0x2958)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Hybrid1.description, "Oem_chauvet_professional_maverick_mk_1_hybrid_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Hybrid1.mnemonic, "Oem_chauvet_professional_maverick_mk_1_hybrid_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Hybrid1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Hybrid1.product, "Maverick MK 1 Hybrid")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Hybrid1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Hybrid1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Hybrid1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMk1Hybrid1.isRDMSupported, true)

        // Oem_chauvet_professional_maverick_mk_pyxis_1 (0x2959)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMkPyxis1, 0x2959)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMkPyxis1.description, "Oem_chauvet_professional_maverick_mk_pyxis_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMkPyxis1.mnemonic, "Oem_chauvet_professional_maverick_mk_pyxis_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMkPyxis1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMkPyxis1.product, "Maverick MK Pyxis")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMkPyxis1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMkPyxis1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMkPyxis1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickMkPyxis1.isRDMSupported, true)

        // Oem_chauvet_professional_maverick_silens_2_profile_1 (0x2A14)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickSilens2Profile1, 0x2A14)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickSilens2Profile1.description, "Oem_chauvet_professional_maverick_silens_2_profile_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickSilens2Profile1.mnemonic, "Oem_chauvet_professional_maverick_silens_2_profile_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickSilens2Profile1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickSilens2Profile1.product, "Maverick Silens 2 Profile")
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickSilens2Profile1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickSilens2Profile1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickSilens2Profile1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalMaverickSilens2Profile1.isRDMSupported, true)

        // Oem_chauvet_professional_rogue_r1_fxb_1 (0x2957)
        XCTAssertEqual(OEMCode.chauvetProfessionalRogueR1Fxb1, 0x2957)
        XCTAssertEqual(OEMCode.chauvetProfessionalRogueR1Fxb1.description, "Oem_chauvet_professional_rogue_r1_fxb_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalRogueR1Fxb1.mnemonic, "Oem_chauvet_professional_rogue_r1_fxb_1")
        XCTAssertEqual(OEMCode.chauvetProfessionalRogueR1Fxb1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProfessionalRogueR1Fxb1.product, "Rogue R1 FXB")
        XCTAssertEqual(OEMCode.chauvetProfessionalRogueR1Fxb1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalRogueR1Fxb1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetProfessionalRogueR1Fxb1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProfessionalRogueR1Fxb1.isRDMSupported, true)

        // Oem_chengduchenyudianzikeji_dmx2048ch_pro1_1 (0x2913)
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro11, 0x2913)
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro11.description, "Oem_chengduchenyudianzikeji_dmx2048ch_pro1_1")
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro11.mnemonic, "Oem_chengduchenyudianzikeji_dmx2048ch_pro1_1")
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro11.manufacturer, "ChengDuChenyuDianZiKeji")
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro11.product, "DMX2048CH PRO1")
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro11.dmxIn, 4)
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro11.dmxOut, 4)
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro11.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro11.isRDMSupported, true)

        // Oem_chengduchenyudianzikeji_dmx2048ch_pro2_1 (0x2914)
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro21, 0x2914)
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro21.description, "Oem_chengduchenyudianzikeji_dmx2048ch_pro2_1")
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro21.mnemonic, "Oem_chengduchenyudianzikeji_dmx2048ch_pro2_1")
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro21.manufacturer, "ChengDuChenyuDianZiKeji")
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro21.product, "DMX2048CH PRO2")
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro21.dmxIn, 4)
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro21.dmxOut, 4)
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro21.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chengduchenyudianzikejiDmx2048ChPro21.isRDMSupported, false)

        // Oem_city_theatrical_multiverse_gateway_1 (0x297F)
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseGateway1, 0x297F)
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseGateway1.description, "Oem_city_theatrical_multiverse_gateway_1")
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseGateway1.mnemonic, "Oem_city_theatrical_multiverse_gateway_1")
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseGateway1.manufacturer, "City Theatrical")
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseGateway1.product, "Multiverse Gateway")
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseGateway1.dmxIn, 0)
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseGateway1.dmxOut, 18)
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseGateway1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseGateway1.isRDMSupported, true)

        // Oem_city_theatrical_multiverse_transmitter_1 (0x2980)
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseTransmitter1, 0x2980)
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseTransmitter1.description, "Oem_city_theatrical_multiverse_transmitter_1")
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseTransmitter1.mnemonic, "Oem_city_theatrical_multiverse_transmitter_1")
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseTransmitter1.manufacturer, "City Theatrical")
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseTransmitter1.product, "Multiverse Transmitter")
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseTransmitter1.dmxIn, 0)
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseTransmitter1.dmxOut, 10)
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseTransmitter1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cityTheatricalMultiverseTransmitter1.isRDMSupported, true)

        // Oem_clay_paky_aleda_beam_200_1 (0x2976)
        XCTAssertEqual(OEMCode.clayPakyAledaBeam2001, 0x2976)
        XCTAssertEqual(OEMCode.clayPakyAledaBeam2001.description, "Oem_clay_paky_aleda_beam_200_1")
        XCTAssertEqual(OEMCode.clayPakyAledaBeam2001.mnemonic, "Oem_clay_paky_aleda_beam_200_1")
        XCTAssertEqual(OEMCode.clayPakyAledaBeam2001.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyAledaBeam2001.product, "ALEDA BEAM 200")
        XCTAssertEqual(OEMCode.clayPakyAledaBeam2001.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAledaBeam2001.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyAledaBeam2001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAledaBeam2001.isRDMSupported, true)

        // Oem_clay_paky_alqimya_1 (0x2A38)
        XCTAssertEqual(OEMCode.clayPakyAlqimya1, 0x2A38)
        XCTAssertEqual(OEMCode.clayPakyAlqimya1.description, "Oem_clay_paky_alqimya_1")
        XCTAssertEqual(OEMCode.clayPakyAlqimya1.mnemonic, "Oem_clay_paky_alqimya_1")
        XCTAssertEqual(OEMCode.clayPakyAlqimya1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyAlqimya1.product, "ALQIMYA")
        XCTAssertEqual(OEMCode.clayPakyAlqimya1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlqimya1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyAlqimya1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAlqimya1.isRDMSupported, true)

        // Oem_clay_paky_axcor_prof_600_hc_st_1 (0x298B)
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600HcSt1, 0x298B)
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600HcSt1.description, "Oem_clay_paky_axcor_prof_600_hc_st_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600HcSt1.mnemonic, "Oem_clay_paky_axcor_prof_600_hc_st_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600HcSt1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600HcSt1.product, "AXCOR PROFILE 600 HC ST")
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600HcSt1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600HcSt1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600HcSt1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600HcSt1.isRDMSupported, true)

        // Oem_clay_paky_axcor_prof_600_st_1 (0x298C)
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600St1, 0x298C)
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600St1.description, "Oem_clay_paky_axcor_prof_600_st_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600St1.mnemonic, "Oem_clay_paky_axcor_prof_600_st_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600St1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600St1.product, "AXCOR PROFILE 600 ST")
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600St1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600St1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600St1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAxcorProf600St1.isRDMSupported, true)

        // Oem_clay_paky_axcor_profile_600_teatro_1 (0x2A56)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile600Teatro1, 0x2A56)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile600Teatro1.description, "Oem_clay_paky_axcor_profile_600_teatro_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile600Teatro1.mnemonic, "Oem_clay_paky_axcor_profile_600_teatro_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile600Teatro1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile600Teatro1.product, "AXCOR PROFILE 600 TEATRO")
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile600Teatro1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile600Teatro1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile600Teatro1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile600Teatro1.isRDMSupported, true)

        // Oem_clay_paky_axcor_profile_900_6k_ln_1 (0x2982)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9006KLn1, 0x2982)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9006KLn1.description, "Oem_clay_paky_axcor_profile_900_6k_ln_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9006KLn1.mnemonic, "Oem_clay_paky_axcor_profile_900_6k_ln_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9006KLn1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9006KLn1.product, "AXCOR PROFILE 900 6K LN")
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9006KLn1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9006KLn1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9006KLn1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9006KLn1.isRDMSupported, true)

        // Oem_clay_paky_axcor_profile_900_8k_ln_1 (0x2983)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9008KLn1, 0x2983)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9008KLn1.description, "Oem_clay_paky_axcor_profile_900_8k_ln_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9008KLn1.mnemonic, "Oem_clay_paky_axcor_profile_900_8k_ln_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9008KLn1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9008KLn1.product, "AXCOR PROFILE 900 8K LN")
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9008KLn1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9008KLn1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9008KLn1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAxcorProfile9008KLn1.isRDMSupported, true)

        // Oem_clay_paky_axcor_wash_600_1 (0x298A)
        XCTAssertEqual(OEMCode.clayPakyAxcorWash6001, 0x298A)
        XCTAssertEqual(OEMCode.clayPakyAxcorWash6001.description, "Oem_clay_paky_axcor_wash_600_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorWash6001.mnemonic, "Oem_clay_paky_axcor_wash_600_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorWash6001.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyAxcorWash6001.product, "AXCOR WASH 600")
        XCTAssertEqual(OEMCode.clayPakyAxcorWash6001.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorWash6001.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorWash6001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAxcorWash6001.isRDMSupported, true)

        // Oem_clay_paky_axcor_wash_600_hc_1 (0x2989)
        XCTAssertEqual(OEMCode.clayPakyAxcorWash600Hc1, 0x2989)
        XCTAssertEqual(OEMCode.clayPakyAxcorWash600Hc1.description, "Oem_clay_paky_axcor_wash_600_hc_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorWash600Hc1.mnemonic, "Oem_clay_paky_axcor_wash_600_hc_1")
        XCTAssertEqual(OEMCode.clayPakyAxcorWash600Hc1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyAxcorWash600Hc1.product, "AXCOR WASH 600 HC")
        XCTAssertEqual(OEMCode.clayPakyAxcorWash600Hc1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorWash600Hc1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyAxcorWash600Hc1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAxcorWash600Hc1.isRDMSupported, true)

        // Oem_clay_paky_hy_b-eye_k25_teatro_1 (0x2A55)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK25Teatro1, 0x2A55)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK25Teatro1.description, "Oem_clay_paky_hy_b-eye_k25_teatro_1")
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK25Teatro1.mnemonic, "Oem_clay_paky_hy_b-eye_k25_teatro_1")
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK25Teatro1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK25Teatro1.product, "HY B-EYE K25 TEATRO")
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK25Teatro1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK25Teatro1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK25Teatro1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK25Teatro1.isRDMSupported, true)

        // Oem_clay_paky_hy_b_eye_k15_1 (0x2985)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK151, 0x2985)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK151.description, "Oem_clay_paky_hy_b_eye_k15_1")
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK151.mnemonic, "Oem_clay_paky_hy_b_eye_k15_1")
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK151.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK151.product, "HY_B EYE K15")
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK151.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK151.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK151.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK151.isRDMSupported, true)

        // Oem_clay_paky_hy_b_eye_k25_1 (0x2984)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK251, 0x2984)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK251.description, "Oem_clay_paky_hy_b_eye_k25_1")
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK251.mnemonic, "Oem_clay_paky_hy_b_eye_k25_1")
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK251.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK251.product, "HY_B EYE K25")
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK251.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK251.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK251.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyHyBEyeK251.isRDMSupported, true)

        // Oem_clay_paky_reflectxion_1 (0x2A33)
        XCTAssertEqual(OEMCode.clayPakyReflectxion1, 0x2A33)
        XCTAssertEqual(OEMCode.clayPakyReflectxion1.description, "Oem_clay_paky_reflectxion_1")
        XCTAssertEqual(OEMCode.clayPakyReflectxion1.mnemonic, "Oem_clay_paky_reflectxion_1")
        XCTAssertEqual(OEMCode.clayPakyReflectxion1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyReflectxion1.product, "REFLECTXION")
        XCTAssertEqual(OEMCode.clayPakyReflectxion1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyReflectxion1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyReflectxion1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyReflectxion1.isRDMSupported, true)

        // Oem_clay_paky_sharpy_plus_1 (0x2977)
        XCTAssertEqual(OEMCode.clayPakySharpyPlus1, 0x2977)
        XCTAssertEqual(OEMCode.clayPakySharpyPlus1.description, "Oem_clay_paky_sharpy_plus_1")
        XCTAssertEqual(OEMCode.clayPakySharpyPlus1.mnemonic, "Oem_clay_paky_sharpy_plus_1")
        XCTAssertEqual(OEMCode.clayPakySharpyPlus1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakySharpyPlus1.product, "SHARPY PLUS")
        XCTAssertEqual(OEMCode.clayPakySharpyPlus1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakySharpyPlus1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakySharpyPlus1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakySharpyPlus1.isRDMSupported, true)

        // Oem_clay_paky_xtylos_1 (0x29D5)
        XCTAssertEqual(OEMCode.clayPakyXtylos1, 0x29D5)
        XCTAssertEqual(OEMCode.clayPakyXtylos1.description, "Oem_clay_paky_xtylos_1")
        XCTAssertEqual(OEMCode.clayPakyXtylos1.mnemonic, "Oem_clay_paky_xtylos_1")
        XCTAssertEqual(OEMCode.clayPakyXtylos1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakyXtylos1.product, "XTYLOS")
        XCTAssertEqual(OEMCode.clayPakyXtylos1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyXtylos1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyXtylos1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyXtylos1.isRDMSupported, true)

        // Oem_claypaky_axcor_profile_400_1 (0x2945)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile4001, 0x2945)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile4001.description, "Oem_claypaky_axcor_profile_400_1")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile4001.mnemonic, "Oem_claypaky_axcor_profile_400_1")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile4001.manufacturer, "CLAYPAKY")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile4001.product, "AXCOR PROFILE 400")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile4001.dmxIn, 2)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile4001.dmxOut, 1)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile4001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile4001.isRDMSupported, true)

        // Oem_claypaky_axcor_profile_400_hc_1 (0x2944)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile400Hc1, 0x2944)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile400Hc1.description, "Oem_claypaky_axcor_profile_400_hc_1")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile400Hc1.mnemonic, "Oem_claypaky_axcor_profile_400_hc_1")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile400Hc1.manufacturer, "CLAYPAKY")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile400Hc1.product, "AXCOR PROFILE 400 HC")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile400Hc1.dmxIn, 1)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile400Hc1.dmxOut, 1)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile400Hc1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile400Hc1.isRDMSupported, true)

        // Oem_claypaky_axcor_profile_600_1 (0x2947)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile6001, 0x2947)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile6001.description, "Oem_claypaky_axcor_profile_600_1")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile6001.mnemonic, "Oem_claypaky_axcor_profile_600_1")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile6001.manufacturer, "CLAYPAKY")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile6001.product, "AXCOR PROFILE 600")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile6001.dmxIn, 2)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile6001.dmxOut, 2)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile6001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile6001.isRDMSupported, true)

        // Oem_claypaky_axcor_profile_600_hc_1 (0x2946)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile600Hc1, 0x2946)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile600Hc1.description, "Oem_claypaky_axcor_profile_600_hc_1")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile600Hc1.mnemonic, "Oem_claypaky_axcor_profile_600_hc_1")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile600Hc1.manufacturer, "CLAYPAKY")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile600Hc1.product, "AXCOR PROFILE 600 HC")
        XCTAssertEqual(OEMCode.claypakyAxcorProfile600Hc1.dmxIn, 2)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile600Hc1.dmxOut, 2)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile600Hc1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.claypakyAxcorProfile600Hc1.isRDMSupported, true)

        // Oem_claypaky_axcor_spot_400_1 (0x2943)
        XCTAssertEqual(OEMCode.claypakyAxcorSpot4001, 0x2943)
        XCTAssertEqual(OEMCode.claypakyAxcorSpot4001.description, "Oem_claypaky_axcor_spot_400_1")
        XCTAssertEqual(OEMCode.claypakyAxcorSpot4001.mnemonic, "Oem_claypaky_axcor_spot_400_1")
        XCTAssertEqual(OEMCode.claypakyAxcorSpot4001.manufacturer, "CLAYPAKY")
        XCTAssertEqual(OEMCode.claypakyAxcorSpot4001.product, "AXCOR SPOT 400")
        XCTAssertEqual(OEMCode.claypakyAxcorSpot4001.dmxIn, 1)
        XCTAssertEqual(OEMCode.claypakyAxcorSpot4001.dmxOut, 1)
        XCTAssertEqual(OEMCode.claypakyAxcorSpot4001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.claypakyAxcorSpot4001.isRDMSupported, true)

        // Oem_claypaky_axcor_spot_400_hc_1 (0x2942)
        XCTAssertEqual(OEMCode.claypakyAxcorSpot400Hc1, 0x2942)
        XCTAssertEqual(OEMCode.claypakyAxcorSpot400Hc1.description, "Oem_claypaky_axcor_spot_400_hc_1")
        XCTAssertEqual(OEMCode.claypakyAxcorSpot400Hc1.mnemonic, "Oem_claypaky_axcor_spot_400_hc_1")
        XCTAssertEqual(OEMCode.claypakyAxcorSpot400Hc1.manufacturer, "CLAYPAKY")
        XCTAssertEqual(OEMCode.claypakyAxcorSpot400Hc1.product, "AXCOR SPOT 400 HC")
        XCTAssertEqual(OEMCode.claypakyAxcorSpot400Hc1.dmxIn, 1)
        XCTAssertEqual(OEMCode.claypakyAxcorSpot400Hc1.dmxOut, 1)
        XCTAssertEqual(OEMCode.claypakyAxcorSpot400Hc1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.claypakyAxcorSpot400Hc1.isRDMSupported, true)

        // Oem_coretronic_corporation_projector_1 (0x2A05)
        XCTAssertEqual(OEMCode.coretronicCorporationProjector1, 0x2A05)
        XCTAssertEqual(OEMCode.coretronicCorporationProjector1.description, "Oem_coretronic_corporation_projector_1")
        XCTAssertEqual(OEMCode.coretronicCorporationProjector1.mnemonic, "Oem_coretronic_corporation_projector_1")
        XCTAssertEqual(OEMCode.coretronicCorporationProjector1.manufacturer, "Coretronic Corporation")
        XCTAssertEqual(OEMCode.coretronicCorporationProjector1.product, "Projector")
        XCTAssertEqual(OEMCode.coretronicCorporationProjector1.dmxIn, 1)
        XCTAssertEqual(OEMCode.coretronicCorporationProjector1.dmxOut, 1)
        XCTAssertEqual(OEMCode.coretronicCorporationProjector1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.coretronicCorporationProjector1.isRDMSupported, false)

        // Oem_creative_lighting_edidio_4_pole_1 (0x2997)
        XCTAssertEqual(OEMCode.creativeLightingEdidio4Pole1, 0x2997)
        XCTAssertEqual(OEMCode.creativeLightingEdidio4Pole1.description, "Oem_creative_lighting_edidio_4_pole_1")
        XCTAssertEqual(OEMCode.creativeLightingEdidio4Pole1.mnemonic, "Oem_creative_lighting_edidio_4_pole_1")
        XCTAssertEqual(OEMCode.creativeLightingEdidio4Pole1.manufacturer, "Creative Lighting")
        XCTAssertEqual(OEMCode.creativeLightingEdidio4Pole1.product, "eDIDIO 4 pole")
        XCTAssertEqual(OEMCode.creativeLightingEdidio4Pole1.dmxIn, 2)
        XCTAssertEqual(OEMCode.creativeLightingEdidio4Pole1.dmxOut, 2)
        XCTAssertEqual(OEMCode.creativeLightingEdidio4Pole1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.creativeLightingEdidio4Pole1.isRDMSupported, true)

        // Oem_creative_lighting_edidio_8_pole_1 (0x2996)
        XCTAssertEqual(OEMCode.creativeLightingEdidio8Pole1, 0x2996)
        XCTAssertEqual(OEMCode.creativeLightingEdidio8Pole1.description, "Oem_creative_lighting_edidio_8_pole_1")
        XCTAssertEqual(OEMCode.creativeLightingEdidio8Pole1.mnemonic, "Oem_creative_lighting_edidio_8_pole_1")
        XCTAssertEqual(OEMCode.creativeLightingEdidio8Pole1.manufacturer, "Creative Lighting")
        XCTAssertEqual(OEMCode.creativeLightingEdidio8Pole1.product, "eDIDIO 8 pole")
        XCTAssertEqual(OEMCode.creativeLightingEdidio8Pole1.dmxIn, 4)
        XCTAssertEqual(OEMCode.creativeLightingEdidio8Pole1.dmxOut, 4)
        XCTAssertEqual(OEMCode.creativeLightingEdidio8Pole1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.creativeLightingEdidio8Pole1.isRDMSupported, true)

        // Oem_crew_light_vcontroller_1 (0x2A02)
        XCTAssertEqual(OEMCode.crewLightVcontroller1, 0x2A02)
        XCTAssertEqual(OEMCode.crewLightVcontroller1.description, "Oem_crew_light_vcontroller_1")
        XCTAssertEqual(OEMCode.crewLightVcontroller1.mnemonic, "Oem_crew_light_vcontroller_1")
        XCTAssertEqual(OEMCode.crewLightVcontroller1.manufacturer, "Crew Light")
        XCTAssertEqual(OEMCode.crewLightVcontroller1.product, "VController")
        XCTAssertEqual(OEMCode.crewLightVcontroller1.dmxIn, 1)
        XCTAssertEqual(OEMCode.crewLightVcontroller1.dmxOut, 0)
        XCTAssertEqual(OEMCode.crewLightVcontroller1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.crewLightVcontroller1.isRDMSupported, false)

        // Oem_d5_systems_lighting_network_toolset_1 (0x2986)
        XCTAssertEqual(OEMCode.d5SystemsLightingNetworkToolset1, 0x2986)
        XCTAssertEqual(OEMCode.d5SystemsLightingNetworkToolset1.description, "Oem_d5_systems_lighting_network_toolset_1")
        XCTAssertEqual(OEMCode.d5SystemsLightingNetworkToolset1.mnemonic, "Oem_d5_systems_lighting_network_toolset_1")
        XCTAssertEqual(OEMCode.d5SystemsLightingNetworkToolset1.manufacturer, "D5 systems")
        XCTAssertEqual(OEMCode.d5SystemsLightingNetworkToolset1.product, "Lighting Network Toolset")
        XCTAssertEqual(OEMCode.d5SystemsLightingNetworkToolset1.dmxIn, 0)
        XCTAssertEqual(OEMCode.d5SystemsLightingNetworkToolset1.dmxOut, 1)
        XCTAssertEqual(OEMCode.d5SystemsLightingNetworkToolset1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.d5SystemsLightingNetworkToolset1.isRDMSupported, true)

        // Oem_daniel_large_statis_1 (0x28FC)
        XCTAssertEqual(OEMCode.danielLargeStatis1, 0x28FC)
        XCTAssertEqual(OEMCode.danielLargeStatis1.description, "Oem_daniel_large_statis_1")
        XCTAssertEqual(OEMCode.danielLargeStatis1.mnemonic, "Oem_daniel_large_statis_1")
        XCTAssertEqual(OEMCode.danielLargeStatis1.manufacturer, "Daniel Large")
        XCTAssertEqual(OEMCode.danielLargeStatis1.product, "STATIS")
        XCTAssertEqual(OEMCode.danielLargeStatis1.dmxIn, 1)
        XCTAssertEqual(OEMCode.danielLargeStatis1.dmxOut, 1)
        XCTAssertEqual(OEMCode.danielLargeStatis1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.danielLargeStatis1.isRDMSupported, true)

        // Oem_dataled_dataled_net_1 (0x2A31)
        XCTAssertEqual(OEMCode.dataledDataledNet1, 0x2A31)
        XCTAssertEqual(OEMCode.dataledDataledNet1.description, "Oem_dataled_dataled_net_1")
        XCTAssertEqual(OEMCode.dataledDataledNet1.mnemonic, "Oem_dataled_dataled_net_1")
        XCTAssertEqual(OEMCode.dataledDataledNet1.manufacturer, "DATALED")
        XCTAssertEqual(OEMCode.dataledDataledNet1.product, "DATALED NET")
        XCTAssertEqual(OEMCode.dataledDataledNet1.dmxIn, 0)
        XCTAssertEqual(OEMCode.dataledDataledNet1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dataledDataledNet1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dataledDataledNet1.isRDMSupported, false)

        // Oem_dbnetsoft_virtualdmxlib_1 (0x293E)
        XCTAssertEqual(OEMCode.dbnetsoftVirtualdmxlib1, 0x293E)
        XCTAssertEqual(OEMCode.dbnetsoftVirtualdmxlib1.description, "Oem_dbnetsoft_virtualdmxlib_1")
        XCTAssertEqual(OEMCode.dbnetsoftVirtualdmxlib1.mnemonic, "Oem_dbnetsoft_virtualdmxlib_1")
        XCTAssertEqual(OEMCode.dbnetsoftVirtualdmxlib1.manufacturer, "dbnetsoft")
        XCTAssertEqual(OEMCode.dbnetsoftVirtualdmxlib1.product, "VirtualDmxLib")
        XCTAssertEqual(OEMCode.dbnetsoftVirtualdmxlib1.dmxIn, 1)
        XCTAssertEqual(OEMCode.dbnetsoftVirtualdmxlib1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dbnetsoftVirtualdmxlib1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.dbnetsoftVirtualdmxlib1.isRDMSupported, false)

        // Oem_dclx_ltd_pixel_sabre_1 (0x29D9)
        XCTAssertEqual(OEMCode.dclxLtdPixelSabre1, 0x29D9)
        XCTAssertEqual(OEMCode.dclxLtdPixelSabre1.description, "Oem_dclx_ltd_pixel_sabre_1")
        XCTAssertEqual(OEMCode.dclxLtdPixelSabre1.mnemonic, "Oem_dclx_ltd_pixel_sabre_1")
        XCTAssertEqual(OEMCode.dclxLtdPixelSabre1.manufacturer, "DCLX Ltd")
        XCTAssertEqual(OEMCode.dclxLtdPixelSabre1.product, "Pixel Sabre")
        XCTAssertEqual(OEMCode.dclxLtdPixelSabre1.dmxIn, 1)
        XCTAssertEqual(OEMCode.dclxLtdPixelSabre1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dclxLtdPixelSabre1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dclxLtdPixelSabre1.isRDMSupported, true)

        // Oem_digital_projection_digital_projection_projector_1 (0x2A4B)
        XCTAssertEqual(OEMCode.digitalProjectionDigitalProjectionProjector1, 0x2A4B)
        XCTAssertEqual(OEMCode.digitalProjectionDigitalProjectionProjector1.description, "Oem_digital_projection_digital_projection_projector_1")
        XCTAssertEqual(OEMCode.digitalProjectionDigitalProjectionProjector1.mnemonic, "Oem_digital_projection_digital_projection_projector_1")
        XCTAssertEqual(OEMCode.digitalProjectionDigitalProjectionProjector1.manufacturer, "Digital Projection")
        XCTAssertEqual(OEMCode.digitalProjectionDigitalProjectionProjector1.product, "Digital Projection Projector")
        XCTAssertEqual(OEMCode.digitalProjectionDigitalProjectionProjector1.dmxIn, 1)
        XCTAssertEqual(OEMCode.digitalProjectionDigitalProjectionProjector1.dmxOut, 0)
        XCTAssertEqual(OEMCode.digitalProjectionDigitalProjectionProjector1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.digitalProjectionDigitalProjectionProjector1.isRDMSupported, false)

        // Oem_digital_projection_titan_laser_projector_1 (0x2975)
        XCTAssertEqual(OEMCode.digitalProjectionTitanLaserProjector1, 0x2975)
        XCTAssertEqual(OEMCode.digitalProjectionTitanLaserProjector1.description, "Oem_digital_projection_titan_laser_projector_1")
        XCTAssertEqual(OEMCode.digitalProjectionTitanLaserProjector1.mnemonic, "Oem_digital_projection_titan_laser_projector_1")
        XCTAssertEqual(OEMCode.digitalProjectionTitanLaserProjector1.manufacturer, "Digital Projection")
        XCTAssertEqual(OEMCode.digitalProjectionTitanLaserProjector1.product, "Titan Laser Projector")
        XCTAssertEqual(OEMCode.digitalProjectionTitanLaserProjector1.dmxIn, 1)
        XCTAssertEqual(OEMCode.digitalProjectionTitanLaserProjector1.dmxOut, 0)
        XCTAssertEqual(OEMCode.digitalProjectionTitanLaserProjector1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.digitalProjectionTitanLaserProjector1.isRDMSupported, false)

        // Oem_disguise_disguise_production_toolkit_1 (0x29E3)
        XCTAssertEqual(OEMCode.disguiseDisguiseProductionToolkit1, 0x29E3)
        XCTAssertEqual(OEMCode.disguiseDisguiseProductionToolkit1.description, "Oem_disguise_disguise_production_toolkit_1")
        XCTAssertEqual(OEMCode.disguiseDisguiseProductionToolkit1.mnemonic, "Oem_disguise_disguise_production_toolkit_1")
        XCTAssertEqual(OEMCode.disguiseDisguiseProductionToolkit1.manufacturer, "Disguise")
        XCTAssertEqual(OEMCode.disguiseDisguiseProductionToolkit1.product, "Disguise Production Toolkit")
        XCTAssertEqual(OEMCode.disguiseDisguiseProductionToolkit1.dmxIn, 1)
        XCTAssertEqual(OEMCode.disguiseDisguiseProductionToolkit1.dmxOut, 1)
        XCTAssertEqual(OEMCode.disguiseDisguiseProductionToolkit1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.disguiseDisguiseProductionToolkit1.isRDMSupported, false)

        // Oem_djsi_schinstad_northern_star_polaris_v1_5_1 (0x290D)
        XCTAssertEqual(OEMCode.djsiSchinstadNorthernStarPolarisV151, 0x290D)
        XCTAssertEqual(OEMCode.djsiSchinstadNorthernStarPolarisV151.description, "Oem_djsi_schinstad_northern_star_polaris_v1_5_1")
        XCTAssertEqual(OEMCode.djsiSchinstadNorthernStarPolarisV151.mnemonic, "Oem_djsi_schinstad_northern_star_polaris_v1_5_1")
        XCTAssertEqual(OEMCode.djsiSchinstadNorthernStarPolarisV151.manufacturer, "DJSI SCHINSTAD")
        XCTAssertEqual(OEMCode.djsiSchinstadNorthernStarPolarisV151.product, "Northern Star Polaris v1 5")
        XCTAssertEqual(OEMCode.djsiSchinstadNorthernStarPolarisV151.dmxIn, 512)
        XCTAssertEqual(OEMCode.djsiSchinstadNorthernStarPolarisV151.dmxOut, 512)
        XCTAssertEqual(OEMCode.djsiSchinstadNorthernStarPolarisV151.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.djsiSchinstadNorthernStarPolarisV151.isRDMSupported, true)

        // Oem_douglas_heriot_diode_control_1 (0x28FE)
        XCTAssertEqual(OEMCode.douglasHeriotDiodeControl1, 0x28FE)
        XCTAssertEqual(OEMCode.douglasHeriotDiodeControl1.description, "Oem_douglas_heriot_diode_control_1")
        XCTAssertEqual(OEMCode.douglasHeriotDiodeControl1.mnemonic, "Oem_douglas_heriot_diode_control_1")
        XCTAssertEqual(OEMCode.douglasHeriotDiodeControl1.manufacturer, "Douglas Heriot")
        XCTAssertEqual(OEMCode.douglasHeriotDiodeControl1.product, "Diode Control")
        XCTAssertEqual(OEMCode.douglasHeriotDiodeControl1.dmxIn, 1)
        XCTAssertEqual(OEMCode.douglasHeriotDiodeControl1.dmxOut, 1)
        XCTAssertEqual(OEMCode.douglasHeriotDiodeControl1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.douglasHeriotDiodeControl1.isRDMSupported, false)

        // Oem_douglas_heriot_dmx_assistant_1 (0x28FD)
        XCTAssertEqual(OEMCode.douglasHeriotDmxAssistant1, 0x28FD)
        XCTAssertEqual(OEMCode.douglasHeriotDmxAssistant1.description, "Oem_douglas_heriot_dmx_assistant_1")
        XCTAssertEqual(OEMCode.douglasHeriotDmxAssistant1.mnemonic, "Oem_douglas_heriot_dmx_assistant_1")
        XCTAssertEqual(OEMCode.douglasHeriotDmxAssistant1.manufacturer, "Douglas Heriot")
        XCTAssertEqual(OEMCode.douglasHeriotDmxAssistant1.product, "DMX Assistant")
        XCTAssertEqual(OEMCode.douglasHeriotDmxAssistant1.dmxIn, 1)
        XCTAssertEqual(OEMCode.douglasHeriotDmxAssistant1.dmxOut, 1)
        XCTAssertEqual(OEMCode.douglasHeriotDmxAssistant1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.douglasHeriotDmxAssistant1.isRDMSupported, false)

        // Oem_dp_lumi_dp_lumi_pro_1 (0x29F6)
        XCTAssertEqual(OEMCode.dpLumiDpLumiPro1, 0x29F6)
        XCTAssertEqual(OEMCode.dpLumiDpLumiPro1.description, "Oem_dp_lumi_dp_lumi_pro_1")
        XCTAssertEqual(OEMCode.dpLumiDpLumiPro1.mnemonic, "Oem_dp_lumi_dp_lumi_pro_1")
        XCTAssertEqual(OEMCode.dpLumiDpLumiPro1.manufacturer, "DP Lumi")
        XCTAssertEqual(OEMCode.dpLumiDpLumiPro1.product, "DP Lumi Pro")
        XCTAssertEqual(OEMCode.dpLumiDpLumiPro1.dmxIn, 1)
        XCTAssertEqual(OEMCode.dpLumiDpLumiPro1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dpLumiDpLumiPro1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dpLumiDpLumiPro1.isRDMSupported, false)

        // Oem_dts_illuminazione_srl_alchemy3_1 (0x2A01)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy31, 0x2A01)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy31.description, "Oem_dts_illuminazione_srl_alchemy3_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy31.mnemonic, "Oem_dts_illuminazione_srl_alchemy3_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy31.manufacturer, "DTS Illuminazione srl")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy31.product, "Alchemy3")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy31.dmxIn, 0)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy31.dmxOut, 1)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy31.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy31.isRDMSupported, true)

        // Oem_dts_illuminazione_srl_alchemy5_1 (0x29FC)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy51, 0x29FC)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy51.description, "Oem_dts_illuminazione_srl_alchemy5_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy51.mnemonic, "Oem_dts_illuminazione_srl_alchemy5_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy51.manufacturer, "DTS Illuminazione srl")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy51.product, "Alchemy5")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy51.dmxIn, 0)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy51.dmxOut, 1)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy51.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy51.isRDMSupported, true)

        // Oem_dts_illuminazione_srl_alchemy_7_1 (0x2A43)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy71, 0x2A43)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy71.description, "Oem_dts_illuminazione_srl_alchemy_7_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy71.mnemonic, "Oem_dts_illuminazione_srl_alchemy_7_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy71.manufacturer, "DTS Illuminazione srl")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy71.product, "ALCHEMY 7")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy71.dmxIn, 0)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy71.dmxOut, 1)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy71.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlAlchemy71.isRDMSupported, true)

        // Oem_dts_illuminazione_srl_drivenet_1664_1 (0x298E)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet16641, 0x298E)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet16641.description, "Oem_dts_illuminazione_srl_drivenet_1664_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet16641.mnemonic, "Oem_dts_illuminazione_srl_drivenet_1664_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet16641.manufacturer, "DTS Illuminazione srl")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet16641.product, "DRIVENET 1664")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet16641.dmxIn, 0)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet16641.dmxOut, 1)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet16641.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet16641.isRDMSupported, true)

        // Oem_dts_illuminazione_srl_drivenet_416_1 (0x2990)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet4161, 0x2990)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet4161.description, "Oem_dts_illuminazione_srl_drivenet_416_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet4161.mnemonic, "Oem_dts_illuminazione_srl_drivenet_416_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet4161.manufacturer, "DTS Illuminazione srl")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet4161.product, "DRIVENET 416")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet4161.dmxIn, 0)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet4161.dmxOut, 1)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet4161.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet4161.isRDMSupported, true)

        // Oem_dts_illuminazione_srl_drivenet_416_power_1 (0x298F)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet416Power1, 0x298F)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet416Power1.description, "Oem_dts_illuminazione_srl_drivenet_416_power_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet416Power1.mnemonic, "Oem_dts_illuminazione_srl_drivenet_416_power_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet416Power1.manufacturer, "DTS Illuminazione srl")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet416Power1.product, "DRIVENET 416 POWER")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet416Power1.dmxIn, 0)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet416Power1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet416Power1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet416Power1.isRDMSupported, true)

        // Oem_dts_illuminazione_srl_drivenet_832_1 (0x2992)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet8321, 0x2992)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet8321.description, "Oem_dts_illuminazione_srl_drivenet_832_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet8321.mnemonic, "Oem_dts_illuminazione_srl_drivenet_832_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet8321.manufacturer, "DTS Illuminazione srl")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet8321.product, "DRIVENET 832")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet8321.dmxIn, 0)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet8321.dmxOut, 1)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet8321.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet8321.isRDMSupported, true)

        // Oem_dts_illuminazione_srl_drivenet_832_power_1 (0x2991)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet832Power1, 0x2991)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet832Power1.description, "Oem_dts_illuminazione_srl_drivenet_832_power_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet832Power1.mnemonic, "Oem_dts_illuminazione_srl_drivenet_832_power_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet832Power1.manufacturer, "DTS Illuminazione srl")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet832Power1.product, "DRIVENET 832 POWER")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet832Power1.dmxIn, 0)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet832Power1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet832Power1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlDrivenet832Power1.isRDMSupported, true)

        // Oem_dts_illuminazione_srl_synergy_5_profile_1 (0x2994)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Profile1, 0x2994)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Profile1.description, "Oem_dts_illuminazione_srl_synergy_5_profile_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Profile1.mnemonic, "Oem_dts_illuminazione_srl_synergy_5_profile_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Profile1.manufacturer, "DTS Illuminazione srl")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Profile1.product, "SYNERGY 5 PROFILE")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Profile1.dmxIn, 0)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Profile1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Profile1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Profile1.isRDMSupported, true)

        // Oem_dts_illuminazione_srl_synergy_5_spot_1 (0x2993)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Spot1, 0x2993)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Spot1.description, "Oem_dts_illuminazione_srl_synergy_5_spot_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Spot1.mnemonic, "Oem_dts_illuminazione_srl_synergy_5_spot_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Spot1.manufacturer, "DTS Illuminazione srl")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Spot1.product, "SYNERGY 5 SPOT")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Spot1.dmxIn, 0)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Spot1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Spot1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy5Spot1.isRDMSupported, true)

        // Oem_dts_illuminazione_srl_synergy_7_profile_1 (0x2A42)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy7Profile1, 0x2A42)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy7Profile1.description, "Oem_dts_illuminazione_srl_synergy_7_profile_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy7Profile1.mnemonic, "Oem_dts_illuminazione_srl_synergy_7_profile_1")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy7Profile1.manufacturer, "DTS Illuminazione srl")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy7Profile1.product, "SYNERGY 7 PROFILE")
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy7Profile1.dmxIn, 0)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy7Profile1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy7Profile1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dtsIlluminazioneSrlSynergy7Profile1.isRDMSupported, true)

        // Oem_echoic_tech_llc_mach1_led_controller_1 (0x29FE)
        XCTAssertEqual(OEMCode.echoicTechLlcMach1LedController1, 0x29FE)
        XCTAssertEqual(OEMCode.echoicTechLlcMach1LedController1.description, "Oem_echoic_tech_llc_mach1_led_controller_1")
        XCTAssertEqual(OEMCode.echoicTechLlcMach1LedController1.mnemonic, "Oem_echoic_tech_llc_mach1_led_controller_1")
        XCTAssertEqual(OEMCode.echoicTechLlcMach1LedController1.manufacturer, "Echoic Tech LLC")
        XCTAssertEqual(OEMCode.echoicTechLlcMach1LedController1.product, "Mach1 LED Controller")
        XCTAssertEqual(OEMCode.echoicTechLlcMach1LedController1.dmxIn, 32)
        XCTAssertEqual(OEMCode.echoicTechLlcMach1LedController1.dmxOut, 32)
        XCTAssertEqual(OEMCode.echoicTechLlcMach1LedController1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.echoicTechLlcMach1LedController1.isRDMSupported, false)

        // Oem_edelmann_electronics_enigma2kxx_1 (0x29B3)
        XCTAssertEqual(OEMCode.edelmannElectronicsEnigma2Kxx1, 0x29B3)
        XCTAssertEqual(OEMCode.edelmannElectronicsEnigma2Kxx1.description, "Oem_edelmann_electronics_enigma2kxx_1")
        XCTAssertEqual(OEMCode.edelmannElectronicsEnigma2Kxx1.mnemonic, "Oem_edelmann_electronics_enigma2kxx_1")
        XCTAssertEqual(OEMCode.edelmannElectronicsEnigma2Kxx1.manufacturer, "Edelmann Electronics")
        XCTAssertEqual(OEMCode.edelmannElectronicsEnigma2Kxx1.product, "Enigma2Kxx")
        XCTAssertEqual(OEMCode.edelmannElectronicsEnigma2Kxx1.dmxIn, 0)
        XCTAssertEqual(OEMCode.edelmannElectronicsEnigma2Kxx1.dmxOut, 0)
        XCTAssertEqual(OEMCode.edelmannElectronicsEnigma2Kxx1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.edelmannElectronicsEnigma2Kxx1.isRDMSupported, false)

        // Oem_elation_lighting_cuepix_panel_1 (0x2953)
        XCTAssertEqual(OEMCode.elationLightingCuepixPanel1, 0x2953)
        XCTAssertEqual(OEMCode.elationLightingCuepixPanel1.description, "Oem_elation_lighting_cuepix_panel_1")
        XCTAssertEqual(OEMCode.elationLightingCuepixPanel1.mnemonic, "Oem_elation_lighting_cuepix_panel_1")
        XCTAssertEqual(OEMCode.elationLightingCuepixPanel1.manufacturer, "ELATION LIGHTING")
        XCTAssertEqual(OEMCode.elationLightingCuepixPanel1.product, "CUEPIX PANEL")
        XCTAssertEqual(OEMCode.elationLightingCuepixPanel1.dmxIn, 2)
        XCTAssertEqual(OEMCode.elationLightingCuepixPanel1.dmxOut, 2)
        XCTAssertEqual(OEMCode.elationLightingCuepixPanel1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationLightingCuepixPanel1.isRDMSupported, true)

        // Oem_elation_lighting_en12_1 (0x2A21)
        XCTAssertEqual(OEMCode.elationLightingEn121, 0x2A21)
        XCTAssertEqual(OEMCode.elationLightingEn121.description, "Oem_elation_lighting_en12_1")
        XCTAssertEqual(OEMCode.elationLightingEn121.mnemonic, "Oem_elation_lighting_en12_1")
        XCTAssertEqual(OEMCode.elationLightingEn121.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elationLightingEn121.product, "EN12")
        XCTAssertEqual(OEMCode.elationLightingEn121.dmxIn, 2)
        XCTAssertEqual(OEMCode.elationLightingEn121.dmxOut, 12)
        XCTAssertEqual(OEMCode.elationLightingEn121.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationLightingEn121.isRDMSupported, true)

        // Oem_elation_lighting_en4_1 (0x2A20)
        XCTAssertEqual(OEMCode.elationLightingEn41, 0x2A20)
        XCTAssertEqual(OEMCode.elationLightingEn41.description, "Oem_elation_lighting_en4_1")
        XCTAssertEqual(OEMCode.elationLightingEn41.mnemonic, "Oem_elation_lighting_en4_1")
        XCTAssertEqual(OEMCode.elationLightingEn41.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elationLightingEn41.product, "EN4")
        XCTAssertEqual(OEMCode.elationLightingEn41.dmxIn, 2)
        XCTAssertEqual(OEMCode.elationLightingEn41.dmxOut, 4)
        XCTAssertEqual(OEMCode.elationLightingEn41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationLightingEn41.isRDMSupported, true)

        // Oem_elation_lighting_ep4_1 (0x2A1F)
        XCTAssertEqual(OEMCode.elationLightingEp41, 0x2A1F)
        XCTAssertEqual(OEMCode.elationLightingEp41.description, "Oem_elation_lighting_ep4_1")
        XCTAssertEqual(OEMCode.elationLightingEp41.mnemonic, "Oem_elation_lighting_ep4_1")
        XCTAssertEqual(OEMCode.elationLightingEp41.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elationLightingEp41.product, "EP4")
        XCTAssertEqual(OEMCode.elationLightingEp41.dmxIn, 2)
        XCTAssertEqual(OEMCode.elationLightingEp41.dmxOut, 4)
        XCTAssertEqual(OEMCode.elationLightingEp41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationLightingEp41.isRDMSupported, true)

        // Oem_elation_lighting_ez_kling_1 (0x293A)
        XCTAssertEqual(OEMCode.elationLightingEzKling1, 0x293A)
        XCTAssertEqual(OEMCode.elationLightingEzKling1.description, "Oem_elation_lighting_ez_kling_1")
        XCTAssertEqual(OEMCode.elationLightingEzKling1.mnemonic, "Oem_elation_lighting_ez_kling_1")
        XCTAssertEqual(OEMCode.elationLightingEzKling1.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elationLightingEzKling1.product, "EZ Kling")
        XCTAssertEqual(OEMCode.elationLightingEzKling1.dmxIn, 1)
        XCTAssertEqual(OEMCode.elationLightingEzKling1.dmxOut, 1)
        XCTAssertEqual(OEMCode.elationLightingEzKling1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationLightingEzKling1.isRDMSupported, false)

        // Oem_elation_lighting_pixel_driver_1000ip_1 (0x2A0F)
        XCTAssertEqual(OEMCode.elationLightingPixelDriver1000Ip1, 0x2A0F)
        XCTAssertEqual(OEMCode.elationLightingPixelDriver1000Ip1.description, "Oem_elation_lighting_pixel_driver_1000ip_1")
        XCTAssertEqual(OEMCode.elationLightingPixelDriver1000Ip1.mnemonic, "Oem_elation_lighting_pixel_driver_1000ip_1")
        XCTAssertEqual(OEMCode.elationLightingPixelDriver1000Ip1.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elationLightingPixelDriver1000Ip1.product, "Pixel Driver 1000IP")
        XCTAssertEqual(OEMCode.elationLightingPixelDriver1000Ip1.dmxIn, 1)
        XCTAssertEqual(OEMCode.elationLightingPixelDriver1000Ip1.dmxOut, 1)
        XCTAssertEqual(OEMCode.elationLightingPixelDriver1000Ip1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationLightingPixelDriver1000Ip1.isRDMSupported, true)

        // Oem_elation_lighting_rdm_645_1 (0x2A1D)
        XCTAssertEqual(OEMCode.elationLightingRdm6451, 0x2A1D)
        XCTAssertEqual(OEMCode.elationLightingRdm6451.description, "Oem_elation_lighting_rdm_645_1")
        XCTAssertEqual(OEMCode.elationLightingRdm6451.mnemonic, "Oem_elation_lighting_rdm_645_1")
        XCTAssertEqual(OEMCode.elationLightingRdm6451.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elationLightingRdm6451.product, "RDM 645")
        XCTAssertEqual(OEMCode.elationLightingRdm6451.dmxIn, 2)
        XCTAssertEqual(OEMCode.elationLightingRdm6451.dmxOut, 6)
        XCTAssertEqual(OEMCode.elationLightingRdm6451.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationLightingRdm6451.isRDMSupported, true)

        // Oem_elation_lighting_rdm_6xl_1 (0x2A1C)
        XCTAssertEqual(OEMCode.elationLightingRdm6Xl1, 0x2A1C)
        XCTAssertEqual(OEMCode.elationLightingRdm6Xl1.description, "Oem_elation_lighting_rdm_6xl_1")
        XCTAssertEqual(OEMCode.elationLightingRdm6Xl1.mnemonic, "Oem_elation_lighting_rdm_6xl_1")
        XCTAssertEqual(OEMCode.elationLightingRdm6Xl1.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elationLightingRdm6Xl1.product, "RDM 6XL")
        XCTAssertEqual(OEMCode.elationLightingRdm6Xl1.dmxIn, 2)
        XCTAssertEqual(OEMCode.elationLightingRdm6Xl1.dmxOut, 6)
        XCTAssertEqual(OEMCode.elationLightingRdm6Xl1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationLightingRdm6Xl1.isRDMSupported, true)

        // Oem_elation_lighting_rmd_10_1 (0x2A1E)
        XCTAssertEqual(OEMCode.elationLightingRmd101, 0x2A1E)
        XCTAssertEqual(OEMCode.elationLightingRmd101.description, "Oem_elation_lighting_rmd_10_1")
        XCTAssertEqual(OEMCode.elationLightingRmd101.mnemonic, "Oem_elation_lighting_rmd_10_1")
        XCTAssertEqual(OEMCode.elationLightingRmd101.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elationLightingRmd101.product, "RMD 10")
        XCTAssertEqual(OEMCode.elationLightingRmd101.dmxIn, 2)
        XCTAssertEqual(OEMCode.elationLightingRmd101.dmxOut, 10)
        XCTAssertEqual(OEMCode.elationLightingRmd101.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationLightingRmd101.isRDMSupported, true)

        // Oem_elation_lighting_seven_batten_72_1 (0x2955)
        XCTAssertEqual(OEMCode.elationLightingSevenBatten721, 0x2955)
        XCTAssertEqual(OEMCode.elationLightingSevenBatten721.description, "Oem_elation_lighting_seven_batten_72_1")
        XCTAssertEqual(OEMCode.elationLightingSevenBatten721.mnemonic, "Oem_elation_lighting_seven_batten_72_1")
        XCTAssertEqual(OEMCode.elationLightingSevenBatten721.manufacturer, "ELATION LIGHTING")
        XCTAssertEqual(OEMCode.elationLightingSevenBatten721.product, "SEVEN BATTEN 72")
        XCTAssertEqual(OEMCode.elationLightingSevenBatten721.dmxIn, 2)
        XCTAssertEqual(OEMCode.elationLightingSevenBatten721.dmxOut, 2)
        XCTAssertEqual(OEMCode.elationLightingSevenBatten721.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationLightingSevenBatten721.isRDMSupported, true)

        // Oem_elation_lighting_sixbar_1000_1 (0x2954)
        XCTAssertEqual(OEMCode.elationLightingSixbar10001, 0x2954)
        XCTAssertEqual(OEMCode.elationLightingSixbar10001.description, "Oem_elation_lighting_sixbar_1000_1")
        XCTAssertEqual(OEMCode.elationLightingSixbar10001.mnemonic, "Oem_elation_lighting_sixbar_1000_1")
        XCTAssertEqual(OEMCode.elationLightingSixbar10001.manufacturer, "ELATION LIGHTING")
        XCTAssertEqual(OEMCode.elationLightingSixbar10001.product, "SIXBAR 1000")
        XCTAssertEqual(OEMCode.elationLightingSixbar10001.dmxIn, 2)
        XCTAssertEqual(OEMCode.elationLightingSixbar10001.dmxOut, 2)
        XCTAssertEqual(OEMCode.elationLightingSixbar10001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationLightingSixbar10001.isRDMSupported, true)

        // Oem_emp_designs_ltd_emp1_1 (0x29A2)
        XCTAssertEqual(OEMCode.empDesignsLtdEmp11, 0x29A2)
        XCTAssertEqual(OEMCode.empDesignsLtdEmp11.description, "Oem_emp_designs_ltd_emp1_1")
        XCTAssertEqual(OEMCode.empDesignsLtdEmp11.mnemonic, "Oem_emp_designs_ltd_emp1_1")
        XCTAssertEqual(OEMCode.empDesignsLtdEmp11.manufacturer, "EMP Designs Ltd")
        XCTAssertEqual(OEMCode.empDesignsLtdEmp11.product, "EMP1")
        XCTAssertEqual(OEMCode.empDesignsLtdEmp11.dmxIn, 0)
        XCTAssertEqual(OEMCode.empDesignsLtdEmp11.dmxOut, 0)
        XCTAssertEqual(OEMCode.empDesignsLtdEmp11.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.empDesignsLtdEmp11.isRDMSupported, false)

        // Oem_equipson_s_a_lsnode1_1 (0x29EF)
        XCTAssertEqual(OEMCode.equipsonSALsnode11, 0x29EF)
        XCTAssertEqual(OEMCode.equipsonSALsnode11.description, "Oem_equipson_s_a_lsnode1_1")
        XCTAssertEqual(OEMCode.equipsonSALsnode11.mnemonic, "Oem_equipson_s_a_lsnode1_1")
        XCTAssertEqual(OEMCode.equipsonSALsnode11.manufacturer, "EQUIPSON S A")
        XCTAssertEqual(OEMCode.equipsonSALsnode11.product, "LSNODE1")
        XCTAssertEqual(OEMCode.equipsonSALsnode11.dmxIn, 1)
        XCTAssertEqual(OEMCode.equipsonSALsnode11.dmxOut, 1)
        XCTAssertEqual(OEMCode.equipsonSALsnode11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equipsonSALsnode11.isRDMSupported, true)

        // Oem_equipson_s_a_lsnode2_1 (0x29EE)
        XCTAssertEqual(OEMCode.equipsonSALsnode21, 0x29EE)
        XCTAssertEqual(OEMCode.equipsonSALsnode21.description, "Oem_equipson_s_a_lsnode2_1")
        XCTAssertEqual(OEMCode.equipsonSALsnode21.mnemonic, "Oem_equipson_s_a_lsnode2_1")
        XCTAssertEqual(OEMCode.equipsonSALsnode21.manufacturer, "EQUIPSON S A")
        XCTAssertEqual(OEMCode.equipsonSALsnode21.product, "LSNODE2")
        XCTAssertEqual(OEMCode.equipsonSALsnode21.dmxIn, 2)
        XCTAssertEqual(OEMCode.equipsonSALsnode21.dmxOut, 2)
        XCTAssertEqual(OEMCode.equipsonSALsnode21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equipsonSALsnode21.isRDMSupported, true)

        // Oem_equipson_s_a_lsnode4_1 (0x29ED)
        XCTAssertEqual(OEMCode.equipsonSALsnode41, 0x29ED)
        XCTAssertEqual(OEMCode.equipsonSALsnode41.description, "Oem_equipson_s_a_lsnode4_1")
        XCTAssertEqual(OEMCode.equipsonSALsnode41.mnemonic, "Oem_equipson_s_a_lsnode4_1")
        XCTAssertEqual(OEMCode.equipsonSALsnode41.manufacturer, "EQUIPSON S A")
        XCTAssertEqual(OEMCode.equipsonSALsnode41.product, "LSNODE4")
        XCTAssertEqual(OEMCode.equipsonSALsnode41.dmxIn, 0)
        XCTAssertEqual(OEMCode.equipsonSALsnode41.dmxOut, 4)
        XCTAssertEqual(OEMCode.equipsonSALsnode41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equipsonSALsnode41.isRDMSupported, true)

        // Oem_equivalent_ethercondmx8_1 (0x29E5)
        XCTAssertEqual(OEMCode.equivalentEthercondmx81, 0x29E5)
        XCTAssertEqual(OEMCode.equivalentEthercondmx81.description, "Oem_equivalent_ethercondmx8_1")
        XCTAssertEqual(OEMCode.equivalentEthercondmx81.mnemonic, "Oem_equivalent_ethercondmx8_1")
        XCTAssertEqual(OEMCode.equivalentEthercondmx81.manufacturer, "Equivalent")
        XCTAssertEqual(OEMCode.equivalentEthercondmx81.product, "EtherConDMX8")
        XCTAssertEqual(OEMCode.equivalentEthercondmx81.dmxIn, 8)
        XCTAssertEqual(OEMCode.equivalentEthercondmx81.dmxOut, 8)
        XCTAssertEqual(OEMCode.equivalentEthercondmx81.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.equivalentEthercondmx81.isRDMSupported, true)

        // Oem_equivalent_lsdr_123e_1 (0x29E7)
        XCTAssertEqual(OEMCode.equivalentLsdr123E1, 0x29E7)
        XCTAssertEqual(OEMCode.equivalentLsdr123E1.description, "Oem_equivalent_lsdr_123e_1")
        XCTAssertEqual(OEMCode.equivalentLsdr123E1.mnemonic, "Oem_equivalent_lsdr_123e_1")
        XCTAssertEqual(OEMCode.equivalentLsdr123E1.manufacturer, "Equivalent")
        XCTAssertEqual(OEMCode.equivalentLsdr123E1.product, "LSDR 123E")
        XCTAssertEqual(OEMCode.equivalentLsdr123E1.dmxIn, 0)
        XCTAssertEqual(OEMCode.equivalentLsdr123E1.dmxOut, 1)
        XCTAssertEqual(OEMCode.equivalentLsdr123E1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equivalentLsdr123E1.isRDMSupported, true)

        // Oem_equivalent_lsdr_65e_1 (0x29E8)
        XCTAssertEqual(OEMCode.equivalentLsdr65E1, 0x29E8)
        XCTAssertEqual(OEMCode.equivalentLsdr65E1.description, "Oem_equivalent_lsdr_65e_1")
        XCTAssertEqual(OEMCode.equivalentLsdr65E1.mnemonic, "Oem_equivalent_lsdr_65e_1")
        XCTAssertEqual(OEMCode.equivalentLsdr65E1.manufacturer, "Equivalent")
        XCTAssertEqual(OEMCode.equivalentLsdr65E1.product, "LSDR 65E")
        XCTAssertEqual(OEMCode.equivalentLsdr65E1.dmxIn, 0)
        XCTAssertEqual(OEMCode.equivalentLsdr65E1.dmxOut, 1)
        XCTAssertEqual(OEMCode.equivalentLsdr65E1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equivalentLsdr65E1.isRDMSupported, true)

        // Oem_equivalent_lsdw_2435e_1 (0x29E6)
        XCTAssertEqual(OEMCode.equivalentLsdw2435E1, 0x29E6)
        XCTAssertEqual(OEMCode.equivalentLsdw2435E1.description, "Oem_equivalent_lsdw_2435e_1")
        XCTAssertEqual(OEMCode.equivalentLsdw2435E1.mnemonic, "Oem_equivalent_lsdw_2435e_1")
        XCTAssertEqual(OEMCode.equivalentLsdw2435E1.manufacturer, "Equivalent")
        XCTAssertEqual(OEMCode.equivalentLsdw2435E1.product, "LSDW_2435E")
        XCTAssertEqual(OEMCode.equivalentLsdw2435E1.dmxIn, 0)
        XCTAssertEqual(OEMCode.equivalentLsdw2435E1.dmxOut, 1)
        XCTAssertEqual(OEMCode.equivalentLsdw2435E1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equivalentLsdw2435E1.isRDMSupported, true)

        // Oem_equivalent_lsethernettodmx_1 (0x29E4)
        XCTAssertEqual(OEMCode.equivalentLsethernettodmx1, 0x29E4)
        XCTAssertEqual(OEMCode.equivalentLsethernettodmx1.description, "Oem_equivalent_lsethernettodmx_1")
        XCTAssertEqual(OEMCode.equivalentLsethernettodmx1.mnemonic, "Oem_equivalent_lsethernettodmx_1")
        XCTAssertEqual(OEMCode.equivalentLsethernettodmx1.manufacturer, "Equivalent")
        XCTAssertEqual(OEMCode.equivalentLsethernettodmx1.product, "LSEthernetToDMX")
        XCTAssertEqual(OEMCode.equivalentLsethernettodmx1.dmxIn, 8)
        XCTAssertEqual(OEMCode.equivalentLsethernettodmx1.dmxOut, 8)
        XCTAssertEqual(OEMCode.equivalentLsethernettodmx1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.equivalentLsethernettodmx1.isRDMSupported, true)

        // Oem_equivalent_lssr-123e_1 (0x2A58)
        XCTAssertEqual(OEMCode.equivalentLssr123E1, 0x2A58)
        XCTAssertEqual(OEMCode.equivalentLssr123E1.description, "Oem_equivalent_lssr-123e_1")
        XCTAssertEqual(OEMCode.equivalentLssr123E1.mnemonic, "Oem_equivalent_lssr-123e_1")
        XCTAssertEqual(OEMCode.equivalentLssr123E1.manufacturer, "Equivalent")
        XCTAssertEqual(OEMCode.equivalentLssr123E1.product, "LSSR-123E")
        XCTAssertEqual(OEMCode.equivalentLssr123E1.dmxIn, 0)
        XCTAssertEqual(OEMCode.equivalentLssr123E1.dmxOut, 1)
        XCTAssertEqual(OEMCode.equivalentLssr123E1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equivalentLssr123E1.isRDMSupported, true)

        // Oem_er_productions_er_display_v1_1 (0x29AB)
        XCTAssertEqual(OEMCode.erProductionsErDisplayV11, 0x29AB)
        XCTAssertEqual(OEMCode.erProductionsErDisplayV11.description, "Oem_er_productions_er_display_v1_1")
        XCTAssertEqual(OEMCode.erProductionsErDisplayV11.mnemonic, "Oem_er_productions_er_display_v1_1")
        XCTAssertEqual(OEMCode.erProductionsErDisplayV11.manufacturer, "ER Productions")
        XCTAssertEqual(OEMCode.erProductionsErDisplayV11.product, "ER Display V1")
        XCTAssertEqual(OEMCode.erProductionsErDisplayV11.dmxIn, 1)
        XCTAssertEqual(OEMCode.erProductionsErDisplayV11.dmxOut, 0)
        XCTAssertEqual(OEMCode.erProductionsErDisplayV11.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.erProductionsErDisplayV11.isRDMSupported, true)

        // Oem_etc_audiovisuel_onlyview_1 (0x292D)
        XCTAssertEqual(OEMCode.etcAudiovisuelOnlyview1, 0x292D)
        XCTAssertEqual(OEMCode.etcAudiovisuelOnlyview1.description, "Oem_etc_audiovisuel_onlyview_1")
        XCTAssertEqual(OEMCode.etcAudiovisuelOnlyview1.mnemonic, "Oem_etc_audiovisuel_onlyview_1")
        XCTAssertEqual(OEMCode.etcAudiovisuelOnlyview1.manufacturer, "ETC Audiovisuel")
        XCTAssertEqual(OEMCode.etcAudiovisuelOnlyview1.product, "OnlyView")
        XCTAssertEqual(OEMCode.etcAudiovisuelOnlyview1.dmxIn, 0)
        XCTAssertEqual(OEMCode.etcAudiovisuelOnlyview1.dmxOut, 0)
        XCTAssertEqual(OEMCode.etcAudiovisuelOnlyview1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.etcAudiovisuelOnlyview1.isRDMSupported, false)

        // Oem_event_imagineering_group_showkontrol_1 (0x29C6)
        XCTAssertEqual(OEMCode.eventImagineeringGroupShowkontrol1, 0x29C6)
        XCTAssertEqual(OEMCode.eventImagineeringGroupShowkontrol1.description, "Oem_event_imagineering_group_showkontrol_1")
        XCTAssertEqual(OEMCode.eventImagineeringGroupShowkontrol1.mnemonic, "Oem_event_imagineering_group_showkontrol_1")
        XCTAssertEqual(OEMCode.eventImagineeringGroupShowkontrol1.manufacturer, "Event Imagineering Group")
        XCTAssertEqual(OEMCode.eventImagineeringGroupShowkontrol1.product, "ShowKontrol")
        XCTAssertEqual(OEMCode.eventImagineeringGroupShowkontrol1.dmxIn, 1)
        XCTAssertEqual(OEMCode.eventImagineeringGroupShowkontrol1.dmxOut, 1)
        XCTAssertEqual(OEMCode.eventImagineeringGroupShowkontrol1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.eventImagineeringGroupShowkontrol1.isRDMSupported, false)

        // Oem_ex_systems_rgb_floodlight_1 (0x29D8)
        XCTAssertEqual(OEMCode.exSystemsRgbFloodlight1, 0x29D8)
        XCTAssertEqual(OEMCode.exSystemsRgbFloodlight1.description, "Oem_ex_systems_rgb_floodlight_1")
        XCTAssertEqual(OEMCode.exSystemsRgbFloodlight1.mnemonic, "Oem_ex_systems_rgb_floodlight_1")
        XCTAssertEqual(OEMCode.exSystemsRgbFloodlight1.manufacturer, "eX Systems")
        XCTAssertEqual(OEMCode.exSystemsRgbFloodlight1.product, "RGB Floodlight")
        XCTAssertEqual(OEMCode.exSystemsRgbFloodlight1.dmxIn, 3)
        XCTAssertEqual(OEMCode.exSystemsRgbFloodlight1.dmxOut, 0)
        XCTAssertEqual(OEMCode.exSystemsRgbFloodlight1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.exSystemsRgbFloodlight1.isRDMSupported, true)

        // Oem_exacta_ccl_pc_1 (0x29D2)
        XCTAssertEqual(OEMCode.exactaCclPc1, 0x29D2)
        XCTAssertEqual(OEMCode.exactaCclPc1.description, "Oem_exacta_ccl_pc_1")
        XCTAssertEqual(OEMCode.exactaCclPc1.mnemonic, "Oem_exacta_ccl_pc_1")
        XCTAssertEqual(OEMCode.exactaCclPc1.manufacturer, "Exacta")
        XCTAssertEqual(OEMCode.exactaCclPc1.product, "CCL PC")
        XCTAssertEqual(OEMCode.exactaCclPc1.dmxIn, 1)
        XCTAssertEqual(OEMCode.exactaCclPc1.dmxOut, 10)
        XCTAssertEqual(OEMCode.exactaCclPc1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.exactaCclPc1.isRDMSupported, false)

        // Oem_exalux_connect_plus_1 (0x2A46)
        XCTAssertEqual(OEMCode.exaluxConnectPlus1, 0x2A46)
        XCTAssertEqual(OEMCode.exaluxConnectPlus1.description, "Oem_exalux_connect_plus_1")
        XCTAssertEqual(OEMCode.exaluxConnectPlus1.mnemonic, "Oem_exalux_connect_plus_1")
        XCTAssertEqual(OEMCode.exaluxConnectPlus1.manufacturer, "Exalux")
        XCTAssertEqual(OEMCode.exaluxConnectPlus1.product, "Connect Plus")
        XCTAssertEqual(OEMCode.exaluxConnectPlus1.dmxIn, 0)
        XCTAssertEqual(OEMCode.exaluxConnectPlus1.dmxOut, 2)
        XCTAssertEqual(OEMCode.exaluxConnectPlus1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.exaluxConnectPlus1.isRDMSupported, true)

        // Oem_feno_gmbh_fe_stile_1312_led_matrix_1 (0x2909)
        XCTAssertEqual(OEMCode.fenoGmbhFeStile1312LedMatrix1, 0x2909)
        XCTAssertEqual(OEMCode.fenoGmbhFeStile1312LedMatrix1.description, "Oem_feno_gmbh_fe_stile_1312_led_matrix_1")
        XCTAssertEqual(OEMCode.fenoGmbhFeStile1312LedMatrix1.mnemonic, "Oem_feno_gmbh_fe_stile_1312_led_matrix_1")
        XCTAssertEqual(OEMCode.fenoGmbhFeStile1312LedMatrix1.manufacturer, "feno GmbH")
        XCTAssertEqual(OEMCode.fenoGmbhFeStile1312LedMatrix1.product, "fe stile 1312 LED Matrix")
        XCTAssertEqual(OEMCode.fenoGmbhFeStile1312LedMatrix1.dmxIn, 0)
        XCTAssertEqual(OEMCode.fenoGmbhFeStile1312LedMatrix1.dmxOut, 0)
        XCTAssertEqual(OEMCode.fenoGmbhFeStile1312LedMatrix1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fenoGmbhFeStile1312LedMatrix1.isRDMSupported, true)

        // Oem_fiberli_node2x_1 (0x2A48)
        XCTAssertEqual(OEMCode.fiberliNode2X1, 0x2A48)
        XCTAssertEqual(OEMCode.fiberliNode2X1.description, "Oem_fiberli_node2x_1")
        XCTAssertEqual(OEMCode.fiberliNode2X1.mnemonic, "Oem_fiberli_node2x_1")
        XCTAssertEqual(OEMCode.fiberliNode2X1.manufacturer, "Fiberli")
        XCTAssertEqual(OEMCode.fiberliNode2X1.product, "Node2X")
        XCTAssertEqual(OEMCode.fiberliNode2X1.dmxIn, 0)
        XCTAssertEqual(OEMCode.fiberliNode2X1.dmxOut, 2)
        XCTAssertEqual(OEMCode.fiberliNode2X1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.fiberliNode2X1.isRDMSupported, false)

        // Oem_fiberli_node4x_1 (0x2A15)
        XCTAssertEqual(OEMCode.fiberliNode4X1, 0x2A15)
        XCTAssertEqual(OEMCode.fiberliNode4X1.description, "Oem_fiberli_node4x_1")
        XCTAssertEqual(OEMCode.fiberliNode4X1.mnemonic, "Oem_fiberli_node4x_1")
        XCTAssertEqual(OEMCode.fiberliNode4X1.manufacturer, "Fiberli")
        XCTAssertEqual(OEMCode.fiberliNode4X1.product, "Node4X")
        XCTAssertEqual(OEMCode.fiberliNode4X1.dmxIn, 0)
        XCTAssertEqual(OEMCode.fiberliNode4X1.dmxOut, 4)
        XCTAssertEqual(OEMCode.fiberliNode4X1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.fiberliNode4X1.isRDMSupported, false)

        // Oem_fiberli_node8x_1 (0x2963)
        XCTAssertEqual(OEMCode.fiberliNode8X1, 0x2963)
        XCTAssertEqual(OEMCode.fiberliNode8X1.description, "Oem_fiberli_node8x_1")
        XCTAssertEqual(OEMCode.fiberliNode8X1.mnemonic, "Oem_fiberli_node8x_1")
        XCTAssertEqual(OEMCode.fiberliNode8X1.manufacturer, "Fiberli")
        XCTAssertEqual(OEMCode.fiberliNode8X1.product, "Node8X")
        XCTAssertEqual(OEMCode.fiberliNode8X1.dmxIn, 0)
        XCTAssertEqual(OEMCode.fiberliNode8X1.dmxOut, 8)
        XCTAssertEqual(OEMCode.fiberliNode8X1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.fiberliNode8X1.isRDMSupported, false)

        // Oem_focus_technologies_bv_focus3d_1 (0x2A45)
        XCTAssertEqual(OEMCode.focusTechnologiesBvFocus3D1, 0x2A45)
        XCTAssertEqual(OEMCode.focusTechnologiesBvFocus3D1.description, "Oem_focus_technologies_bv_focus3d_1")
        XCTAssertEqual(OEMCode.focusTechnologiesBvFocus3D1.mnemonic, "Oem_focus_technologies_bv_focus3d_1")
        XCTAssertEqual(OEMCode.focusTechnologiesBvFocus3D1.manufacturer, "Focus Technologies BV")
        XCTAssertEqual(OEMCode.focusTechnologiesBvFocus3D1.product, "Focus3D")
        XCTAssertEqual(OEMCode.focusTechnologiesBvFocus3D1.dmxIn, 32)
        XCTAssertEqual(OEMCode.focusTechnologiesBvFocus3D1.dmxOut, 32)
        XCTAssertEqual(OEMCode.focusTechnologiesBvFocus3D1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.focusTechnologiesBvFocus3D1.isRDMSupported, false)

        // Oem_german_light_products_gmbh_impression_e350_1 (0x2926)
        XCTAssertEqual(OEMCode.germanLightProductsGmbhImpressionE3501, 0x2926)
        XCTAssertEqual(OEMCode.germanLightProductsGmbhImpressionE3501.description, "Oem_german_light_products_gmbh_impression_e350_1")
        XCTAssertEqual(OEMCode.germanLightProductsGmbhImpressionE3501.mnemonic, "Oem_german_light_products_gmbh_impression_e350_1")
        XCTAssertEqual(OEMCode.germanLightProductsGmbhImpressionE3501.manufacturer, "German Light Products GmbH")
        XCTAssertEqual(OEMCode.germanLightProductsGmbhImpressionE3501.product, "impression E350")
        XCTAssertEqual(OEMCode.germanLightProductsGmbhImpressionE3501.dmxIn, 1)
        XCTAssertEqual(OEMCode.germanLightProductsGmbhImpressionE3501.dmxOut, 0)
        XCTAssertEqual(OEMCode.germanLightProductsGmbhImpressionE3501.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.germanLightProductsGmbhImpressionE3501.isRDMSupported, true)

        // Oem_gip_innovation_tools_gmbh_ligeo_sl_wifi_1 (0x2951)
        XCTAssertEqual(OEMCode.gipInnovationToolsGmbhLigeoSlWifi1, 0x2951)
        XCTAssertEqual(OEMCode.gipInnovationToolsGmbhLigeoSlWifi1.description, "Oem_gip_innovation_tools_gmbh_ligeo_sl_wifi_1")
        XCTAssertEqual(OEMCode.gipInnovationToolsGmbhLigeoSlWifi1.mnemonic, "Oem_gip_innovation_tools_gmbh_ligeo_sl_wifi_1")
        XCTAssertEqual(OEMCode.gipInnovationToolsGmbhLigeoSlWifi1.manufacturer, "GIP Innovation Tools GmbH")
        XCTAssertEqual(OEMCode.gipInnovationToolsGmbhLigeoSlWifi1.product, "LIGEO SL WiFi")
        XCTAssertEqual(OEMCode.gipInnovationToolsGmbhLigeoSlWifi1.dmxIn, 1)
        XCTAssertEqual(OEMCode.gipInnovationToolsGmbhLigeoSlWifi1.dmxOut, 0)
        XCTAssertEqual(OEMCode.gipInnovationToolsGmbhLigeoSlWifi1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.gipInnovationToolsGmbhLigeoSlWifi1.isRDMSupported, true)

        // Oem_glp_german_light_products_gmbh_highlander_1 (0x29B2)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhHighlander1, 0x29B2)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhHighlander1.description, "Oem_glp_german_light_products_gmbh_highlander_1")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhHighlander1.mnemonic, "Oem_glp_german_light_products_gmbh_highlander_1")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhHighlander1.manufacturer, "GLP German Light Products GmbH")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhHighlander1.product, "Highlander")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhHighlander1.dmxIn, 1)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhHighlander1.dmxOut, 0)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhHighlander1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhHighlander1.isRDMSupported, true)

        // Oem_glp_german_light_products_gmbh_impression_fr10_bar_1 (0x29FA)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionFr10Bar1, 0x29FA)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionFr10Bar1.description, "Oem_glp_german_light_products_gmbh_impression_fr10_bar_1")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionFr10Bar1.mnemonic, "Oem_glp_german_light_products_gmbh_impression_fr10_bar_1")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionFr10Bar1.manufacturer, "GLP German Light Products GmbH")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionFr10Bar1.product, "Impression FR10 Bar")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionFr10Bar1.dmxIn, 0)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionFr10Bar1.dmxOut, 1)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionFr10Bar1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionFr10Bar1.isRDMSupported, true)

        // Oem_glp_german_light_products_gmbh_impression_w350_1 (0x29B6)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionW3501, 0x29B6)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionW3501.description, "Oem_glp_german_light_products_gmbh_impression_w350_1")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionW3501.mnemonic, "Oem_glp_german_light_products_gmbh_impression_w350_1")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionW3501.manufacturer, "GLP German Light Products GmbH")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionW3501.product, "Impression W350")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionW3501.dmxIn, 1)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionW3501.dmxOut, 1)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionW3501.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhImpressionW3501.isRDMSupported, true)

        // Oem_glp_german_light_products_gmbh_knv_arc_1 (0x2964)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvArc1, 0x2964)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvArc1.description, "Oem_glp_german_light_products_gmbh_knv_arc_1")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvArc1.mnemonic, "Oem_glp_german_light_products_gmbh_knv_arc_1")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvArc1.manufacturer, "GLP German Light Products GmbH")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvArc1.product, "KNV Arc")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvArc1.dmxIn, 0)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvArc1.dmxOut, 1)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvArc1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvArc1.isRDMSupported, true)

        // Oem_glp_german_light_products_gmbh_knv_cube_1 (0x2965)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvCube1, 0x2965)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvCube1.description, "Oem_glp_german_light_products_gmbh_knv_cube_1")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvCube1.mnemonic, "Oem_glp_german_light_products_gmbh_knv_cube_1")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvCube1.manufacturer, "GLP German Light Products GmbH")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvCube1.product, "KNV Cube")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvCube1.dmxIn, 0)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvCube1.dmxOut, 1)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvCube1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvCube1.isRDMSupported, true)

        // Oem_glp_german_light_products_gmbh_knv_psu_1 (0x29F9)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvPsu1, 0x29F9)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvPsu1.description, "Oem_glp_german_light_products_gmbh_knv_psu_1")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvPsu1.mnemonic, "Oem_glp_german_light_products_gmbh_knv_psu_1")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvPsu1.manufacturer, "GLP German Light Products GmbH")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvPsu1.product, "KNV PSU")
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvPsu1.dmxIn, 0)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvPsu1.dmxOut, 1)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvPsu1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.glpGermanLightProductsGmbhKnvPsu1.isRDMSupported, true)

        // Oem_guangzhou_chaiyi_light_co_ltd_air_gate_1 (0x2A25)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdAirGate1, 0x2A25)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdAirGate1.description, "Oem_guangzhou_chaiyi_light_co_ltd_air_gate_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdAirGate1.mnemonic, "Oem_guangzhou_chaiyi_light_co_ltd_air_gate_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdAirGate1.manufacturer, "Guangzhou ChaiYi Light CO Ltd")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdAirGate1.product, "Air Gate")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdAirGate1.dmxIn, 4)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdAirGate1.dmxOut, 4)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdAirGate1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdAirGate1.isRDMSupported, true)

        // Oem_guangzhou_chaiyi_light_co_ltd_dmxgate_1 (0x2974)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdDmxgate1, 0x2974)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdDmxgate1.description, "Oem_guangzhou_chaiyi_light_co_ltd_dmxgate_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdDmxgate1.mnemonic, "Oem_guangzhou_chaiyi_light_co_ltd_dmxgate_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdDmxgate1.manufacturer, "Guangzhou ChaiYi Light CO Ltd")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdDmxgate1.product, "DMXGate")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdDmxgate1.dmxIn, 4)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdDmxgate1.dmxOut, 4)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdDmxgate1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdDmxgate1.isRDMSupported, true)

        // Oem_guangzhou_chaiyi_light_co_ltd_general_purpose_device_1 (0x2A06)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdGeneralPurposeDevice1, 0x2A06)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdGeneralPurposeDevice1.description, "Oem_guangzhou_chaiyi_light_co_ltd_general_purpose_device_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdGeneralPurposeDevice1.mnemonic, "Oem_guangzhou_chaiyi_light_co_ltd_general_purpose_device_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdGeneralPurposeDevice1.manufacturer, "Guangzhou ChaiYi Light CO Ltd")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdGeneralPurposeDevice1.product, "General Purpose Device")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdGeneralPurposeDevice1.dmxIn, 4)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdGeneralPurposeDevice1.dmxOut, 4)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdGeneralPurposeDevice1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdGeneralPurposeDevice1.isRDMSupported, true)

        // Oem_guangzhou_chaiyi_light_co_ltd_replay_server_1 (0x29FB)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdReplayServer1, 0x29FB)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdReplayServer1.description, "Oem_guangzhou_chaiyi_light_co_ltd_replay_server_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdReplayServer1.mnemonic, "Oem_guangzhou_chaiyi_light_co_ltd_replay_server_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdReplayServer1.manufacturer, "Guangzhou ChaiYi Light CO Ltd")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdReplayServer1.product, "Replay Server")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdReplayServer1.dmxIn, 8)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdReplayServer1.dmxOut, 8)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdReplayServer1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdReplayServer1.isRDMSupported, true)

        // Oem_guangzhou_chaiyi_light_co_ltd_tekmand_node_1 (0x29B0)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode1, 0x29B0)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode1.description, "Oem_guangzhou_chaiyi_light_co_ltd_tekmand_node_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode1.mnemonic, "Oem_guangzhou_chaiyi_light_co_ltd_tekmand_node_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode1.manufacturer, "Guangzhou ChaiYi Light CO Ltd")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode1.product, "TEKMAND Node")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode1.dmxIn, 4)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode1.dmxOut, 4)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode1.isRDMSupported, true)

        // Oem_guangzhou_chaiyi_light_co_ltd_tekmand_node_4p_1 (0x29BE)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4P1, 0x29BE)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4P1.description, "Oem_guangzhou_chaiyi_light_co_ltd_tekmand_node_4p_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4P1.mnemonic, "Oem_guangzhou_chaiyi_light_co_ltd_tekmand_node_4p_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4P1.manufacturer, "Guangzhou ChaiYi Light CO Ltd")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4P1.product, "TEKMAND Node 4P")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4P1.dmxIn, 4)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4P1.dmxOut, 4)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4P1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4P1.isRDMSupported, true)

        // Oem_guangzhou_chaiyi_light_co_ltd_tekmand_node_4p_od_1 (0x29BC)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4POd1, 0x29BC)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4POd1.description, "Oem_guangzhou_chaiyi_light_co_ltd_tekmand_node_4p_od_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4POd1.mnemonic, "Oem_guangzhou_chaiyi_light_co_ltd_tekmand_node_4p_od_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4POd1.manufacturer, "Guangzhou ChaiYi Light CO Ltd")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4POd1.product, "TEKMAND Node 4P OD")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4POd1.dmxIn, 4)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4POd1.dmxOut, 4)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4POd1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode4POd1.isRDMSupported, true)

        // Oem_guangzhou_chaiyi_light_co_ltd_tekmand_node_8p_1 (0x29BD)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode8P1, 0x29BD)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode8P1.description, "Oem_guangzhou_chaiyi_light_co_ltd_tekmand_node_8p_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode8P1.mnemonic, "Oem_guangzhou_chaiyi_light_co_ltd_tekmand_node_8p_1")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode8P1.manufacturer, "Guangzhou ChaiYi Light CO Ltd")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode8P1.product, "TEKMAND Node 8P")
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode8P1.dmxIn, 8)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode8P1.dmxOut, 8)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode8P1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouChaiyiLightCoLtdTekmandNode8P1.isRDMSupported, true)

        // Oem_guangzhou_chaoran_computer_co_ltd_ethernode8_1 (0x2925)
        XCTAssertEqual(OEMCode.guangzhouChaoranComputerCoLtdEthernode81, 0x2925)
        XCTAssertEqual(OEMCode.guangzhouChaoranComputerCoLtdEthernode81.description, "Oem_guangzhou_chaoran_computer_co_ltd_ethernode8_1")
        XCTAssertEqual(OEMCode.guangzhouChaoranComputerCoLtdEthernode81.mnemonic, "Oem_guangzhou_chaoran_computer_co_ltd_ethernode8_1")
        XCTAssertEqual(OEMCode.guangzhouChaoranComputerCoLtdEthernode81.manufacturer, "Guangzhou Chaoran Computer Co Ltd")
        XCTAssertEqual(OEMCode.guangzhouChaoranComputerCoLtdEthernode81.product, "EtherNode8")
        XCTAssertEqual(OEMCode.guangzhouChaoranComputerCoLtdEthernode81.dmxIn, 8)
        XCTAssertEqual(OEMCode.guangzhouChaoranComputerCoLtdEthernode81.dmxOut, 8)
        XCTAssertEqual(OEMCode.guangzhouChaoranComputerCoLtdEthernode81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouChaoranComputerCoLtdEthernode81.isRDMSupported, true)

        // Oem_guangzhou_hongcai_stage_equipment_co_ltd_x7_coupe_1 (0x2A53)
        XCTAssertEqual(OEMCode.guangzhouHongcaiStageEquipmentCoLtdX7Coupe1, 0x2A53)
        XCTAssertEqual(OEMCode.guangzhouHongcaiStageEquipmentCoLtdX7Coupe1.description, "Oem_guangzhou_hongcai_stage_equipment_co_ltd_x7_coupe_1")
        XCTAssertEqual(OEMCode.guangzhouHongcaiStageEquipmentCoLtdX7Coupe1.mnemonic, "Oem_guangzhou_hongcai_stage_equipment_co_ltd_x7_coupe_1")
        XCTAssertEqual(OEMCode.guangzhouHongcaiStageEquipmentCoLtdX7Coupe1.manufacturer, "guangzhou hongcai stage equipment co ltd")
        XCTAssertEqual(OEMCode.guangzhouHongcaiStageEquipmentCoLtdX7Coupe1.product, "x7 coupe")
        XCTAssertEqual(OEMCode.guangzhouHongcaiStageEquipmentCoLtdX7Coupe1.dmxIn, 1)
        XCTAssertEqual(OEMCode.guangzhouHongcaiStageEquipmentCoLtdX7Coupe1.dmxOut, 1)
        XCTAssertEqual(OEMCode.guangzhouHongcaiStageEquipmentCoLtdX7Coupe1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouHongcaiStageEquipmentCoLtdX7Coupe1.isRDMSupported, true)

        // Oem_guangzhou_huayong_intelligent_technology_co_ltd_huayong_controller_1 (0x29A5)
        XCTAssertEqual(OEMCode.guangzhouHuayongIntelligentTechnologyCoLtdHuayongController1, 0x29A5)
        XCTAssertEqual(OEMCode.guangzhouHuayongIntelligentTechnologyCoLtdHuayongController1.description, "Oem_guangzhou_huayong_intelligent_technology_co_ltd_huayong_controller_1")
        XCTAssertEqual(OEMCode.guangzhouHuayongIntelligentTechnologyCoLtdHuayongController1.mnemonic, "Oem_guangzhou_huayong_intelligent_technology_co_ltd_huayong_controller_1")
        XCTAssertEqual(OEMCode.guangzhouHuayongIntelligentTechnologyCoLtdHuayongController1.manufacturer, "Guangzhou HuaYong Intelligent Technology Co Ltd")
        XCTAssertEqual(OEMCode.guangzhouHuayongIntelligentTechnologyCoLtdHuayongController1.product, "HuaYong Controller")
        XCTAssertEqual(OEMCode.guangzhouHuayongIntelligentTechnologyCoLtdHuayongController1.dmxIn, 2)
        XCTAssertEqual(OEMCode.guangzhouHuayongIntelligentTechnologyCoLtdHuayongController1.dmxOut, 6)
        XCTAssertEqual(OEMCode.guangzhouHuayongIntelligentTechnologyCoLtdHuayongController1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouHuayongIntelligentTechnologyCoLtdHuayongController1.isRDMSupported, true)

        // Oem_guangzhou_jinzhihui_electronic_technology_co_top_1440_led_rgb_strobe_1 (0x2995)
        XCTAssertEqual(OEMCode.guangzhouJinzhihuiElectronicTechnologyCoTop1440LedRgbStrobe1, 0x2995)
        XCTAssertEqual(OEMCode.guangzhouJinzhihuiElectronicTechnologyCoTop1440LedRgbStrobe1.description, "Oem_guangzhou_jinzhihui_electronic_technology_co_top_1440_led_rgb_strobe_1")
        XCTAssertEqual(OEMCode.guangzhouJinzhihuiElectronicTechnologyCoTop1440LedRgbStrobe1.mnemonic, "Oem_guangzhou_jinzhihui_electronic_technology_co_top_1440_led_rgb_strobe_1")
        XCTAssertEqual(OEMCode.guangzhouJinzhihuiElectronicTechnologyCoTop1440LedRgbStrobe1.manufacturer, "Guangzhou JinZhiHui Electronic Technology Co")
        XCTAssertEqual(OEMCode.guangzhouJinzhihuiElectronicTechnologyCoTop1440LedRgbStrobe1.product, "TOP 1440 LED RGB STROBE")
        XCTAssertEqual(OEMCode.guangzhouJinzhihuiElectronicTechnologyCoTop1440LedRgbStrobe1.dmxIn, 8)
        XCTAssertEqual(OEMCode.guangzhouJinzhihuiElectronicTechnologyCoTop1440LedRgbStrobe1.dmxOut, 8)
        XCTAssertEqual(OEMCode.guangzhouJinzhihuiElectronicTechnologyCoTop1440LedRgbStrobe1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouJinzhihuiElectronicTechnologyCoTop1440LedRgbStrobe1.isRDMSupported, true)

        // Oem_guangzhou_ming_jing_stage_light_king_kong_controller_1 (0x2962)
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightKingKongController1, 0x2962)
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightKingKongController1.description, "Oem_guangzhou_ming_jing_stage_light_king_kong_controller_1")
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightKingKongController1.mnemonic, "Oem_guangzhou_ming_jing_stage_light_king_kong_controller_1")
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightKingKongController1.manufacturer, "Guangzhou Ming Jing Stage Light")
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightKingKongController1.product, "King Kong Controller")
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightKingKongController1.dmxIn, 4)
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightKingKongController1.dmxOut, 4)
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightKingKongController1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightKingKongController1.isRDMSupported, true)

        // Oem_guangzhou_ming_jing_stage_lighting_equipment_co_ltd_kingkongbaton_1 (0x29FF)
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightingEquipmentCoLtdKingkongbaton1, 0x29FF)
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightingEquipmentCoLtdKingkongbaton1.description, "Oem_guangzhou_ming_jing_stage_lighting_equipment_co_ltd_kingkongbaton_1")
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightingEquipmentCoLtdKingkongbaton1.mnemonic, "Oem_guangzhou_ming_jing_stage_lighting_equipment_co_ltd_kingkongbaton_1")
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightingEquipmentCoLtdKingkongbaton1.manufacturer, "GuangZhou Ming jing stage lighting equipment co LTD")
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightingEquipmentCoLtdKingkongbaton1.product, "KingKongBaton")
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightingEquipmentCoLtdKingkongbaton1.dmxIn, 1)
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightingEquipmentCoLtdKingkongbaton1.dmxOut, 8)
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightingEquipmentCoLtdKingkongbaton1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangzhouMingJingStageLightingEquipmentCoLtdKingkongbaton1.isRDMSupported, true)

        // Oem_hdl_dmxnode8_1 (0x29DA)
        XCTAssertEqual(OEMCode.hdlDmxnode81, 0x29DA)
        XCTAssertEqual(OEMCode.hdlDmxnode81.description, "Oem_hdl_dmxnode8_1")
        XCTAssertEqual(OEMCode.hdlDmxnode81.mnemonic, "Oem_hdl_dmxnode8_1")
        XCTAssertEqual(OEMCode.hdlDmxnode81.manufacturer, "HDL")
        XCTAssertEqual(OEMCode.hdlDmxnode81.product, "DMXNode8")
        XCTAssertEqual(OEMCode.hdlDmxnode81.dmxIn, 8)
        XCTAssertEqual(OEMCode.hdlDmxnode81.dmxOut, 8)
        XCTAssertEqual(OEMCode.hdlDmxnode81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hdlDmxnode81.isRDMSupported, true)

        // Oem_hera_led_hera_ether_node4_1 (0x2956)
        XCTAssertEqual(OEMCode.heraLedHeraEtherNode41, 0x2956)
        XCTAssertEqual(OEMCode.heraLedHeraEtherNode41.description, "Oem_hera_led_hera_ether_node4_1")
        XCTAssertEqual(OEMCode.heraLedHeraEtherNode41.mnemonic, "Oem_hera_led_hera_ether_node4_1")
        XCTAssertEqual(OEMCode.heraLedHeraEtherNode41.manufacturer, "Hera Led")
        XCTAssertEqual(OEMCode.heraLedHeraEtherNode41.product, "Hera Ether Node4")
        XCTAssertEqual(OEMCode.heraLedHeraEtherNode41.dmxIn, 0)
        XCTAssertEqual(OEMCode.heraLedHeraEtherNode41.dmxOut, 4)
        XCTAssertEqual(OEMCode.heraLedHeraEtherNode41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.heraLedHeraEtherNode41.isRDMSupported, true)

        // Oem_hycl_bootloader_1 (0x29E2)
        XCTAssertEqual(OEMCode.hyclBootloader1, 0x29E2)
        XCTAssertEqual(OEMCode.hyclBootloader1.description, "Oem_hycl_bootloader_1")
        XCTAssertEqual(OEMCode.hyclBootloader1.mnemonic, "Oem_hycl_bootloader_1")
        XCTAssertEqual(OEMCode.hyclBootloader1.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclBootloader1.product, "BootLoader")
        XCTAssertEqual(OEMCode.hyclBootloader1.dmxIn, 0)
        XCTAssertEqual(OEMCode.hyclBootloader1.dmxOut, 0)
        XCTAssertEqual(OEMCode.hyclBootloader1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.hyclBootloader1.isRDMSupported, false)

        // Oem_hycl_dmx_player_16_1 (0x291E)
        XCTAssertEqual(OEMCode.hyclDmxPlayer161, 0x291E)
        XCTAssertEqual(OEMCode.hyclDmxPlayer161.description, "Oem_hycl_dmx_player_16_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer161.mnemonic, "Oem_hycl_dmx_player_16_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer161.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxPlayer161.product, "DMX_Player_16")
        XCTAssertEqual(OEMCode.hyclDmxPlayer161.dmxIn, 1)
        XCTAssertEqual(OEMCode.hyclDmxPlayer161.dmxOut, 16)
        XCTAssertEqual(OEMCode.hyclDmxPlayer161.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxPlayer161.isRDMSupported, true)

        // Oem_hycl_dmx_player_1_1 (0x2920)
        XCTAssertEqual(OEMCode.hyclDmxPlayer11, 0x2920)
        XCTAssertEqual(OEMCode.hyclDmxPlayer11.description, "Oem_hycl_dmx_player_1_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer11.mnemonic, "Oem_hycl_dmx_player_1_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer11.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxPlayer11.product, "DMX_Player_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer11.dmxIn, 1)
        XCTAssertEqual(OEMCode.hyclDmxPlayer11.dmxOut, 1)
        XCTAssertEqual(OEMCode.hyclDmxPlayer11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxPlayer11.isRDMSupported, true)

        // Oem_hycl_dmx_player_256_1 (0x29C0)
        XCTAssertEqual(OEMCode.hyclDmxPlayer2561, 0x29C0)
        XCTAssertEqual(OEMCode.hyclDmxPlayer2561.description, "Oem_hycl_dmx_player_256_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer2561.mnemonic, "Oem_hycl_dmx_player_256_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer2561.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxPlayer2561.product, "dmx player 256")
        XCTAssertEqual(OEMCode.hyclDmxPlayer2561.dmxIn, 1)
        XCTAssertEqual(OEMCode.hyclDmxPlayer2561.dmxOut, 256)
        XCTAssertEqual(OEMCode.hyclDmxPlayer2561.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxPlayer2561.isRDMSupported, true)

        // Oem_hycl_dmx_player_2_1 (0x29C2)
        XCTAssertEqual(OEMCode.hyclDmxPlayer21, 0x29C2)
        XCTAssertEqual(OEMCode.hyclDmxPlayer21.description, "Oem_hycl_dmx_player_2_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer21.mnemonic, "Oem_hycl_dmx_player_2_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer21.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxPlayer21.product, "dmx player 2")
        XCTAssertEqual(OEMCode.hyclDmxPlayer21.dmxIn, 1)
        XCTAssertEqual(OEMCode.hyclDmxPlayer21.dmxOut, 2)
        XCTAssertEqual(OEMCode.hyclDmxPlayer21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxPlayer21.isRDMSupported, true)

        // Oem_hycl_dmx_player_32_1 (0x291D)
        XCTAssertEqual(OEMCode.hyclDmxPlayer321, 0x291D)
        XCTAssertEqual(OEMCode.hyclDmxPlayer321.description, "Oem_hycl_dmx_player_32_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer321.mnemonic, "Oem_hycl_dmx_player_32_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer321.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxPlayer321.product, "DMX_Player_32")
        XCTAssertEqual(OEMCode.hyclDmxPlayer321.dmxIn, 1)
        XCTAssertEqual(OEMCode.hyclDmxPlayer321.dmxOut, 32)
        XCTAssertEqual(OEMCode.hyclDmxPlayer321.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxPlayer321.isRDMSupported, true)

        // Oem_hycl_dmx_player_4_1 (0x2921)
        XCTAssertEqual(OEMCode.hyclDmxPlayer41, 0x2921)
        XCTAssertEqual(OEMCode.hyclDmxPlayer41.description, "Oem_hycl_dmx_player_4_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer41.mnemonic, "Oem_hycl_dmx_player_4_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer41.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxPlayer41.product, "DMX_Player_4")
        XCTAssertEqual(OEMCode.hyclDmxPlayer41.dmxIn, 1)
        XCTAssertEqual(OEMCode.hyclDmxPlayer41.dmxOut, 4)
        XCTAssertEqual(OEMCode.hyclDmxPlayer41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxPlayer41.isRDMSupported, true)

        // Oem_hycl_dmx_player_512_1 (0x29BF)
        XCTAssertEqual(OEMCode.hyclDmxPlayer5121, 0x29BF)
        XCTAssertEqual(OEMCode.hyclDmxPlayer5121.description, "Oem_hycl_dmx_player_512_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer5121.mnemonic, "Oem_hycl_dmx_player_512_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer5121.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxPlayer5121.product, "dmx player 512")
        XCTAssertEqual(OEMCode.hyclDmxPlayer5121.dmxIn, 1)
        XCTAssertEqual(OEMCode.hyclDmxPlayer5121.dmxOut, 512)
        XCTAssertEqual(OEMCode.hyclDmxPlayer5121.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxPlayer5121.isRDMSupported, true)

        // Oem_hycl_dmx_player_64_1 (0x29C1)
        XCTAssertEqual(OEMCode.hyclDmxPlayer641, 0x29C1)
        XCTAssertEqual(OEMCode.hyclDmxPlayer641.description, "Oem_hycl_dmx_player_64_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer641.mnemonic, "Oem_hycl_dmx_player_64_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer641.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxPlayer641.product, "dmx player 64")
        XCTAssertEqual(OEMCode.hyclDmxPlayer641.dmxIn, 1)
        XCTAssertEqual(OEMCode.hyclDmxPlayer641.dmxOut, 64)
        XCTAssertEqual(OEMCode.hyclDmxPlayer641.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxPlayer641.isRDMSupported, true)

        // Oem_hycl_dmx_player_8_1 (0x291F)
        XCTAssertEqual(OEMCode.hyclDmxPlayer81, 0x291F)
        XCTAssertEqual(OEMCode.hyclDmxPlayer81.description, "Oem_hycl_dmx_player_8_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer81.mnemonic, "Oem_hycl_dmx_player_8_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayer81.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxPlayer81.product, "DMX_Player_8")
        XCTAssertEqual(OEMCode.hyclDmxPlayer81.dmxIn, 1)
        XCTAssertEqual(OEMCode.hyclDmxPlayer81.dmxOut, 8)
        XCTAssertEqual(OEMCode.hyclDmxPlayer81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxPlayer81.isRDMSupported, true)

        // Oem_hycl_dmx_player_super_16_1 (0x29BB)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper161, 0x29BB)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper161.description, "Oem_hycl_dmx_player_super_16_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper161.mnemonic, "Oem_hycl_dmx_player_super_16_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper161.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper161.product, "DMX Player Super 16")
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper161.dmxIn, 0)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper161.dmxOut, 16)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper161.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper161.isRDMSupported, false)

        // Oem_hycl_dmx_player_super_4_1 (0x29B9)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper41, 0x29B9)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper41.description, "Oem_hycl_dmx_player_super_4_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper41.mnemonic, "Oem_hycl_dmx_player_super_4_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper41.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper41.product, "DMX Player Super 4")
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper41.dmxIn, 0)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper41.dmxOut, 4)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper41.isRDMSupported, false)

        // Oem_hycl_dmx_player_super_8_1 (0x29BA)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper81, 0x29BA)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper81.description, "Oem_hycl_dmx_player_super_8_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper81.mnemonic, "Oem_hycl_dmx_player_super_8_1")
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper81.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper81.product, "DMX Player Super 8")
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper81.dmxIn, 0)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper81.dmxOut, 8)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxPlayerSuper81.isRDMSupported, false)

        // Oem_hycl_dmx_sync_1 (0x291C)
        XCTAssertEqual(OEMCode.hyclDmxSync1, 0x291C)
        XCTAssertEqual(OEMCode.hyclDmxSync1.description, "Oem_hycl_dmx_sync_1")
        XCTAssertEqual(OEMCode.hyclDmxSync1.mnemonic, "Oem_hycl_dmx_sync_1")
        XCTAssertEqual(OEMCode.hyclDmxSync1.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclDmxSync1.product, "DMX_SYNC")
        XCTAssertEqual(OEMCode.hyclDmxSync1.dmxIn, 0)
        XCTAssertEqual(OEMCode.hyclDmxSync1.dmxOut, 256)
        XCTAssertEqual(OEMCode.hyclDmxSync1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclDmxSync1.isRDMSupported, true)

        // Oem_hycl_iot_update_1 (0x2A0A)
        XCTAssertEqual(OEMCode.hyclIotUpdate1, 0x2A0A)
        XCTAssertEqual(OEMCode.hyclIotUpdate1.description, "Oem_hycl_iot_update_1")
        XCTAssertEqual(OEMCode.hyclIotUpdate1.mnemonic, "Oem_hycl_iot_update_1")
        XCTAssertEqual(OEMCode.hyclIotUpdate1.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclIotUpdate1.product, "IOT Update")
        XCTAssertEqual(OEMCode.hyclIotUpdate1.dmxIn, 0)
        XCTAssertEqual(OEMCode.hyclIotUpdate1.dmxOut, 0)
        XCTAssertEqual(OEMCode.hyclIotUpdate1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.hyclIotUpdate1.isRDMSupported, false)

        // Oem_hycl_rdm_player_1_1 (0x2A0B)
        XCTAssertEqual(OEMCode.hyclRdmPlayer11, 0x2A0B)
        XCTAssertEqual(OEMCode.hyclRdmPlayer11.description, "Oem_hycl_rdm_player_1_1")
        XCTAssertEqual(OEMCode.hyclRdmPlayer11.mnemonic, "Oem_hycl_rdm_player_1_1")
        XCTAssertEqual(OEMCode.hyclRdmPlayer11.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclRdmPlayer11.product, "RDM Player 1")
        XCTAssertEqual(OEMCode.hyclRdmPlayer11.dmxIn, 1)
        XCTAssertEqual(OEMCode.hyclRdmPlayer11.dmxOut, 1)
        XCTAssertEqual(OEMCode.hyclRdmPlayer11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclRdmPlayer11.isRDMSupported, true)

        // Oem_hycl_rdm_player_2_1 (0x2A0C)
        XCTAssertEqual(OEMCode.hyclRdmPlayer21, 0x2A0C)
        XCTAssertEqual(OEMCode.hyclRdmPlayer21.description, "Oem_hycl_rdm_player_2_1")
        XCTAssertEqual(OEMCode.hyclRdmPlayer21.mnemonic, "Oem_hycl_rdm_player_2_1")
        XCTAssertEqual(OEMCode.hyclRdmPlayer21.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclRdmPlayer21.product, "RDM Player 2")
        XCTAssertEqual(OEMCode.hyclRdmPlayer21.dmxIn, 2)
        XCTAssertEqual(OEMCode.hyclRdmPlayer21.dmxOut, 2)
        XCTAssertEqual(OEMCode.hyclRdmPlayer21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclRdmPlayer21.isRDMSupported, true)

        // Oem_hycl_rdm_player_4_1 (0x2A0D)
        XCTAssertEqual(OEMCode.hyclRdmPlayer41, 0x2A0D)
        XCTAssertEqual(OEMCode.hyclRdmPlayer41.description, "Oem_hycl_rdm_player_4_1")
        XCTAssertEqual(OEMCode.hyclRdmPlayer41.mnemonic, "Oem_hycl_rdm_player_4_1")
        XCTAssertEqual(OEMCode.hyclRdmPlayer41.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclRdmPlayer41.product, "RDM Player 4")
        XCTAssertEqual(OEMCode.hyclRdmPlayer41.dmxIn, 4)
        XCTAssertEqual(OEMCode.hyclRdmPlayer41.dmxOut, 4)
        XCTAssertEqual(OEMCode.hyclRdmPlayer41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclRdmPlayer41.isRDMSupported, true)

        // Oem_hycl_rdm_player_8_1 (0x2A0E)
        XCTAssertEqual(OEMCode.hyclRdmPlayer81, 0x2A0E)
        XCTAssertEqual(OEMCode.hyclRdmPlayer81.description, "Oem_hycl_rdm_player_8_1")
        XCTAssertEqual(OEMCode.hyclRdmPlayer81.mnemonic, "Oem_hycl_rdm_player_8_1")
        XCTAssertEqual(OEMCode.hyclRdmPlayer81.manufacturer, "HYCL")
        XCTAssertEqual(OEMCode.hyclRdmPlayer81.product, "RDM Player 8")
        XCTAssertEqual(OEMCode.hyclRdmPlayer81.dmxIn, 8)
        XCTAssertEqual(OEMCode.hyclRdmPlayer81.dmxOut, 8)
        XCTAssertEqual(OEMCode.hyclRdmPlayer81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hyclRdmPlayer81.isRDMSupported, true)

        // Oem_impolux_gmbh_ultim8_st16_o_1 (0x29AD)
        XCTAssertEqual(OEMCode.impoluxGmbhUltim8St16O1, 0x29AD)
        XCTAssertEqual(OEMCode.impoluxGmbhUltim8St16O1.description, "Oem_impolux_gmbh_ultim8_st16_o_1")
        XCTAssertEqual(OEMCode.impoluxGmbhUltim8St16O1.mnemonic, "Oem_impolux_gmbh_ultim8_st16_o_1")
        XCTAssertEqual(OEMCode.impoluxGmbhUltim8St16O1.manufacturer, "Impolux GmbH")
        XCTAssertEqual(OEMCode.impoluxGmbhUltim8St16O1.product, "ULTIM8 ST16 O")
        XCTAssertEqual(OEMCode.impoluxGmbhUltim8St16O1.dmxIn, 0)
        XCTAssertEqual(OEMCode.impoluxGmbhUltim8St16O1.dmxOut, 16)
        XCTAssertEqual(OEMCode.impoluxGmbhUltim8St16O1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.impoluxGmbhUltim8St16O1.isRDMSupported, false)

        // Oem_infinity_furion_s201_spot_1 (0x291A)
        XCTAssertEqual(OEMCode.infinityFurionS201Spot1, 0x291A)
        XCTAssertEqual(OEMCode.infinityFurionS201Spot1.description, "Oem_infinity_furion_s201_spot_1")
        XCTAssertEqual(OEMCode.infinityFurionS201Spot1.mnemonic, "Oem_infinity_furion_s201_spot_1")
        XCTAssertEqual(OEMCode.infinityFurionS201Spot1.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infinityFurionS201Spot1.product, "FURION S201 SPOT")
        XCTAssertEqual(OEMCode.infinityFurionS201Spot1.dmxIn, 1)
        XCTAssertEqual(OEMCode.infinityFurionS201Spot1.dmxOut, 0)
        XCTAssertEqual(OEMCode.infinityFurionS201Spot1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infinityFurionS201Spot1.isRDMSupported, true)

        // Oem_infinity_furion_s401_spot_1 (0x2919)
        XCTAssertEqual(OEMCode.infinityFurionS401Spot1, 0x2919)
        XCTAssertEqual(OEMCode.infinityFurionS401Spot1.description, "Oem_infinity_furion_s401_spot_1")
        XCTAssertEqual(OEMCode.infinityFurionS401Spot1.mnemonic, "Oem_infinity_furion_s401_spot_1")
        XCTAssertEqual(OEMCode.infinityFurionS401Spot1.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infinityFurionS401Spot1.product, "FURION S401 SPOT")
        XCTAssertEqual(OEMCode.infinityFurionS401Spot1.dmxIn, 1)
        XCTAssertEqual(OEMCode.infinityFurionS401Spot1.dmxOut, 0)
        XCTAssertEqual(OEMCode.infinityFurionS401Spot1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infinityFurionS401Spot1.isRDMSupported, true)

        // Oem_infinity_furion_s601_profile_1 (0x2918)
        XCTAssertEqual(OEMCode.infinityFurionS601Profile1, 0x2918)
        XCTAssertEqual(OEMCode.infinityFurionS601Profile1.description, "Oem_infinity_furion_s601_profile_1")
        XCTAssertEqual(OEMCode.infinityFurionS601Profile1.mnemonic, "Oem_infinity_furion_s601_profile_1")
        XCTAssertEqual(OEMCode.infinityFurionS601Profile1.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infinityFurionS601Profile1.product, "FURION S601 PROFILE")
        XCTAssertEqual(OEMCode.infinityFurionS601Profile1.dmxIn, 1)
        XCTAssertEqual(OEMCode.infinityFurionS601Profile1.dmxOut, 0)
        XCTAssertEqual(OEMCode.infinityFurionS601Profile1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infinityFurionS601Profile1.isRDMSupported, true)

        // Oem_integrated_system_technologies_idrive_workshop_1 (0x2A2D)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesIdriveWorkshop1, 0x2A2D)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesIdriveWorkshop1.description, "Oem_integrated_system_technologies_idrive_workshop_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesIdriveWorkshop1.mnemonic, "Oem_integrated_system_technologies_idrive_workshop_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesIdriveWorkshop1.manufacturer, "Integrated System Technologies")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesIdriveWorkshop1.product, "iDrive Workshop")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesIdriveWorkshop1.dmxIn, 0)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesIdriveWorkshop1.dmxOut, 0)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesIdriveWorkshop1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesIdriveWorkshop1.isRDMSupported, true)

        // Oem_integrated_system_technologies_ltd_idrive_thor_4_1 (0x2901)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveThor41, 0x2901)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveThor41.description, "Oem_integrated_system_technologies_ltd_idrive_thor_4_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveThor41.mnemonic, "Oem_integrated_system_technologies_ltd_idrive_thor_4_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveThor41.manufacturer, "Integrated System Technologies Ltd")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveThor41.product, "iDrive Thor 4")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveThor41.dmxIn, 4)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveThor41.dmxOut, 4)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveThor41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveThor41.isRDMSupported, true)

        // Oem_integrated_system_technologies_ltd_idrive_white_knight_24_1 (0x2903)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight241, 0x2903)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight241.description, "Oem_integrated_system_technologies_ltd_idrive_white_knight_24_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight241.mnemonic, "Oem_integrated_system_technologies_ltd_idrive_white_knight_24_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight241.manufacturer, "Integrated System Technologies Ltd")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight241.product, "iDrive White knight 24")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight241.dmxIn, 24)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight241.dmxOut, 24)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight241.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight241.isRDMSupported, true)

        // Oem_integrated_system_technologies_ltd_idrive_white_knight_48_1 (0x2904)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight481, 0x2904)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight481.description, "Oem_integrated_system_technologies_ltd_idrive_white_knight_48_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight481.mnemonic, "Oem_integrated_system_technologies_ltd_idrive_white_knight_48_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight481.manufacturer, "Integrated System Technologies Ltd")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight481.product, "iDrive White knight 48")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight481.dmxIn, 48)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight481.dmxOut, 48)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight481.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdIdriveWhiteKnight481.isRDMSupported, true)

        // Oem_integrated_system_technologies_ltd_quattro_cvl_1 (0x2900)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdQuattroCvl1, 0x2900)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdQuattroCvl1.description, "Oem_integrated_system_technologies_ltd_quattro_cvl_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdQuattroCvl1.mnemonic, "Oem_integrated_system_technologies_ltd_quattro_cvl_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdQuattroCvl1.manufacturer, "Integrated System Technologies Ltd")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdQuattroCvl1.product, "Quattro CVL")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdQuattroCvl1.dmxIn, 4)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdQuattroCvl1.dmxOut, 4)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdQuattroCvl1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesLtdQuattroCvl1.isRDMSupported, true)

        // Oem_integrated_system_technologies_sentinel_24_1 (0x2A3F)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesSentinel241, 0x2A3F)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesSentinel241.description, "Oem_integrated_system_technologies_sentinel_24_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesSentinel241.mnemonic, "Oem_integrated_system_technologies_sentinel_24_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesSentinel241.manufacturer, "Integrated System Technologies")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesSentinel241.product, "Sentinel 24")
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesSentinel241.dmxIn, 24)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesSentinel241.dmxOut, 24)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesSentinel241.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologiesSentinel241.isRDMSupported, true)

        // Oem_integrated_system_technology_ltd_thor16_silent_500w_1 (0x29CA)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdThor16Silent500W1, 0x29CA)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdThor16Silent500W1.description, "Oem_integrated_system_technology_ltd_thor16_silent_500w_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdThor16Silent500W1.mnemonic, "Oem_integrated_system_technology_ltd_thor16_silent_500w_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdThor16Silent500W1.manufacturer, "Integrated System Technology Ltd")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdThor16Silent500W1.product, "Thor16 Silent 500W")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdThor16Silent500W1.dmxIn, 16)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdThor16Silent500W1.dmxOut, 16)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdThor16Silent500W1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdThor16Silent500W1.isRDMSupported, true)

        // Oem_integrated_system_technology_ltd_white_knight_12_1 (0x2A10)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight121, 0x2A10)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight121.description, "Oem_integrated_system_technology_ltd_white_knight_12_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight121.mnemonic, "Oem_integrated_system_technology_ltd_white_knight_12_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight121.manufacturer, "Integrated System Technology Ltd")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight121.product, "White Knight 12")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight121.dmxIn, 12)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight121.dmxOut, 12)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight121.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight121.isRDMSupported, true)

        // Oem_integrated_system_technology_ltd_white_knight_24_dc_1 (0x29C9)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Dc1, 0x29C9)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Dc1.description, "Oem_integrated_system_technology_ltd_white_knight_24_dc_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Dc1.mnemonic, "Oem_integrated_system_technology_ltd_white_knight_24_dc_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Dc1.manufacturer, "Integrated System Technology Ltd")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Dc1.product, "White Knight 24 DC")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Dc1.dmxIn, 24)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Dc1.dmxOut, 24)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Dc1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Dc1.isRDMSupported, true)

        // Oem_integrated_system_technology_ltd_white_knight_24_emergency_1 (0x29A0)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Emergency1, 0x29A0)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Emergency1.description, "Oem_integrated_system_technology_ltd_white_knight_24_emergency_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Emergency1.mnemonic, "Oem_integrated_system_technology_ltd_white_knight_24_emergency_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Emergency1.manufacturer, "Integrated System Technology Ltd")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Emergency1.product, "White Knight 24 Emergency")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Emergency1.dmxIn, 24)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Emergency1.dmxOut, 24)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Emergency1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Emergency1.isRDMSupported, true)

        // Oem_integrated_system_technology_ltd_white_knight_24_silent_500w_1 (0x29CB)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Silent500W1, 0x29CB)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Silent500W1.description, "Oem_integrated_system_technology_ltd_white_knight_24_silent_500w_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Silent500W1.mnemonic, "Oem_integrated_system_technology_ltd_white_knight_24_silent_500w_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Silent500W1.manufacturer, "Integrated System Technology Ltd")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Silent500W1.product, "White Knight 24 Silent 500W")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Silent500W1.dmxIn, 24)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Silent500W1.dmxOut, 24)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Silent500W1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight24Silent500W1.isRDMSupported, true)

        // Oem_integrated_system_technology_ltd_white_knight_36_1600_1 (0x29A1)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight3616001, 0x29A1)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight3616001.description, "Oem_integrated_system_technology_ltd_white_knight_36_1600_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight3616001.mnemonic, "Oem_integrated_system_technology_ltd_white_knight_36_1600_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight3616001.manufacturer, "Integrated System Technology Ltd")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight3616001.product, "White Knight 36_1600")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight3616001.dmxIn, 36)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight3616001.dmxOut, 36)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight3616001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight3616001.isRDMSupported, true)

        // Oem_integrated_system_technology_ltd_white_knight_48_dc_1 (0x29C8)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight48Dc1, 0x29C8)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight48Dc1.description, "Oem_integrated_system_technology_ltd_white_knight_48_dc_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight48Dc1.mnemonic, "Oem_integrated_system_technology_ltd_white_knight_48_dc_1")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight48Dc1.manufacturer, "Integrated System Technology Ltd")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight48Dc1.product, "White Knight 48 DC")
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight48Dc1.dmxIn, 48)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight48Dc1.dmxOut, 48)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight48Dc1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.integratedSystemTechnologyLtdWhiteKnight48Dc1.isRDMSupported, true)

        // Oem_jah_audio_corp_jah_8_port_node_1 (0x2A3C)
        XCTAssertEqual(OEMCode.jahAudioCorpJah8PortNode1, 0x2A3C)
        XCTAssertEqual(OEMCode.jahAudioCorpJah8PortNode1.description, "Oem_jah_audio_corp_jah_8_port_node_1")
        XCTAssertEqual(OEMCode.jahAudioCorpJah8PortNode1.mnemonic, "Oem_jah_audio_corp_jah_8_port_node_1")
        XCTAssertEqual(OEMCode.jahAudioCorpJah8PortNode1.manufacturer, "JAH Audio Corp")
        XCTAssertEqual(OEMCode.jahAudioCorpJah8PortNode1.product, "JAH 8 Port Node")
        XCTAssertEqual(OEMCode.jahAudioCorpJah8PortNode1.dmxIn, 8)
        XCTAssertEqual(OEMCode.jahAudioCorpJah8PortNode1.dmxOut, 9)
        XCTAssertEqual(OEMCode.jahAudioCorpJah8PortNode1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jahAudioCorpJah8PortNode1.isRDMSupported, true)

        // Oem_jah_audio_corp_jah_lighting_engine_1 (0x2A3D)
        XCTAssertEqual(OEMCode.jahAudioCorpJahLightingEngine1, 0x2A3D)
        XCTAssertEqual(OEMCode.jahAudioCorpJahLightingEngine1.description, "Oem_jah_audio_corp_jah_lighting_engine_1")
        XCTAssertEqual(OEMCode.jahAudioCorpJahLightingEngine1.mnemonic, "Oem_jah_audio_corp_jah_lighting_engine_1")
        XCTAssertEqual(OEMCode.jahAudioCorpJahLightingEngine1.manufacturer, "JAH Audio Corp")
        XCTAssertEqual(OEMCode.jahAudioCorpJahLightingEngine1.product, "JAH Lighting Engine")
        XCTAssertEqual(OEMCode.jahAudioCorpJahLightingEngine1.dmxIn, 500)
        XCTAssertEqual(OEMCode.jahAudioCorpJahLightingEngine1.dmxOut, 500)
        XCTAssertEqual(OEMCode.jahAudioCorpJahLightingEngine1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jahAudioCorpJahLightingEngine1.isRDMSupported, true)

        // Oem_jata_tech_ltd_fx_engine_1 (0x2902)
        XCTAssertEqual(OEMCode.jataTechLtdFxEngine1, 0x2902)
        XCTAssertEqual(OEMCode.jataTechLtdFxEngine1.description, "Oem_jata_tech_ltd_fx_engine_1")
        XCTAssertEqual(OEMCode.jataTechLtdFxEngine1.mnemonic, "Oem_jata_tech_ltd_fx_engine_1")
        XCTAssertEqual(OEMCode.jataTechLtdFxEngine1.manufacturer, "Jata Tech Ltd")
        XCTAssertEqual(OEMCode.jataTechLtdFxEngine1.product, "FX Engine")
        XCTAssertEqual(OEMCode.jataTechLtdFxEngine1.dmxIn, 1)
        XCTAssertEqual(OEMCode.jataTechLtdFxEngine1.dmxOut, 400)
        XCTAssertEqual(OEMCode.jataTechLtdFxEngine1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.jataTechLtdFxEngine1.isRDMSupported, false)

        // Oem_jb_lighting_lichtanlagentechnik_gmbh_jb_lightingfixturenode_1 (0x292B)
        XCTAssertEqual(OEMCode.jbLightingLichtanlagentechnikGmbhJbLightingfixturenode1, 0x292B)
        XCTAssertEqual(OEMCode.jbLightingLichtanlagentechnikGmbhJbLightingfixturenode1.description, "Oem_jb_lighting_lichtanlagentechnik_gmbh_jb_lightingfixturenode_1")
        XCTAssertEqual(OEMCode.jbLightingLichtanlagentechnikGmbhJbLightingfixturenode1.mnemonic, "Oem_jb_lighting_lichtanlagentechnik_gmbh_jb_lightingfixturenode_1")
        XCTAssertEqual(OEMCode.jbLightingLichtanlagentechnikGmbhJbLightingfixturenode1.manufacturer, "JB Lighting Lichtanlagentechnik GmbH")
        XCTAssertEqual(OEMCode.jbLightingLichtanlagentechnikGmbhJbLightingfixturenode1.product, "JB LightingFixtureNode")
        XCTAssertEqual(OEMCode.jbLightingLichtanlagentechnikGmbhJbLightingfixturenode1.dmxIn, 2)
        XCTAssertEqual(OEMCode.jbLightingLichtanlagentechnikGmbhJbLightingfixturenode1.dmxOut, 1)
        XCTAssertEqual(OEMCode.jbLightingLichtanlagentechnikGmbhJbLightingfixturenode1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jbLightingLichtanlagentechnikGmbhJbLightingfixturenode1.isRDMSupported, true)

        // Oem_jcskj_jc_controller_x_1 (0x293F)
        XCTAssertEqual(OEMCode.jcskjJcControllerX1, 0x293F)
        XCTAssertEqual(OEMCode.jcskjJcControllerX1.description, "Oem_jcskj_jc_controller_x_1")
        XCTAssertEqual(OEMCode.jcskjJcControllerX1.mnemonic, "Oem_jcskj_jc_controller_x_1")
        XCTAssertEqual(OEMCode.jcskjJcControllerX1.manufacturer, "JCSKJ")
        XCTAssertEqual(OEMCode.jcskjJcControllerX1.product, "JC_Controller_X")
        XCTAssertEqual(OEMCode.jcskjJcControllerX1.dmxIn, 4)
        XCTAssertEqual(OEMCode.jcskjJcControllerX1.dmxOut, 4)
        XCTAssertEqual(OEMCode.jcskjJcControllerX1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.jcskjJcControllerX1.isRDMSupported, true)

        // Oem_juan_francisco_campos_saa_bm_lights_1_universe_1 (0x2960)
        XCTAssertEqual(OEMCode.juanFranciscoCamposSaaBmLights1Universe1, 0x2960)
        XCTAssertEqual(OEMCode.juanFranciscoCamposSaaBmLights1Universe1.description, "Oem_juan_francisco_campos_saa_bm_lights_1_universe_1")
        XCTAssertEqual(OEMCode.juanFranciscoCamposSaaBmLights1Universe1.mnemonic, "Oem_juan_francisco_campos_saa_bm_lights_1_universe_1")
        XCTAssertEqual(OEMCode.juanFranciscoCamposSaaBmLights1Universe1.manufacturer, "JUAN FRANCISCO CAMPOS SAA")
        XCTAssertEqual(OEMCode.juanFranciscoCamposSaaBmLights1Universe1.product, "BM LIGHTS 1 UNIVERSE")
        XCTAssertEqual(OEMCode.juanFranciscoCamposSaaBmLights1Universe1.dmxIn, 0)
        XCTAssertEqual(OEMCode.juanFranciscoCamposSaaBmLights1Universe1.dmxOut, 1)
        XCTAssertEqual(OEMCode.juanFranciscoCamposSaaBmLights1Universe1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.juanFranciscoCamposSaaBmLights1Universe1.isRDMSupported, false)

        // Oem_kappastyle_productions_kappanode2_1 (0x2A03)
        XCTAssertEqual(OEMCode.kappastyleProductionsKappanode21, 0x2A03)
        XCTAssertEqual(OEMCode.kappastyleProductionsKappanode21.description, "Oem_kappastyle_productions_kappanode2_1")
        XCTAssertEqual(OEMCode.kappastyleProductionsKappanode21.mnemonic, "Oem_kappastyle_productions_kappanode2_1")
        XCTAssertEqual(OEMCode.kappastyleProductionsKappanode21.manufacturer, "KappaStyle Productions")
        XCTAssertEqual(OEMCode.kappastyleProductionsKappanode21.product, "KappaNode2")
        XCTAssertEqual(OEMCode.kappastyleProductionsKappanode21.dmxIn, 2)
        XCTAssertEqual(OEMCode.kappastyleProductionsKappanode21.dmxOut, 2)
        XCTAssertEqual(OEMCode.kappastyleProductionsKappanode21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.kappastyleProductionsKappanode21.isRDMSupported, false)

        // Oem_key_lab_blacktrax_extender_1 (0x290C)
        XCTAssertEqual(OEMCode.keyLabBlacktraxExtender1, 0x290C)
        XCTAssertEqual(OEMCode.keyLabBlacktraxExtender1.description, "Oem_key_lab_blacktrax_extender_1")
        XCTAssertEqual(OEMCode.keyLabBlacktraxExtender1.mnemonic, "Oem_key_lab_blacktrax_extender_1")
        XCTAssertEqual(OEMCode.keyLabBlacktraxExtender1.manufacturer, "Key Lab")
        XCTAssertEqual(OEMCode.keyLabBlacktraxExtender1.product, "BlackTrax Extender")
        XCTAssertEqual(OEMCode.keyLabBlacktraxExtender1.dmxIn, 1)
        XCTAssertEqual(OEMCode.keyLabBlacktraxExtender1.dmxOut, 1)
        XCTAssertEqual(OEMCode.keyLabBlacktraxExtender1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.keyLabBlacktraxExtender1.isRDMSupported, false)

        // Oem_kifo_kifo_lightcontroller_1 (0x2A4A)
        XCTAssertEqual(OEMCode.kifoKifoLightcontroller1, 0x2A4A)
        XCTAssertEqual(OEMCode.kifoKifoLightcontroller1.description, "Oem_kifo_kifo_lightcontroller_1")
        XCTAssertEqual(OEMCode.kifoKifoLightcontroller1.mnemonic, "Oem_kifo_kifo_lightcontroller_1")
        XCTAssertEqual(OEMCode.kifoKifoLightcontroller1.manufacturer, "Kifo")
        XCTAssertEqual(OEMCode.kifoKifoLightcontroller1.product, "Kifo Lightcontroller")
        XCTAssertEqual(OEMCode.kifoKifoLightcontroller1.dmxIn, 15)
        XCTAssertEqual(OEMCode.kifoKifoLightcontroller1.dmxOut, 15)
        XCTAssertEqual(OEMCode.kifoKifoLightcontroller1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.kifoKifoLightcontroller1.isRDMSupported, true)

        // Oem_kinescope_bridge_1 (0x28FA)
        XCTAssertEqual(OEMCode.kinescopeBridge1, 0x28FA)
        XCTAssertEqual(OEMCode.kinescopeBridge1.description, "Oem_kinescope_bridge_1")
        XCTAssertEqual(OEMCode.kinescopeBridge1.mnemonic, "Oem_kinescope_bridge_1")
        XCTAssertEqual(OEMCode.kinescopeBridge1.manufacturer, "Kinescope")
        XCTAssertEqual(OEMCode.kinescopeBridge1.product, "Bridge")
        XCTAssertEqual(OEMCode.kinescopeBridge1.dmxIn, 0)
        XCTAssertEqual(OEMCode.kinescopeBridge1.dmxOut, 16)
        XCTAssertEqual(OEMCode.kinescopeBridge1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.kinescopeBridge1.isRDMSupported, false)

        // Oem_kloeckner_edv_service__bk_tec_audio_artnet-stack_1 (0x2A4F)
        XCTAssertEqual(OEMCode.kloecknerEdvServiceBkTecAudioArtnetStack1, 0x2A4F)
        XCTAssertEqual(OEMCode.kloecknerEdvServiceBkTecAudioArtnetStack1.description, "Oem_kloeckner_edv_service__bk_tec_audio_artnet-stack_1")
        XCTAssertEqual(OEMCode.kloecknerEdvServiceBkTecAudioArtnetStack1.mnemonic, "Oem_kloeckner_edv_service__bk_tec_audio_artnet-stack_1")
        XCTAssertEqual(OEMCode.kloecknerEdvServiceBkTecAudioArtnetStack1.manufacturer, "Kloeckner EDV Service  BK Tec Audio")
        XCTAssertEqual(OEMCode.kloecknerEdvServiceBkTecAudioArtnetStack1.product, "Artnet-stack")
        XCTAssertEqual(OEMCode.kloecknerEdvServiceBkTecAudioArtnetStack1.dmxIn, 3)
        XCTAssertEqual(OEMCode.kloecknerEdvServiceBkTecAudioArtnetStack1.dmxOut, 3)
        XCTAssertEqual(OEMCode.kloecknerEdvServiceBkTecAudioArtnetStack1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.kloecknerEdvServiceBkTecAudioArtnetStack1.isRDMSupported, false)

        // Oem_kuwatec_inc_valencia_1 (0x2A50)
        XCTAssertEqual(OEMCode.kuwatecIncValencia1, 0x2A50)
        XCTAssertEqual(OEMCode.kuwatecIncValencia1.description, "Oem_kuwatec_inc_valencia_1")
        XCTAssertEqual(OEMCode.kuwatecIncValencia1.mnemonic, "Oem_kuwatec_inc_valencia_1")
        XCTAssertEqual(OEMCode.kuwatecIncValencia1.manufacturer, "kuwatec Inc")
        XCTAssertEqual(OEMCode.kuwatecIncValencia1.product, "Valencia")
        XCTAssertEqual(OEMCode.kuwatecIncValencia1.dmxIn, 0)
        XCTAssertEqual(OEMCode.kuwatecIncValencia1.dmxOut, 0)
        XCTAssertEqual(OEMCode.kuwatecIncValencia1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.kuwatecIncValencia1.isRDMSupported, false)

        // Oem_kwmatik_promyk_v1_0_1 (0x294C)
        XCTAssertEqual(OEMCode.kwmatikPromykV101, 0x294C)
        XCTAssertEqual(OEMCode.kwmatikPromykV101.description, "Oem_kwmatik_promyk_v1_0_1")
        XCTAssertEqual(OEMCode.kwmatikPromykV101.mnemonic, "Oem_kwmatik_promyk_v1_0_1")
        XCTAssertEqual(OEMCode.kwmatikPromykV101.manufacturer, "KWMATIK")
        XCTAssertEqual(OEMCode.kwmatikPromykV101.product, "PROMYK v1 0")
        XCTAssertEqual(OEMCode.kwmatikPromykV101.dmxIn, 0)
        XCTAssertEqual(OEMCode.kwmatikPromykV101.dmxOut, 1)
        XCTAssertEqual(OEMCode.kwmatikPromykV101.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.kwmatikPromykV101.isRDMSupported, false)

        // Oem_kyle_hensel_node_js_api_1 (0x2A22)
        XCTAssertEqual(OEMCode.kyleHenselNodeJsApi1, 0x2A22)
        XCTAssertEqual(OEMCode.kyleHenselNodeJsApi1.description, "Oem_kyle_hensel_node_js_api_1")
        XCTAssertEqual(OEMCode.kyleHenselNodeJsApi1.mnemonic, "Oem_kyle_hensel_node_js_api_1")
        XCTAssertEqual(OEMCode.kyleHenselNodeJsApi1.manufacturer, "Kyle Hensel")
        XCTAssertEqual(OEMCode.kyleHenselNodeJsApi1.product, "Node js API")
        XCTAssertEqual(OEMCode.kyleHenselNodeJsApi1.dmxIn, 1)
        XCTAssertEqual(OEMCode.kyleHenselNodeJsApi1.dmxOut, 1)
        XCTAssertEqual(OEMCode.kyleHenselNodeJsApi1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.kyleHenselNodeJsApi1.isRDMSupported, false)

        // Oem_lasernet_livefeedback_1 (0x2A44)
        XCTAssertEqual(OEMCode.lasernetLivefeedback1, 0x2A44)
        XCTAssertEqual(OEMCode.lasernetLivefeedback1.description, "Oem_lasernet_livefeedback_1")
        XCTAssertEqual(OEMCode.lasernetLivefeedback1.mnemonic, "Oem_lasernet_livefeedback_1")
        XCTAssertEqual(OEMCode.lasernetLivefeedback1.manufacturer, "LaserNet")
        XCTAssertEqual(OEMCode.lasernetLivefeedback1.product, "LiveFeedback")
        XCTAssertEqual(OEMCode.lasernetLivefeedback1.dmxIn, 1)
        XCTAssertEqual(OEMCode.lasernetLivefeedback1.dmxOut, 1)
        XCTAssertEqual(OEMCode.lasernetLivefeedback1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.lasernetLivefeedback1.isRDMSupported, true)

        // Oem_ledblade_creon_hd_1 (0x2924)
        XCTAssertEqual(OEMCode.ledbladeCreonHd1, 0x2924)
        XCTAssertEqual(OEMCode.ledbladeCreonHd1.description, "Oem_ledblade_creon_hd_1")
        XCTAssertEqual(OEMCode.ledbladeCreonHd1.mnemonic, "Oem_ledblade_creon_hd_1")
        XCTAssertEqual(OEMCode.ledbladeCreonHd1.manufacturer, "LEDBLADE")
        XCTAssertEqual(OEMCode.ledbladeCreonHd1.product, "Creon HD")
        XCTAssertEqual(OEMCode.ledbladeCreonHd1.dmxIn, 1)
        XCTAssertEqual(OEMCode.ledbladeCreonHd1.dmxOut, 1)
        XCTAssertEqual(OEMCode.ledbladeCreonHd1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledbladeCreonHd1.isRDMSupported, true)

        // Oem_lifetime_music_academy_light_spectrum_1 (0x297E)
        XCTAssertEqual(OEMCode.lifetimeMusicAcademyLightSpectrum1, 0x297E)
        XCTAssertEqual(OEMCode.lifetimeMusicAcademyLightSpectrum1.description, "Oem_lifetime_music_academy_light_spectrum_1")
        XCTAssertEqual(OEMCode.lifetimeMusicAcademyLightSpectrum1.mnemonic, "Oem_lifetime_music_academy_light_spectrum_1")
        XCTAssertEqual(OEMCode.lifetimeMusicAcademyLightSpectrum1.manufacturer, "Lifetime Music Academy")
        XCTAssertEqual(OEMCode.lifetimeMusicAcademyLightSpectrum1.product, "Light SPECTRUM")
        XCTAssertEqual(OEMCode.lifetimeMusicAcademyLightSpectrum1.dmxIn, 1)
        XCTAssertEqual(OEMCode.lifetimeMusicAcademyLightSpectrum1.dmxOut, 2)
        XCTAssertEqual(OEMCode.lifetimeMusicAcademyLightSpectrum1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lifetimeMusicAcademyLightSpectrum1.isRDMSupported, false)

        // Oem_light_converse_ltd_lightconverse_tools_1 (0x29D3)
        XCTAssertEqual(OEMCode.lightConverseLtdLightconverseTools1, 0x29D3)
        XCTAssertEqual(OEMCode.lightConverseLtdLightconverseTools1.description, "Oem_light_converse_ltd_lightconverse_tools_1")
        XCTAssertEqual(OEMCode.lightConverseLtdLightconverseTools1.mnemonic, "Oem_light_converse_ltd_lightconverse_tools_1")
        XCTAssertEqual(OEMCode.lightConverseLtdLightconverseTools1.manufacturer, "Light Converse Ltd")
        XCTAssertEqual(OEMCode.lightConverseLtdLightconverseTools1.product, "LIGHTCONVERSE TOOLS")
        XCTAssertEqual(OEMCode.lightConverseLtdLightconverseTools1.dmxIn, 32)
        XCTAssertEqual(OEMCode.lightConverseLtdLightconverseTools1.dmxOut, 0)
        XCTAssertEqual(OEMCode.lightConverseLtdLightconverseTools1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lightConverseLtdLightconverseTools1.isRDMSupported, false)

        // Oem_light_converse_ltd_ligthconverse_tools_1 (0x29F5)
        XCTAssertEqual(OEMCode.lightConverseLtdLigthconverseTools1, 0x29F5)
        XCTAssertEqual(OEMCode.lightConverseLtdLigthconverseTools1.description, "Oem_light_converse_ltd_ligthconverse_tools_1")
        XCTAssertEqual(OEMCode.lightConverseLtdLigthconverseTools1.mnemonic, "Oem_light_converse_ltd_ligthconverse_tools_1")
        XCTAssertEqual(OEMCode.lightConverseLtdLigthconverseTools1.manufacturer, "Light Converse Ltd")
        XCTAssertEqual(OEMCode.lightConverseLtdLigthconverseTools1.product, "LIGTHCONVERSE TOOLS")
        XCTAssertEqual(OEMCode.lightConverseLtdLigthconverseTools1.dmxIn, 1)
        XCTAssertEqual(OEMCode.lightConverseLtdLigthconverseTools1.dmxOut, 0)
        XCTAssertEqual(OEMCode.lightConverseLtdLigthconverseTools1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lightConverseLtdLigthconverseTools1.isRDMSupported, false)

        // Oem_lightline_lasertechnik_gmbh_laserlink_1 (0x29E1)
        XCTAssertEqual(OEMCode.lightlineLasertechnikGmbhLaserlink1, 0x29E1)
        XCTAssertEqual(OEMCode.lightlineLasertechnikGmbhLaserlink1.description, "Oem_lightline_lasertechnik_gmbh_laserlink_1")
        XCTAssertEqual(OEMCode.lightlineLasertechnikGmbhLaserlink1.mnemonic, "Oem_lightline_lasertechnik_gmbh_laserlink_1")
        XCTAssertEqual(OEMCode.lightlineLasertechnikGmbhLaserlink1.manufacturer, "LIGHTLINE Lasertechnik GmbH")
        XCTAssertEqual(OEMCode.lightlineLasertechnikGmbhLaserlink1.product, "Laserlink")
        XCTAssertEqual(OEMCode.lightlineLasertechnikGmbhLaserlink1.dmxIn, 1)
        XCTAssertEqual(OEMCode.lightlineLasertechnikGmbhLaserlink1.dmxOut, 0)
        XCTAssertEqual(OEMCode.lightlineLasertechnikGmbhLaserlink1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lightlineLasertechnikGmbhLaserlink1.isRDMSupported, true)

        // Oem_lke_lasershow_frequency_unit_1 (0x295F)
        XCTAssertEqual(OEMCode.lkeLasershowFrequencyUnit1, 0x295F)
        XCTAssertEqual(OEMCode.lkeLasershowFrequencyUnit1.description, "Oem_lke_lasershow_frequency_unit_1")
        XCTAssertEqual(OEMCode.lkeLasershowFrequencyUnit1.mnemonic, "Oem_lke_lasershow_frequency_unit_1")
        XCTAssertEqual(OEMCode.lkeLasershowFrequencyUnit1.manufacturer, "LKE Lasershow")
        XCTAssertEqual(OEMCode.lkeLasershowFrequencyUnit1.product, "Frequency Unit")
        XCTAssertEqual(OEMCode.lkeLasershowFrequencyUnit1.dmxIn, 1)
        XCTAssertEqual(OEMCode.lkeLasershowFrequencyUnit1.dmxOut, 1)
        XCTAssertEqual(OEMCode.lkeLasershowFrequencyUnit1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lkeLasershowFrequencyUnit1.isRDMSupported, true)

        // Oem_lucenti_blackwave_pixldrive_1 (0x2A2C)
        XCTAssertEqual(OEMCode.lucentiBlackwavePixldrive1, 0x2A2C)
        XCTAssertEqual(OEMCode.lucentiBlackwavePixldrive1.description, "Oem_lucenti_blackwave_pixldrive_1")
        XCTAssertEqual(OEMCode.lucentiBlackwavePixldrive1.mnemonic, "Oem_lucenti_blackwave_pixldrive_1")
        XCTAssertEqual(OEMCode.lucentiBlackwavePixldrive1.manufacturer, "Lucenti")
        XCTAssertEqual(OEMCode.lucentiBlackwavePixldrive1.product, "Blackwave PixlDrive")
        XCTAssertEqual(OEMCode.lucentiBlackwavePixldrive1.dmxIn, 4)
        XCTAssertEqual(OEMCode.lucentiBlackwavePixldrive1.dmxOut, 0)
        XCTAssertEqual(OEMCode.lucentiBlackwavePixldrive1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.lucentiBlackwavePixldrive1.isRDMSupported, false)

        // Oem_luminex_lighting_control_equipment_lumicore_1 (0x2A57)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLumicore1, 0x2A57)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLumicore1.description, "Oem_luminex_lighting_control_equipment_lumicore_1")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLumicore1.mnemonic, "Oem_luminex_lighting_control_equipment_lumicore_1")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLumicore1.manufacturer, "Luminex Lighting Control Equipment")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLumicore1.product, "LumiCore")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLumicore1.dmxIn, 0)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLumicore1.dmxOut, 0)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLumicore1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLumicore1.isRDMSupported, true)

        // Oem_luminex_lighting_control_equipment_luminode_12_1 (0x29DB)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode121, 0x29DB)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode121.description, "Oem_luminex_lighting_control_equipment_luminode_12_1")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode121.mnemonic, "Oem_luminex_lighting_control_equipment_luminode_12_1")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode121.manufacturer, "Luminex Lighting Control Equipment")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode121.product, "LumiNode 12")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode121.dmxIn, 12)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode121.dmxOut, 12)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode121.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode121.isRDMSupported, true)

        // Oem_luminex_lighting_control_equipment_luminode_1_1 (0x29DE)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode11, 0x29DE)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode11.description, "Oem_luminex_lighting_control_equipment_luminode_1_1")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode11.mnemonic, "Oem_luminex_lighting_control_equipment_luminode_1_1")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode11.manufacturer, "Luminex lighting Control Equipment")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode11.product, "LumiNode 1")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode11.dmxIn, 1)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode11.dmxOut, 1)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode11.isRDMSupported, true)

        // Oem_luminex_lighting_control_equipment_luminode_2_1 (0x29DD)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode21, 0x29DD)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode21.description, "Oem_luminex_lighting_control_equipment_luminode_2_1")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode21.mnemonic, "Oem_luminex_lighting_control_equipment_luminode_2_1")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode21.manufacturer, "Luminex Lighting Control Equipment")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode21.product, "LumiNode 2")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode21.dmxIn, 2)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode21.dmxOut, 2)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode21.isRDMSupported, true)

        // Oem_luminex_lighting_control_equipment_luminode_4_1 (0x29DC)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode41, 0x29DC)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode41.description, "Oem_luminex_lighting_control_equipment_luminode_4_1")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode41.mnemonic, "Oem_luminex_lighting_control_equipment_luminode_4_1")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode41.manufacturer, "Luminex Lighting Control Equipment")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode41.product, "LumiNode 4")
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode41.dmxIn, 4)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode41.dmxOut, 4)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.luminexLightingControlEquipmentLuminode41.isRDMSupported, true)

        // Oem_luminxa_luminxa1_1 (0x2948)
        XCTAssertEqual(OEMCode.luminxaLuminxa11, 0x2948)
        XCTAssertEqual(OEMCode.luminxaLuminxa11.description, "Oem_luminxa_luminxa1_1")
        XCTAssertEqual(OEMCode.luminxaLuminxa11.mnemonic, "Oem_luminxa_luminxa1_1")
        XCTAssertEqual(OEMCode.luminxaLuminxa11.manufacturer, "Luminxa")
        XCTAssertEqual(OEMCode.luminxaLuminxa11.product, "Luminxa1")
        XCTAssertEqual(OEMCode.luminxaLuminxa11.dmxIn, 1)
        XCTAssertEqual(OEMCode.luminxaLuminxa11.dmxOut, 2)
        XCTAssertEqual(OEMCode.luminxaLuminxa11.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.luminxaLuminxa11.isRDMSupported, true)

        // Oem_luminxa_luminxa2_1 (0x2949)
        XCTAssertEqual(OEMCode.luminxaLuminxa21, 0x2949)
        XCTAssertEqual(OEMCode.luminxaLuminxa21.description, "Oem_luminxa_luminxa2_1")
        XCTAssertEqual(OEMCode.luminxaLuminxa21.mnemonic, "Oem_luminxa_luminxa2_1")
        XCTAssertEqual(OEMCode.luminxaLuminxa21.manufacturer, "Luminxa")
        XCTAssertEqual(OEMCode.luminxaLuminxa21.product, "Luminxa2")
        XCTAssertEqual(OEMCode.luminxaLuminxa21.dmxIn, 2)
        XCTAssertEqual(OEMCode.luminxaLuminxa21.dmxOut, 2)
        XCTAssertEqual(OEMCode.luminxaLuminxa21.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.luminxaLuminxa21.isRDMSupported, true)

        // Oem_lumos_design_lumos_node_4_1 (0x29D4)
        XCTAssertEqual(OEMCode.lumosDesignLumosNode41, 0x29D4)
        XCTAssertEqual(OEMCode.lumosDesignLumosNode41.description, "Oem_lumos_design_lumos_node_4_1")
        XCTAssertEqual(OEMCode.lumosDesignLumosNode41.mnemonic, "Oem_lumos_design_lumos_node_4_1")
        XCTAssertEqual(OEMCode.lumosDesignLumosNode41.manufacturer, "Lumos Design")
        XCTAssertEqual(OEMCode.lumosDesignLumosNode41.product, "Lumos Node 4")
        XCTAssertEqual(OEMCode.lumosDesignLumosNode41.dmxIn, 4)
        XCTAssertEqual(OEMCode.lumosDesignLumosNode41.dmxOut, 4)
        XCTAssertEqual(OEMCode.lumosDesignLumosNode41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lumosDesignLumosNode41.isRDMSupported, true)

        // Oem_luxeos_luminaires_ltd_luxnode_1 (0x2A51)
        XCTAssertEqual(OEMCode.luxeosLuminairesLtdLuxnode1, 0x2A51)
        XCTAssertEqual(OEMCode.luxeosLuminairesLtdLuxnode1.description, "Oem_luxeos_luminaires_ltd_luxnode_1")
        XCTAssertEqual(OEMCode.luxeosLuminairesLtdLuxnode1.mnemonic, "Oem_luxeos_luminaires_ltd_luxnode_1")
        XCTAssertEqual(OEMCode.luxeosLuminairesLtdLuxnode1.manufacturer, "Luxeos Luminaires Ltd")
        XCTAssertEqual(OEMCode.luxeosLuminairesLtdLuxnode1.product, "Luxnode")
        XCTAssertEqual(OEMCode.luxeosLuminairesLtdLuxnode1.dmxIn, 0)
        XCTAssertEqual(OEMCode.luxeosLuminairesLtdLuxnode1.dmxOut, 2)
        XCTAssertEqual(OEMCode.luxeosLuminairesLtdLuxnode1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.luxeosLuminairesLtdLuxnode1.isRDMSupported, true)

        // Oem_manima_technologies_bv_manima_led_interface_1 (0x29DF)
        XCTAssertEqual(OEMCode.manimaTechnologiesBvManimaLedInterface1, 0x29DF)
        XCTAssertEqual(OEMCode.manimaTechnologiesBvManimaLedInterface1.description, "Oem_manima_technologies_bv_manima_led_interface_1")
        XCTAssertEqual(OEMCode.manimaTechnologiesBvManimaLedInterface1.mnemonic, "Oem_manima_technologies_bv_manima_led_interface_1")
        XCTAssertEqual(OEMCode.manimaTechnologiesBvManimaLedInterface1.manufacturer, "MaNiMa Technologies BV")
        XCTAssertEqual(OEMCode.manimaTechnologiesBvManimaLedInterface1.product, "MaNiMa LED interface")
        XCTAssertEqual(OEMCode.manimaTechnologiesBvManimaLedInterface1.dmxIn, 1)
        XCTAssertEqual(OEMCode.manimaTechnologiesBvManimaLedInterface1.dmxOut, 2)
        XCTAssertEqual(OEMCode.manimaTechnologiesBvManimaLedInterface1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.manimaTechnologiesBvManimaLedInterface1.isRDMSupported, false)

        // Oem_margau_dmxnet_1 (0x2908)
        XCTAssertEqual(OEMCode.margauDmxnet1, 0x2908)
        XCTAssertEqual(OEMCode.margauDmxnet1.description, "Oem_margau_dmxnet_1")
        XCTAssertEqual(OEMCode.margauDmxnet1.mnemonic, "Oem_margau_dmxnet_1")
        XCTAssertEqual(OEMCode.margauDmxnet1.manufacturer, "margau")
        XCTAssertEqual(OEMCode.margauDmxnet1.product, "dmxnet")
        XCTAssertEqual(OEMCode.margauDmxnet1.dmxIn, 1)
        XCTAssertEqual(OEMCode.margauDmxnet1.dmxOut, 1)
        XCTAssertEqual(OEMCode.margauDmxnet1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.margauDmxnet1.isRDMSupported, false)

        // Oem_martin_mac_allure_profile_1 (0x297D)
        XCTAssertEqual(OEMCode.martinMacAllureProfile1, 0x297D)
        XCTAssertEqual(OEMCode.martinMacAllureProfile1.description, "Oem_martin_mac_allure_profile_1")
        XCTAssertEqual(OEMCode.martinMacAllureProfile1.mnemonic, "Oem_martin_mac_allure_profile_1")
        XCTAssertEqual(OEMCode.martinMacAllureProfile1.manufacturer, "Martin")
        XCTAssertEqual(OEMCode.martinMacAllureProfile1.product, "MAC Allure Profile")
        XCTAssertEqual(OEMCode.martinMacAllureProfile1.dmxIn, 0)
        XCTAssertEqual(OEMCode.martinMacAllureProfile1.dmxOut, 1)
        XCTAssertEqual(OEMCode.martinMacAllureProfile1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.martinMacAllureProfile1.isRDMSupported, true)

        // Oem_martin_professional_mac_allure_wash_pc_1 (0x29AE)
        XCTAssertEqual(OEMCode.martinProfessionalMacAllureWashPc1, 0x29AE)
        XCTAssertEqual(OEMCode.martinProfessionalMacAllureWashPc1.description, "Oem_martin_professional_mac_allure_wash_pc_1")
        XCTAssertEqual(OEMCode.martinProfessionalMacAllureWashPc1.mnemonic, "Oem_martin_professional_mac_allure_wash_pc_1")
        XCTAssertEqual(OEMCode.martinProfessionalMacAllureWashPc1.manufacturer, "Martin Professional")
        XCTAssertEqual(OEMCode.martinProfessionalMacAllureWashPc1.product, "MAC Allure Wash PC")
        XCTAssertEqual(OEMCode.martinProfessionalMacAllureWashPc1.dmxIn, 0)
        XCTAssertEqual(OEMCode.martinProfessionalMacAllureWashPc1.dmxOut, 1)
        XCTAssertEqual(OEMCode.martinProfessionalMacAllureWashPc1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.martinProfessionalMacAllureWashPc1.isRDMSupported, true)

        // Oem_martin_professional_vdo_atomic_dot_cld_1 (0x29F8)
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotCld1, 0x29F8)
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotCld1.description, "Oem_martin_professional_vdo_atomic_dot_cld_1")
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotCld1.mnemonic, "Oem_martin_professional_vdo_atomic_dot_cld_1")
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotCld1.manufacturer, "Martin Professional")
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotCld1.product, "VDO Atomic Dot CLD")
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotCld1.dmxIn, 0)
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotCld1.dmxOut, 1)
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotCld1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotCld1.isRDMSupported, true)

        // Oem_martin_professional_vdo_atomic_dot_wrm_1 (0x29F7)
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotWrm1, 0x29F7)
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotWrm1.description, "Oem_martin_professional_vdo_atomic_dot_wrm_1")
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotWrm1.mnemonic, "Oem_martin_professional_vdo_atomic_dot_wrm_1")
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotWrm1.manufacturer, "Martin Professional")
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotWrm1.product, "VDO Atomic Dot WRM")
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotWrm1.dmxIn, 0)
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotWrm1.dmxOut, 1)
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotWrm1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.martinProfessionalVdoAtomicDotWrm1.isRDMSupported, true)

        // Oem_matthias_bauch_software_livelight_1 (0x292A)
        XCTAssertEqual(OEMCode.matthiasBauchSoftwareLivelight1, 0x292A)
        XCTAssertEqual(OEMCode.matthiasBauchSoftwareLivelight1.description, "Oem_matthias_bauch_software_livelight_1")
        XCTAssertEqual(OEMCode.matthiasBauchSoftwareLivelight1.mnemonic, "Oem_matthias_bauch_software_livelight_1")
        XCTAssertEqual(OEMCode.matthiasBauchSoftwareLivelight1.manufacturer, "Matthias Bauch Software")
        XCTAssertEqual(OEMCode.matthiasBauchSoftwareLivelight1.product, "LiveLight")
        XCTAssertEqual(OEMCode.matthiasBauchSoftwareLivelight1.dmxIn, 4)
        XCTAssertEqual(OEMCode.matthiasBauchSoftwareLivelight1.dmxOut, 4)
        XCTAssertEqual(OEMCode.matthiasBauchSoftwareLivelight1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.matthiasBauchSoftwareLivelight1.isRDMSupported, true)

        // Oem_mcintire_enterprises_inc_24_ch_dimmer_1 (0x29A3)
        XCTAssertEqual(OEMCode.mcintireEnterprisesInc24ChDimmer1, 0x29A3)
        XCTAssertEqual(OEMCode.mcintireEnterprisesInc24ChDimmer1.description, "Oem_mcintire_enterprises_inc_24_ch_dimmer_1")
        XCTAssertEqual(OEMCode.mcintireEnterprisesInc24ChDimmer1.mnemonic, "Oem_mcintire_enterprises_inc_24_ch_dimmer_1")
        XCTAssertEqual(OEMCode.mcintireEnterprisesInc24ChDimmer1.manufacturer, "MCINTIRE ENTERPRISES INC")
        XCTAssertEqual(OEMCode.mcintireEnterprisesInc24ChDimmer1.product, "24 CH Dimmer")
        XCTAssertEqual(OEMCode.mcintireEnterprisesInc24ChDimmer1.dmxIn, 1)
        XCTAssertEqual(OEMCode.mcintireEnterprisesInc24ChDimmer1.dmxOut, 1)
        XCTAssertEqual(OEMCode.mcintireEnterprisesInc24ChDimmer1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.mcintireEnterprisesInc24ChDimmer1.isRDMSupported, true)

        // Oem_mlba_team_stagehand_live_1 (0x2915)
        XCTAssertEqual(OEMCode.mlbaTeamStagehandLive1, 0x2915)
        XCTAssertEqual(OEMCode.mlbaTeamStagehandLive1.description, "Oem_mlba_team_stagehand_live_1")
        XCTAssertEqual(OEMCode.mlbaTeamStagehandLive1.mnemonic, "Oem_mlba_team_stagehand_live_1")
        XCTAssertEqual(OEMCode.mlbaTeamStagehandLive1.manufacturer, "MLBA Team")
        XCTAssertEqual(OEMCode.mlbaTeamStagehandLive1.product, "Stagehand Live")
        XCTAssertEqual(OEMCode.mlbaTeamStagehandLive1.dmxIn, 1)
        XCTAssertEqual(OEMCode.mlbaTeamStagehandLive1.dmxOut, 0)
        XCTAssertEqual(OEMCode.mlbaTeamStagehandLive1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.mlbaTeamStagehandLive1.isRDMSupported, true)

        // Oem_nec_display_solutions_ltd_flat_panel_display_1 (0x2A08)
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdFlatPanelDisplay1, 0x2A08)
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdFlatPanelDisplay1.description, "Oem_nec_display_solutions_ltd_flat_panel_display_1")
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdFlatPanelDisplay1.mnemonic, "Oem_nec_display_solutions_ltd_flat_panel_display_1")
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdFlatPanelDisplay1.manufacturer, "NEC Display Solutions LTD")
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdFlatPanelDisplay1.product, "Flat Panel Display")
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdFlatPanelDisplay1.dmxIn, 1)
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdFlatPanelDisplay1.dmxOut, 0)
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdFlatPanelDisplay1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdFlatPanelDisplay1.isRDMSupported, false)

        // Oem_nec_display_solutions_ltd_projector_1 (0x2A07)
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdProjector1, 0x2A07)
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdProjector1.description, "Oem_nec_display_solutions_ltd_projector_1")
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdProjector1.mnemonic, "Oem_nec_display_solutions_ltd_projector_1")
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdProjector1.manufacturer, "NEC Display Solutions LTD")
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdProjector1.product, "Projector")
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdProjector1.dmxIn, 1)
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdProjector1.dmxOut, 0)
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdProjector1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.necDisplaySolutionsLtdProjector1.isRDMSupported, false)

        // Oem_nova_led_1 (0x297C)
        XCTAssertEqual(OEMCode.novaLed1, 0x297C)
        XCTAssertEqual(OEMCode.novaLed1.description, "Oem_nova_led_1")
        XCTAssertEqual(OEMCode.novaLed1.mnemonic, "Oem_nova_led_1")
        XCTAssertEqual(OEMCode.novaLed1.manufacturer, "NOVA")
        XCTAssertEqual(OEMCode.novaLed1.product, "LED")
        XCTAssertEqual(OEMCode.novaLed1.dmxIn, 1)
        XCTAssertEqual(OEMCode.novaLed1.dmxOut, 4)
        XCTAssertEqual(OEMCode.novaLed1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.novaLed1.isRDMSupported, true)

        // Oem_nox_multimedia_gmbh_nan_8_1 (0x29B7)
        XCTAssertEqual(OEMCode.noxMultimediaGmbhNan81, 0x29B7)
        XCTAssertEqual(OEMCode.noxMultimediaGmbhNan81.description, "Oem_nox_multimedia_gmbh_nan_8_1")
        XCTAssertEqual(OEMCode.noxMultimediaGmbhNan81.mnemonic, "Oem_nox_multimedia_gmbh_nan_8_1")
        XCTAssertEqual(OEMCode.noxMultimediaGmbhNan81.manufacturer, "nox multimedia GmbH")
        XCTAssertEqual(OEMCode.noxMultimediaGmbhNan81.product, "NAN 8")
        XCTAssertEqual(OEMCode.noxMultimediaGmbhNan81.dmxIn, 0)
        XCTAssertEqual(OEMCode.noxMultimediaGmbhNan81.dmxOut, 8)
        XCTAssertEqual(OEMCode.noxMultimediaGmbhNan81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.noxMultimediaGmbhNan81.isRDMSupported, false)

        // Oem_ocular_bvba_ocularium_1 (0x2A16)
        XCTAssertEqual(OEMCode.ocularBvbaOcularium1, 0x2A16)
        XCTAssertEqual(OEMCode.ocularBvbaOcularium1.description, "Oem_ocular_bvba_ocularium_1")
        XCTAssertEqual(OEMCode.ocularBvbaOcularium1.mnemonic, "Oem_ocular_bvba_ocularium_1")
        XCTAssertEqual(OEMCode.ocularBvbaOcularium1.manufacturer, "Ocular BVBA")
        XCTAssertEqual(OEMCode.ocularBvbaOcularium1.product, "Ocularium")
        XCTAssertEqual(OEMCode.ocularBvbaOcularium1.dmxIn, 4)
        XCTAssertEqual(OEMCode.ocularBvbaOcularium1.dmxOut, 4)
        XCTAssertEqual(OEMCode.ocularBvbaOcularium1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ocularBvbaOcularium1.isRDMSupported, false)

        // Oem_offstage_controls_kilo_gate_i_1 (0x2A39)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateI1, 0x2A39)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateI1.description, "Oem_offstage_controls_kilo_gate_i_1")
        XCTAssertEqual(OEMCode.offstageControlsKiloGateI1.mnemonic, "Oem_offstage_controls_kilo_gate_i_1")
        XCTAssertEqual(OEMCode.offstageControlsKiloGateI1.manufacturer, "Offstage Controls")
        XCTAssertEqual(OEMCode.offstageControlsKiloGateI1.product, "Kilo Gate I")
        XCTAssertEqual(OEMCode.offstageControlsKiloGateI1.dmxIn, 1)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateI1.dmxOut, 0)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateI1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateI1.isRDMSupported, true)

        // Oem_offstage_controls_kilo_gate_io_1 (0x2A3B)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateIo1, 0x2A3B)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateIo1.description, "Oem_offstage_controls_kilo_gate_io_1")
        XCTAssertEqual(OEMCode.offstageControlsKiloGateIo1.mnemonic, "Oem_offstage_controls_kilo_gate_io_1")
        XCTAssertEqual(OEMCode.offstageControlsKiloGateIo1.manufacturer, "Offstage Controls")
        XCTAssertEqual(OEMCode.offstageControlsKiloGateIo1.product, "Kilo Gate IO")
        XCTAssertEqual(OEMCode.offstageControlsKiloGateIo1.dmxIn, 1)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateIo1.dmxOut, 1)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateIo1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateIo1.isRDMSupported, true)

        // Oem_offstage_controls_kilo_gate_o_1 (0x2A3A)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateO1, 0x2A3A)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateO1.description, "Oem_offstage_controls_kilo_gate_o_1")
        XCTAssertEqual(OEMCode.offstageControlsKiloGateO1.mnemonic, "Oem_offstage_controls_kilo_gate_o_1")
        XCTAssertEqual(OEMCode.offstageControlsKiloGateO1.manufacturer, "Offstage Controls")
        XCTAssertEqual(OEMCode.offstageControlsKiloGateO1.product, "Kilo Gate O")
        XCTAssertEqual(OEMCode.offstageControlsKiloGateO1.dmxIn, 0)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateO1.dmxOut, 1)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateO1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.offstageControlsKiloGateO1.isRDMSupported, true)

        // Oem_offstage_controls_unlicensed_ocpe_1 (0x2A34)
        XCTAssertEqual(OEMCode.offstageControlsUnlicensedOcpe1, 0x2A34)
        XCTAssertEqual(OEMCode.offstageControlsUnlicensedOcpe1.description, "Oem_offstage_controls_unlicensed_ocpe_1")
        XCTAssertEqual(OEMCode.offstageControlsUnlicensedOcpe1.mnemonic, "Oem_offstage_controls_unlicensed_ocpe_1")
        XCTAssertEqual(OEMCode.offstageControlsUnlicensedOcpe1.manufacturer, "Offstage Controls")
        XCTAssertEqual(OEMCode.offstageControlsUnlicensedOcpe1.product, "Unlicensed OCPE")
        XCTAssertEqual(OEMCode.offstageControlsUnlicensedOcpe1.dmxIn, 0)
        XCTAssertEqual(OEMCode.offstageControlsUnlicensedOcpe1.dmxOut, 0)
        XCTAssertEqual(OEMCode.offstageControlsUnlicensedOcpe1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.offstageControlsUnlicensedOcpe1.isRDMSupported, false)

        // Oem_on_lx_limited_commskit_1 (0x2A24)
        XCTAssertEqual(OEMCode.onLxLimitedCommskit1, 0x2A24)
        XCTAssertEqual(OEMCode.onLxLimitedCommskit1.description, "Oem_on_lx_limited_commskit_1")
        XCTAssertEqual(OEMCode.onLxLimitedCommskit1.mnemonic, "Oem_on_lx_limited_commskit_1")
        XCTAssertEqual(OEMCode.onLxLimitedCommskit1.manufacturer, "ON LX Limited")
        XCTAssertEqual(OEMCode.onLxLimitedCommskit1.product, "CommsKit")
        XCTAssertEqual(OEMCode.onLxLimitedCommskit1.dmxIn, 2)
        XCTAssertEqual(OEMCode.onLxLimitedCommskit1.dmxOut, 2)
        XCTAssertEqual(OEMCode.onLxLimitedCommskit1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.onLxLimitedCommskit1.isRDMSupported, true)

        // Oem_on_lx_limited_ctrl_1 (0x29B8)
        XCTAssertEqual(OEMCode.onLxLimitedCtrl1, 0x29B8)
        XCTAssertEqual(OEMCode.onLxLimitedCtrl1.description, "Oem_on_lx_limited_ctrl_1")
        XCTAssertEqual(OEMCode.onLxLimitedCtrl1.mnemonic, "Oem_on_lx_limited_ctrl_1")
        XCTAssertEqual(OEMCode.onLxLimitedCtrl1.manufacturer, "ON LX Limited")
        XCTAssertEqual(OEMCode.onLxLimitedCtrl1.product, "Ctrl")
        XCTAssertEqual(OEMCode.onLxLimitedCtrl1.dmxIn, 2)
        XCTAssertEqual(OEMCode.onLxLimitedCtrl1.dmxOut, 2)
        XCTAssertEqual(OEMCode.onLxLimitedCtrl1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.onLxLimitedCtrl1.isRDMSupported, false)

        // Oem_paulo_macedo_wifipixel_1 (0x2A30)
        XCTAssertEqual(OEMCode.pauloMacedoWifipixel1, 0x2A30)
        XCTAssertEqual(OEMCode.pauloMacedoWifipixel1.description, "Oem_paulo_macedo_wifipixel_1")
        XCTAssertEqual(OEMCode.pauloMacedoWifipixel1.mnemonic, "Oem_paulo_macedo_wifipixel_1")
        XCTAssertEqual(OEMCode.pauloMacedoWifipixel1.manufacturer, "Paulo Macedo")
        XCTAssertEqual(OEMCode.pauloMacedoWifipixel1.product, "WIFIpixel")
        XCTAssertEqual(OEMCode.pauloMacedoWifipixel1.dmxIn, 0)
        XCTAssertEqual(OEMCode.pauloMacedoWifipixel1.dmxOut, 8)
        XCTAssertEqual(OEMCode.pauloMacedoWifipixel1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pauloMacedoWifipixel1.isRDMSupported, false)

        // Oem_philips_controller_32_signify_china_investment_co_ltd_1 (0x29A6)
        XCTAssertEqual(OEMCode.philipsController32SignifyChinaInvestmentCoLtd1, 0x29A6)
        XCTAssertEqual(OEMCode.philipsController32SignifyChinaInvestmentCoLtd1.description, "Oem_philips_controller_32_signify_china_investment_co_ltd_1")
        XCTAssertEqual(OEMCode.philipsController32SignifyChinaInvestmentCoLtd1.mnemonic, "Oem_philips_controller_32_signify_china_investment_co_ltd_1")
        XCTAssertEqual(OEMCode.philipsController32SignifyChinaInvestmentCoLtd1.manufacturer, "Philips Controller 32")
        XCTAssertEqual(OEMCode.philipsController32SignifyChinaInvestmentCoLtd1.product, "Signify China Investment Co Ltd")
        XCTAssertEqual(OEMCode.philipsController32SignifyChinaInvestmentCoLtd1.dmxIn, 0)
        XCTAssertEqual(OEMCode.philipsController32SignifyChinaInvestmentCoLtd1.dmxOut, 32)
        XCTAssertEqual(OEMCode.philipsController32SignifyChinaInvestmentCoLtd1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.philipsController32SignifyChinaInvestmentCoLtd1.isRDMSupported, true)

        // Oem_pixout_sia_pixout_controller_1 (0x2A28)
        XCTAssertEqual(OEMCode.pixoutSiaPixoutController1, 0x2A28)
        XCTAssertEqual(OEMCode.pixoutSiaPixoutController1.description, "Oem_pixout_sia_pixout_controller_1")
        XCTAssertEqual(OEMCode.pixoutSiaPixoutController1.mnemonic, "Oem_pixout_sia_pixout_controller_1")
        XCTAssertEqual(OEMCode.pixoutSiaPixoutController1.manufacturer, "Pixout SIA")
        XCTAssertEqual(OEMCode.pixoutSiaPixoutController1.product, "Pixout Controller")
        XCTAssertEqual(OEMCode.pixoutSiaPixoutController1.dmxIn, 1)
        XCTAssertEqual(OEMCode.pixoutSiaPixoutController1.dmxOut, 255)
        XCTAssertEqual(OEMCode.pixoutSiaPixoutController1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pixoutSiaPixoutController1.isRDMSupported, true)

        // Oem_pr_lighting_ltd_pr_lighting_1_1 (0x29B4)
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting11, 0x29B4)
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting11.description, "Oem_pr_lighting_ltd_pr_lighting_1_1")
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting11.mnemonic, "Oem_pr_lighting_ltd_pr_lighting_1_1")
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting11.manufacturer, "PR LIGHTING LTD")
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting11.product, "PR Lighting 1")
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting11.dmxIn, 1)
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting11.dmxOut, 1)
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting11.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting11.isRDMSupported, true)

        // Oem_pr_lighting_ltd_pr_lighting_2_1 (0x29C3)
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting21, 0x29C3)
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting21.description, "Oem_pr_lighting_ltd_pr_lighting_2_1")
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting21.mnemonic, "Oem_pr_lighting_ltd_pr_lighting_2_1")
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting21.manufacturer, "PR LIGHTING LTD")
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting21.product, "PR Lighting 2")
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting21.dmxIn, 1)
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting21.dmxOut, 1)
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting21.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.prLightingLtdPrLighting21.isRDMSupported, true)

        // Oem_pulsar_luxinode_1 (0x299F)
        XCTAssertEqual(OEMCode.pulsarLuxinode1, 0x299F)
        XCTAssertEqual(OEMCode.pulsarLuxinode1.description, "Oem_pulsar_luxinode_1")
        XCTAssertEqual(OEMCode.pulsarLuxinode1.mnemonic, "Oem_pulsar_luxinode_1")
        XCTAssertEqual(OEMCode.pulsarLuxinode1.manufacturer, "Pulsar")
        XCTAssertEqual(OEMCode.pulsarLuxinode1.product, "Luxinode")
        XCTAssertEqual(OEMCode.pulsarLuxinode1.dmxIn, 1)
        XCTAssertEqual(OEMCode.pulsarLuxinode1.dmxOut, 2)
        XCTAssertEqual(OEMCode.pulsarLuxinode1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pulsarLuxinode1.isRDMSupported, true)

        // Oem_pulsar_node1_1 (0x2970)
        XCTAssertEqual(OEMCode.pulsarNode11, 0x2970)
        XCTAssertEqual(OEMCode.pulsarNode11.description, "Oem_pulsar_node1_1")
        XCTAssertEqual(OEMCode.pulsarNode11.mnemonic, "Oem_pulsar_node1_1")
        XCTAssertEqual(OEMCode.pulsarNode11.manufacturer, "Pulsar")
        XCTAssertEqual(OEMCode.pulsarNode11.product, "Node1")
        XCTAssertEqual(OEMCode.pulsarNode11.dmxIn, 2)
        XCTAssertEqual(OEMCode.pulsarNode11.dmxOut, 2)
        XCTAssertEqual(OEMCode.pulsarNode11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pulsarNode11.isRDMSupported, true)

        // Oem_pxm_px314_1 (0x2972)
        XCTAssertEqual(OEMCode.pxmPx3141, 0x2972)
        XCTAssertEqual(OEMCode.pxmPx3141.description, "Oem_pxm_px314_1")
        XCTAssertEqual(OEMCode.pxmPx3141.mnemonic, "Oem_pxm_px314_1")
        XCTAssertEqual(OEMCode.pxmPx3141.manufacturer, "PXM")
        XCTAssertEqual(OEMCode.pxmPx3141.product, "Px314")
        XCTAssertEqual(OEMCode.pxmPx3141.dmxIn, 2)
        XCTAssertEqual(OEMCode.pxmPx3141.dmxOut, 0)
        XCTAssertEqual(OEMCode.pxmPx3141.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pxmPx3141.isRDMSupported, true)

        // Oem_pxm_px760_1 (0x2971)
        XCTAssertEqual(OEMCode.pxmPx7601, 0x2971)
        XCTAssertEqual(OEMCode.pxmPx7601.description, "Oem_pxm_px760_1")
        XCTAssertEqual(OEMCode.pxmPx7601.mnemonic, "Oem_pxm_px760_1")
        XCTAssertEqual(OEMCode.pxmPx7601.manufacturer, "PXM")
        XCTAssertEqual(OEMCode.pxmPx7601.product, "Px760")
        XCTAssertEqual(OEMCode.pxmPx7601.dmxIn, 2)
        XCTAssertEqual(OEMCode.pxmPx7601.dmxOut, 2)
        XCTAssertEqual(OEMCode.pxmPx7601.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pxmPx7601.isRDMSupported, true)

        // Oem_pxm_px785_1 (0x2A36)
        XCTAssertEqual(OEMCode.pxmPx7851, 0x2A36)
        XCTAssertEqual(OEMCode.pxmPx7851.description, "Oem_pxm_px785_1")
        XCTAssertEqual(OEMCode.pxmPx7851.mnemonic, "Oem_pxm_px785_1")
        XCTAssertEqual(OEMCode.pxmPx7851.manufacturer, "PXM")
        XCTAssertEqual(OEMCode.pxmPx7851.product, "Px785")
        XCTAssertEqual(OEMCode.pxmPx7851.dmxIn, 4)
        XCTAssertEqual(OEMCode.pxmPx7851.dmxOut, 4)
        XCTAssertEqual(OEMCode.pxmPx7851.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pxmPx7851.isRDMSupported, true)

        // Oem_pxm_px786_1 (0x2A35)
        XCTAssertEqual(OEMCode.pxmPx7861, 0x2A35)
        XCTAssertEqual(OEMCode.pxmPx7861.description, "Oem_pxm_px786_1")
        XCTAssertEqual(OEMCode.pxmPx7861.mnemonic, "Oem_pxm_px786_1")
        XCTAssertEqual(OEMCode.pxmPx7861.manufacturer, "PXM")
        XCTAssertEqual(OEMCode.pxmPx7861.product, "Px786")
        XCTAssertEqual(OEMCode.pxmPx7861.dmxIn, 0)
        XCTAssertEqual(OEMCode.pxmPx7861.dmxOut, 4)
        XCTAssertEqual(OEMCode.pxmPx7861.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pxmPx7861.isRDMSupported, false)

        // Oem_qdot_lighting_limited_qnet_app_1 (0x293B)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnetApp1, 0x293B)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnetApp1.description, "Oem_qdot_lighting_limited_qnet_app_1")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnetApp1.mnemonic, "Oem_qdot_lighting_limited_qnet_app_1")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnetApp1.manufacturer, "Qdot Lighting Limited")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnetApp1.product, "QNET APP")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnetApp1.dmxIn, 16)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnetApp1.dmxOut, 16)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnetApp1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnetApp1.isRDMSupported, true)

        // Oem_r_s_schwarze_elektrotechnik_moderne_industrieelektronik_gmbh_sg_4_1 (0x2A2E)
        XCTAssertEqual(OEMCode.rSSchwarzeElektrotechnikModerneIndustrieelektronikGmbhSg41, 0x2A2E)
        XCTAssertEqual(OEMCode.rSSchwarzeElektrotechnikModerneIndustrieelektronikGmbhSg41.description, "Oem_r_s_schwarze_elektrotechnik_moderne_industrieelektronik_gmbh_sg_4_1")
        XCTAssertEqual(OEMCode.rSSchwarzeElektrotechnikModerneIndustrieelektronikGmbhSg41.mnemonic, "Oem_r_s_schwarze_elektrotechnik_moderne_industrieelektronik_gmbh_sg_4_1")
        XCTAssertEqual(OEMCode.rSSchwarzeElektrotechnikModerneIndustrieelektronikGmbhSg41.manufacturer, "R S Schwarze Elektrotechnik Moderne Industrieelektronik GmbH")
        XCTAssertEqual(OEMCode.rSSchwarzeElektrotechnikModerneIndustrieelektronikGmbhSg41.product, "SG 4")
        XCTAssertEqual(OEMCode.rSSchwarzeElektrotechnikModerneIndustrieelektronikGmbhSg41.dmxIn, 0)
        XCTAssertEqual(OEMCode.rSSchwarzeElektrotechnikModerneIndustrieelektronikGmbhSg41.dmxOut, 48)
        XCTAssertEqual(OEMCode.rSSchwarzeElektrotechnikModerneIndustrieelektronikGmbhSg41.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rSSchwarzeElektrotechnikModerneIndustrieelektronikGmbhSg41.isRDMSupported, false)

        // Oem_rethink_dmx_node1_1 (0x2952)
        XCTAssertEqual(OEMCode.rethinkDmxNode11, 0x2952)
        XCTAssertEqual(OEMCode.rethinkDmxNode11.description, "Oem_rethink_dmx_node1_1")
        XCTAssertEqual(OEMCode.rethinkDmxNode11.mnemonic, "Oem_rethink_dmx_node1_1")
        XCTAssertEqual(OEMCode.rethinkDmxNode11.manufacturer, "Rethink DMX")
        XCTAssertEqual(OEMCode.rethinkDmxNode11.product, "node1")
        XCTAssertEqual(OEMCode.rethinkDmxNode11.dmxIn, 0)
        XCTAssertEqual(OEMCode.rethinkDmxNode11.dmxOut, 1)
        XCTAssertEqual(OEMCode.rethinkDmxNode11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rethinkDmxNode11.isRDMSupported, false)

        // Oem_rgblink_flex_128_1 (0x2931)
        XCTAssertEqual(OEMCode.rgblinkFlex1281, 0x2931)
        XCTAssertEqual(OEMCode.rgblinkFlex1281.description, "Oem_rgblink_flex_128_1")
        XCTAssertEqual(OEMCode.rgblinkFlex1281.mnemonic, "Oem_rgblink_flex_128_1")
        XCTAssertEqual(OEMCode.rgblinkFlex1281.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.rgblinkFlex1281.product, "FLEX 128")
        XCTAssertEqual(OEMCode.rgblinkFlex1281.dmxIn, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex1281.dmxOut, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex1281.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rgblinkFlex1281.isRDMSupported, false)

        // Oem_rgblink_flex_16_1 (0x2934)
        XCTAssertEqual(OEMCode.rgblinkFlex161, 0x2934)
        XCTAssertEqual(OEMCode.rgblinkFlex161.description, "Oem_rgblink_flex_16_1")
        XCTAssertEqual(OEMCode.rgblinkFlex161.mnemonic, "Oem_rgblink_flex_16_1")
        XCTAssertEqual(OEMCode.rgblinkFlex161.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.rgblinkFlex161.product, "FLEX 16")
        XCTAssertEqual(OEMCode.rgblinkFlex161.dmxIn, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex161.dmxOut, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex161.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rgblinkFlex161.isRDMSupported, false)

        // Oem_rgblink_flex_256_1 (0x2930)
        XCTAssertEqual(OEMCode.rgblinkFlex2561, 0x2930)
        XCTAssertEqual(OEMCode.rgblinkFlex2561.description, "Oem_rgblink_flex_256_1")
        XCTAssertEqual(OEMCode.rgblinkFlex2561.mnemonic, "Oem_rgblink_flex_256_1")
        XCTAssertEqual(OEMCode.rgblinkFlex2561.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.rgblinkFlex2561.product, "FLEX 256")
        XCTAssertEqual(OEMCode.rgblinkFlex2561.dmxIn, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex2561.dmxOut, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex2561.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rgblinkFlex2561.isRDMSupported, false)

        // Oem_rgblink_flex_32_1 (0x2933)
        XCTAssertEqual(OEMCode.rgblinkFlex321, 0x2933)
        XCTAssertEqual(OEMCode.rgblinkFlex321.description, "Oem_rgblink_flex_32_1")
        XCTAssertEqual(OEMCode.rgblinkFlex321.mnemonic, "Oem_rgblink_flex_32_1")
        XCTAssertEqual(OEMCode.rgblinkFlex321.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.rgblinkFlex321.product, "FLEX 32")
        XCTAssertEqual(OEMCode.rgblinkFlex321.dmxIn, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex321.dmxOut, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex321.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rgblinkFlex321.isRDMSupported, false)

        // Oem_rgblink_flex_4_1 (0x2937)
        XCTAssertEqual(OEMCode.rgblinkFlex41, 0x2937)
        XCTAssertEqual(OEMCode.rgblinkFlex41.description, "Oem_rgblink_flex_4_1")
        XCTAssertEqual(OEMCode.rgblinkFlex41.mnemonic, "Oem_rgblink_flex_4_1")
        XCTAssertEqual(OEMCode.rgblinkFlex41.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.rgblinkFlex41.product, "FLEX 4")
        XCTAssertEqual(OEMCode.rgblinkFlex41.dmxIn, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex41.dmxOut, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex41.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rgblinkFlex41.isRDMSupported, false)

        // Oem_rgblink_flex_64_1 (0x2932)
        XCTAssertEqual(OEMCode.rgblinkFlex641, 0x2932)
        XCTAssertEqual(OEMCode.rgblinkFlex641.description, "Oem_rgblink_flex_64_1")
        XCTAssertEqual(OEMCode.rgblinkFlex641.mnemonic, "Oem_rgblink_flex_64_1")
        XCTAssertEqual(OEMCode.rgblinkFlex641.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.rgblinkFlex641.product, "FLEX 64")
        XCTAssertEqual(OEMCode.rgblinkFlex641.dmxIn, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex641.dmxOut, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex641.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rgblinkFlex641.isRDMSupported, false)

        // Oem_rgblink_flex_8_1 (0x2935)
        XCTAssertEqual(OEMCode.rgblinkFlex81, 0x2935)
        XCTAssertEqual(OEMCode.rgblinkFlex81.description, "Oem_rgblink_flex_8_1")
        XCTAssertEqual(OEMCode.rgblinkFlex81.mnemonic, "Oem_rgblink_flex_8_1")
        XCTAssertEqual(OEMCode.rgblinkFlex81.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.rgblinkFlex81.product, "FLEX 8")
        XCTAssertEqual(OEMCode.rgblinkFlex81.dmxIn, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex81.dmxOut, 0)
        XCTAssertEqual(OEMCode.rgblinkFlex81.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rgblinkFlex81.isRDMSupported, false)

        // Oem_rgblink_flex_rs1_1 (0x2936)
        XCTAssertEqual(OEMCode.rgblinkFlexRs11, 0x2936)
        XCTAssertEqual(OEMCode.rgblinkFlexRs11.description, "Oem_rgblink_flex_rs1_1")
        XCTAssertEqual(OEMCode.rgblinkFlexRs11.mnemonic, "Oem_rgblink_flex_rs1_1")
        XCTAssertEqual(OEMCode.rgblinkFlexRs11.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.rgblinkFlexRs11.product, "FLEX RS1")
        XCTAssertEqual(OEMCode.rgblinkFlexRs11.dmxIn, 0)
        XCTAssertEqual(OEMCode.rgblinkFlexRs11.dmxOut, 0)
        XCTAssertEqual(OEMCode.rgblinkFlexRs11.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rgblinkFlexRs11.isRDMSupported, false)

        // Oem_rgblink_tone_1 (0x292F)
        XCTAssertEqual(OEMCode.rgblinkTone1, 0x292F)
        XCTAssertEqual(OEMCode.rgblinkTone1.description, "Oem_rgblink_tone_1")
        XCTAssertEqual(OEMCode.rgblinkTone1.mnemonic, "Oem_rgblink_tone_1")
        XCTAssertEqual(OEMCode.rgblinkTone1.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.rgblinkTone1.product, "TONE")
        XCTAssertEqual(OEMCode.rgblinkTone1.dmxIn, 0)
        XCTAssertEqual(OEMCode.rgblinkTone1.dmxOut, 0)
        XCTAssertEqual(OEMCode.rgblinkTone1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rgblinkTone1.isRDMSupported, false)

        // Oem_rgblink_ttwo_1 (0x292E)
        XCTAssertEqual(OEMCode.rgblinkTtwo1, 0x292E)
        XCTAssertEqual(OEMCode.rgblinkTtwo1.description, "Oem_rgblink_ttwo_1")
        XCTAssertEqual(OEMCode.rgblinkTtwo1.mnemonic, "Oem_rgblink_ttwo_1")
        XCTAssertEqual(OEMCode.rgblinkTtwo1.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.rgblinkTtwo1.product, "TTWO")
        XCTAssertEqual(OEMCode.rgblinkTtwo1.dmxIn, 0)
        XCTAssertEqual(OEMCode.rgblinkTtwo1.dmxOut, 0)
        XCTAssertEqual(OEMCode.rgblinkTtwo1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rgblinkTtwo1.isRDMSupported, false)

        // Oem_rnet_lighting_technology_limited_r_net_dmx_rack_1 (0x294D)
        XCTAssertEqual(OEMCode.rnetLightingTechnologyLimitedRNetDmxRack1, 0x294D)
        XCTAssertEqual(OEMCode.rnetLightingTechnologyLimitedRNetDmxRack1.description, "Oem_rnet_lighting_technology_limited_r_net_dmx_rack_1")
        XCTAssertEqual(OEMCode.rnetLightingTechnologyLimitedRNetDmxRack1.mnemonic, "Oem_rnet_lighting_technology_limited_r_net_dmx_rack_1")
        XCTAssertEqual(OEMCode.rnetLightingTechnologyLimitedRNetDmxRack1.manufacturer, "Rnet Lighting technology limited")
        XCTAssertEqual(OEMCode.rnetLightingTechnologyLimitedRNetDmxRack1.product, "R NET DMX Rack")
        XCTAssertEqual(OEMCode.rnetLightingTechnologyLimitedRNetDmxRack1.dmxIn, 2)
        XCTAssertEqual(OEMCode.rnetLightingTechnologyLimitedRNetDmxRack1.dmxOut, 8)
        XCTAssertEqual(OEMCode.rnetLightingTechnologyLimitedRNetDmxRack1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rnetLightingTechnologyLimitedRNetDmxRack1.isRDMSupported, true)

        // Oem_roleds_rtg180_1 (0x297A)
        XCTAssertEqual(OEMCode.roledsRtg1801, 0x297A)
        XCTAssertEqual(OEMCode.roledsRtg1801.description, "Oem_roleds_rtg180_1")
        XCTAssertEqual(OEMCode.roledsRtg1801.mnemonic, "Oem_roleds_rtg180_1")
        XCTAssertEqual(OEMCode.roledsRtg1801.manufacturer, "Roleds")
        XCTAssertEqual(OEMCode.roledsRtg1801.product, "RTG180")
        XCTAssertEqual(OEMCode.roledsRtg1801.dmxIn, 1)
        XCTAssertEqual(OEMCode.roledsRtg1801.dmxOut, 512)
        XCTAssertEqual(OEMCode.roledsRtg1801.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.roledsRtg1801.isRDMSupported, true)

        // Oem_rosstech_signals_matrixview_1 (0x2981)
        XCTAssertEqual(OEMCode.rosstechSignalsMatrixview1, 0x2981)
        XCTAssertEqual(OEMCode.rosstechSignalsMatrixview1.description, "Oem_rosstech_signals_matrixview_1")
        XCTAssertEqual(OEMCode.rosstechSignalsMatrixview1.mnemonic, "Oem_rosstech_signals_matrixview_1")
        XCTAssertEqual(OEMCode.rosstechSignalsMatrixview1.manufacturer, "Rosstech Signals")
        XCTAssertEqual(OEMCode.rosstechSignalsMatrixview1.product, "MatrixView")
        XCTAssertEqual(OEMCode.rosstechSignalsMatrixview1.dmxIn, 0)
        XCTAssertEqual(OEMCode.rosstechSignalsMatrixview1.dmxOut, 0)
        XCTAssertEqual(OEMCode.rosstechSignalsMatrixview1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rosstechSignalsMatrixview1.isRDMSupported, false)

        // Oem_rosstech_signals_smart16_1 (0x2928)
        XCTAssertEqual(OEMCode.rosstechSignalsSmart161, 0x2928)
        XCTAssertEqual(OEMCode.rosstechSignalsSmart161.description, "Oem_rosstech_signals_smart16_1")
        XCTAssertEqual(OEMCode.rosstechSignalsSmart161.mnemonic, "Oem_rosstech_signals_smart16_1")
        XCTAssertEqual(OEMCode.rosstechSignalsSmart161.manufacturer, "Rosstech Signals")
        XCTAssertEqual(OEMCode.rosstechSignalsSmart161.product, "Smart16")
        XCTAssertEqual(OEMCode.rosstechSignalsSmart161.dmxIn, 0)
        XCTAssertEqual(OEMCode.rosstechSignalsSmart161.dmxOut, 16)
        XCTAssertEqual(OEMCode.rosstechSignalsSmart161.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rosstechSignalsSmart161.isRDMSupported, true)

        // Oem_shenzhen_lei_fei_lighting_technology_co_ltd_litemeta_controller_16_1 (0x299D)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController161, 0x299D)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController161.description, "Oem_shenzhen_lei_fei_lighting_technology_co_ltd_litemeta_controller_16_1")
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController161.mnemonic, "Oem_shenzhen_lei_fei_lighting_technology_co_ltd_litemeta_controller_16_1")
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController161.manufacturer, "Shenzhen Lei Fei Lighting Technology Co Ltd")
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController161.product, "LiteMeta Controller 16")
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController161.dmxIn, 0)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController161.dmxOut, 16)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController161.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController161.isRDMSupported, true)

        // Oem_shenzhen_lei_fei_lighting_technology_co_ltd_litemeta_controller_2_1 (0x299C)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController21, 0x299C)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController21.description, "Oem_shenzhen_lei_fei_lighting_technology_co_ltd_litemeta_controller_2_1")
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController21.mnemonic, "Oem_shenzhen_lei_fei_lighting_technology_co_ltd_litemeta_controller_2_1")
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController21.manufacturer, "Shenzhen Lei Fei Lighting Technology Co Ltd")
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController21.product, "LiteMeta Controller 2")
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController21.dmxIn, 0)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController21.dmxOut, 2)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController21.isRDMSupported, true)

        // Oem_shenzhen_lei_fei_lighting_technology_co_ltd_litemeta_controller_8_1 (0x299E)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController81, 0x299E)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController81.description, "Oem_shenzhen_lei_fei_lighting_technology_co_ltd_litemeta_controller_8_1")
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController81.mnemonic, "Oem_shenzhen_lei_fei_lighting_technology_co_ltd_litemeta_controller_8_1")
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController81.manufacturer, "Shenzhen Lei Fei Lighting Technology Co Ltd")
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController81.product, "LiteMeta Controller 8")
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController81.dmxIn, 0)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController81.dmxOut, 8)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.shenzhenLeiFeiLightingTechnologyCoLtdLitemetaController81.isRDMSupported, true)

        // Oem_shenzhen_leifei_lighting_technology_co_ltd_litemeta_controller_24_1 (0x29AF)
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController241, 0x29AF)
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController241.description, "Oem_shenzhen_leifei_lighting_technology_co_ltd_litemeta_controller_24_1")
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController241.mnemonic, "Oem_shenzhen_leifei_lighting_technology_co_ltd_litemeta_controller_24_1")
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController241.manufacturer, "Shenzhen Leifei Lighting Technology Co Ltd")
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController241.product, "LiteMeta Controller 24")
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController241.dmxIn, 0)
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController241.dmxOut, 24)
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController241.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController241.isRDMSupported, true)

        // Oem_shenzhen_leifei_lighting_technology_co_ltd_litemeta_controller_32_1 (0x29AC)
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController321, 0x29AC)
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController321.description, "Oem_shenzhen_leifei_lighting_technology_co_ltd_litemeta_controller_32_1")
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController321.mnemonic, "Oem_shenzhen_leifei_lighting_technology_co_ltd_litemeta_controller_32_1")
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController321.manufacturer, "Shenzhen Leifei Lighting Technology Co Ltd")
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController321.product, "LiteMeta Controller 32")
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController321.dmxIn, 0)
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController321.dmxOut, 32)
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController321.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.shenzhenLeifeiLightingTechnologyCoLtdLitemetaController321.isRDMSupported, true)

        // Oem_showart_dmxrecorder_1 (0x2A23)
        XCTAssertEqual(OEMCode.showartDmxrecorder1, 0x2A23)
        XCTAssertEqual(OEMCode.showartDmxrecorder1.description, "Oem_showart_dmxrecorder_1")
        XCTAssertEqual(OEMCode.showartDmxrecorder1.mnemonic, "Oem_showart_dmxrecorder_1")
        XCTAssertEqual(OEMCode.showartDmxrecorder1.manufacturer, "Showart")
        XCTAssertEqual(OEMCode.showartDmxrecorder1.product, "DMXrecorder")
        XCTAssertEqual(OEMCode.showartDmxrecorder1.dmxIn, 8)
        XCTAssertEqual(OEMCode.showartDmxrecorder1.dmxOut, 8)
        XCTAssertEqual(OEMCode.showartDmxrecorder1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showartDmxrecorder1.isRDMSupported, true)

        // Oem_showtacle_ltd_moncha2_1 (0x2A18)
        XCTAssertEqual(OEMCode.showtacleLtdMoncha21, 0x2A18)
        XCTAssertEqual(OEMCode.showtacleLtdMoncha21.description, "Oem_showtacle_ltd_moncha2_1")
        XCTAssertEqual(OEMCode.showtacleLtdMoncha21.mnemonic, "Oem_showtacle_ltd_moncha2_1")
        XCTAssertEqual(OEMCode.showtacleLtdMoncha21.manufacturer, "Showtacle Ltd")
        XCTAssertEqual(OEMCode.showtacleLtdMoncha21.product, "Moncha2")
        XCTAssertEqual(OEMCode.showtacleLtdMoncha21.dmxIn, 1)
        XCTAssertEqual(OEMCode.showtacleLtdMoncha21.dmxOut, 0)
        XCTAssertEqual(OEMCode.showtacleLtdMoncha21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showtacleLtdMoncha21.isRDMSupported, false)

        // Oem_showtacle_ltd_the_upgrade_1 (0x2A17)
        XCTAssertEqual(OEMCode.showtacleLtdTheUpgrade1, 0x2A17)
        XCTAssertEqual(OEMCode.showtacleLtdTheUpgrade1.description, "Oem_showtacle_ltd_the_upgrade_1")
        XCTAssertEqual(OEMCode.showtacleLtdTheUpgrade1.mnemonic, "Oem_showtacle_ltd_the_upgrade_1")
        XCTAssertEqual(OEMCode.showtacleLtdTheUpgrade1.manufacturer, "Showtacle Ltd")
        XCTAssertEqual(OEMCode.showtacleLtdTheUpgrade1.product, "THE UPGRADE")
        XCTAssertEqual(OEMCode.showtacleLtdTheUpgrade1.dmxIn, 1)
        XCTAssertEqual(OEMCode.showtacleLtdTheUpgrade1.dmxOut, 0)
        XCTAssertEqual(OEMCode.showtacleLtdTheUpgrade1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showtacleLtdTheUpgrade1.isRDMSupported, false)

        // Oem_sigma_net_bluedmx_1 (0x2A11)
        XCTAssertEqual(OEMCode.sigmaNetBluedmx1, 0x2A11)
        XCTAssertEqual(OEMCode.sigmaNetBluedmx1.description, "Oem_sigma_net_bluedmx_1")
        XCTAssertEqual(OEMCode.sigmaNetBluedmx1.mnemonic, "Oem_sigma_net_bluedmx_1")
        XCTAssertEqual(OEMCode.sigmaNetBluedmx1.manufacturer, "Sigma Net")
        XCTAssertEqual(OEMCode.sigmaNetBluedmx1.product, "BlueDMX")
        XCTAssertEqual(OEMCode.sigmaNetBluedmx1.dmxIn, 1)
        XCTAssertEqual(OEMCode.sigmaNetBluedmx1.dmxOut, 1)
        XCTAssertEqual(OEMCode.sigmaNetBluedmx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sigmaNetBluedmx1.isRDMSupported, false)

        // Oem_sigma_net_light_magic_1 (0x2A2F)
        XCTAssertEqual(OEMCode.sigmaNetLightMagic1, 0x2A2F)
        XCTAssertEqual(OEMCode.sigmaNetLightMagic1.description, "Oem_sigma_net_light_magic_1")
        XCTAssertEqual(OEMCode.sigmaNetLightMagic1.mnemonic, "Oem_sigma_net_light_magic_1")
        XCTAssertEqual(OEMCode.sigmaNetLightMagic1.manufacturer, "Sigma Net")
        XCTAssertEqual(OEMCode.sigmaNetLightMagic1.product, "Light Magic")
        XCTAssertEqual(OEMCode.sigmaNetLightMagic1.dmxIn, 1)
        XCTAssertEqual(OEMCode.sigmaNetLightMagic1.dmxOut, 2)
        XCTAssertEqual(OEMCode.sigmaNetLightMagic1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sigmaNetLightMagic1.isRDMSupported, false)

        // Oem_signify_investment_co_ltd_philips_controller_16_1 (0x29A8)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController161, 0x29A8)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController161.description, "Oem_signify_investment_co_ltd_philips_controller_16_1")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController161.mnemonic, "Oem_signify_investment_co_ltd_philips_controller_16_1")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController161.manufacturer, "Signify Investment Co Ltd")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController161.product, "Philips Controller 16")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController161.dmxIn, 0)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController161.dmxOut, 16)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController161.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController161.isRDMSupported, true)

        // Oem_signify_investment_co_ltd_philips_controller_24_1 (0x29A7)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController241, 0x29A7)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController241.description, "Oem_signify_investment_co_ltd_philips_controller_24_1")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController241.mnemonic, "Oem_signify_investment_co_ltd_philips_controller_24_1")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController241.manufacturer, "Signify Investment Co Ltd")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController241.product, "Philips Controller 24")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController241.dmxIn, 0)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController241.dmxOut, 24)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController241.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController241.isRDMSupported, true)

        // Oem_signify_investment_co_ltd_philips_controller_2_1 (0x29AA)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController21, 0x29AA)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController21.description, "Oem_signify_investment_co_ltd_philips_controller_2_1")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController21.mnemonic, "Oem_signify_investment_co_ltd_philips_controller_2_1")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController21.manufacturer, "Signify Investment Co Ltd")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController21.product, "Philips Controller 2")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController21.dmxIn, 0)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController21.dmxOut, 2)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController21.isRDMSupported, true)

        // Oem_signify_investment_co_ltd_philips_controller_8_1 (0x29A9)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController81, 0x29A9)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController81.description, "Oem_signify_investment_co_ltd_philips_controller_8_1")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController81.mnemonic, "Oem_signify_investment_co_ltd_philips_controller_8_1")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController81.manufacturer, "Signify Investment Co Ltd")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController81.product, "Philips Controller 8")
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController81.dmxIn, 0)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController81.dmxOut, 8)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.signifyInvestmentCoLtdPhilipsController81.isRDMSupported, true)

        // Oem_sls_atmani_1 (0x28FB)
        XCTAssertEqual(OEMCode.slsAtmani1, 0x28FB)
        XCTAssertEqual(OEMCode.slsAtmani1.description, "Oem_sls_atmani_1")
        XCTAssertEqual(OEMCode.slsAtmani1.mnemonic, "Oem_sls_atmani_1")
        XCTAssertEqual(OEMCode.slsAtmani1.manufacturer, "SLS")
        XCTAssertEqual(OEMCode.slsAtmani1.product, "atmani")
        XCTAssertEqual(OEMCode.slsAtmani1.dmxIn, 1)
        XCTAssertEqual(OEMCode.slsAtmani1.dmxOut, 30)
        XCTAssertEqual(OEMCode.slsAtmani1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.slsAtmani1.isRDMSupported, true)

        // Oem_smartshow_uk_airdmxout_1 (0x2967)
        XCTAssertEqual(OEMCode.smartshowUkAirdmxout1, 0x2967)
        XCTAssertEqual(OEMCode.smartshowUkAirdmxout1.description, "Oem_smartshow_uk_airdmxout_1")
        XCTAssertEqual(OEMCode.smartshowUkAirdmxout1.mnemonic, "Oem_smartshow_uk_airdmxout_1")
        XCTAssertEqual(OEMCode.smartshowUkAirdmxout1.manufacturer, "SmartShow UK")
        XCTAssertEqual(OEMCode.smartshowUkAirdmxout1.product, "AirDMXout")
        XCTAssertEqual(OEMCode.smartshowUkAirdmxout1.dmxIn, 0)
        XCTAssertEqual(OEMCode.smartshowUkAirdmxout1.dmxOut, 1)
        XCTAssertEqual(OEMCode.smartshowUkAirdmxout1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.smartshowUkAirdmxout1.isRDMSupported, false)

        // Oem_smartshow_uk_airpixel_micro_1 (0x296A)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMicro1, 0x296A)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMicro1.description, "Oem_smartshow_uk_airpixel_micro_1")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMicro1.mnemonic, "Oem_smartshow_uk_airpixel_micro_1")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMicro1.manufacturer, "SmartShow UK")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMicro1.product, "AirPixel Micro")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMicro1.dmxIn, 0)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMicro1.dmxOut, 4)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMicro1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMicro1.isRDMSupported, false)

        // Oem_smartshow_uk_airpixel_mini_1 (0x2969)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMini1, 0x2969)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMini1.description, "Oem_smartshow_uk_airpixel_mini_1")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMini1.mnemonic, "Oem_smartshow_uk_airpixel_mini_1")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMini1.manufacturer, "SmartShow UK")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMini1.product, "AirPixel Mini")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMini1.dmxIn, 0)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMini1.dmxOut, 4)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMini1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelMini1.isRDMSupported, false)

        // Oem_smartshow_uk_airpixel_one_1 (0x2A27)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelOne1, 0x2A27)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelOne1.description, "Oem_smartshow_uk_airpixel_one_1")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelOne1.mnemonic, "Oem_smartshow_uk_airpixel_one_1")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelOne1.manufacturer, "SmartShow UK")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelOne1.product, "AirPixel ONE")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelOne1.dmxIn, 0)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelOne1.dmxOut, 16)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelOne1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelOne1.isRDMSupported, false)

        // Oem_smartshow_uk_airpixel_quad_1 (0x2968)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelQuad1, 0x2968)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelQuad1.description, "Oem_smartshow_uk_airpixel_quad_1")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelQuad1.mnemonic, "Oem_smartshow_uk_airpixel_quad_1")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelQuad1.manufacturer, "SmartShow UK")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelQuad1.product, "AirPixel Quad")
        XCTAssertEqual(OEMCode.smartshowUkAirpixelQuad1.dmxIn, 0)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelQuad1.dmxOut, 16)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelQuad1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.smartshowUkAirpixelQuad1.isRDMSupported, false)

        // Oem_smartshow_uk_netbuddy_1 (0x296E)
        XCTAssertEqual(OEMCode.smartshowUkNetbuddy1, 0x296E)
        XCTAssertEqual(OEMCode.smartshowUkNetbuddy1.description, "Oem_smartshow_uk_netbuddy_1")
        XCTAssertEqual(OEMCode.smartshowUkNetbuddy1.mnemonic, "Oem_smartshow_uk_netbuddy_1")
        XCTAssertEqual(OEMCode.smartshowUkNetbuddy1.manufacturer, "SmartShow UK")
        XCTAssertEqual(OEMCode.smartshowUkNetbuddy1.product, "NetBuddy")
        XCTAssertEqual(OEMCode.smartshowUkNetbuddy1.dmxIn, 1)
        XCTAssertEqual(OEMCode.smartshowUkNetbuddy1.dmxOut, 1)
        XCTAssertEqual(OEMCode.smartshowUkNetbuddy1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.smartshowUkNetbuddy1.isRDMSupported, false)

        // Oem_smartshow_uk_netdmx_1 (0x296F)
        XCTAssertEqual(OEMCode.smartshowUkNetdmx1, 0x296F)
        XCTAssertEqual(OEMCode.smartshowUkNetdmx1.description, "Oem_smartshow_uk_netdmx_1")
        XCTAssertEqual(OEMCode.smartshowUkNetdmx1.mnemonic, "Oem_smartshow_uk_netdmx_1")
        XCTAssertEqual(OEMCode.smartshowUkNetdmx1.manufacturer, "SmartShow UK")
        XCTAssertEqual(OEMCode.smartshowUkNetdmx1.product, "NetDMX")
        XCTAssertEqual(OEMCode.smartshowUkNetdmx1.dmxIn, 0)
        XCTAssertEqual(OEMCode.smartshowUkNetdmx1.dmxOut, 1)
        XCTAssertEqual(OEMCode.smartshowUkNetdmx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.smartshowUkNetdmx1.isRDMSupported, false)

        // Oem_smartshow_uk_netpixel_one_1 (0x2A26)
        XCTAssertEqual(OEMCode.smartshowUkNetpixelOne1, 0x2A26)
        XCTAssertEqual(OEMCode.smartshowUkNetpixelOne1.description, "Oem_smartshow_uk_netpixel_one_1")
        XCTAssertEqual(OEMCode.smartshowUkNetpixelOne1.mnemonic, "Oem_smartshow_uk_netpixel_one_1")
        XCTAssertEqual(OEMCode.smartshowUkNetpixelOne1.manufacturer, "SmartShow UK")
        XCTAssertEqual(OEMCode.smartshowUkNetpixelOne1.product, "NetPixel ONE")
        XCTAssertEqual(OEMCode.smartshowUkNetpixelOne1.dmxIn, 0)
        XCTAssertEqual(OEMCode.smartshowUkNetpixelOne1.dmxOut, 32)
        XCTAssertEqual(OEMCode.smartshowUkNetpixelOne1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.smartshowUkNetpixelOne1.isRDMSupported, false)

        // Oem_smartshow_uk_netpixel_quad_1 (0x296B)
        XCTAssertEqual(OEMCode.smartshowUkNetpixelQuad1, 0x296B)
        XCTAssertEqual(OEMCode.smartshowUkNetpixelQuad1.description, "Oem_smartshow_uk_netpixel_quad_1")
        XCTAssertEqual(OEMCode.smartshowUkNetpixelQuad1.mnemonic, "Oem_smartshow_uk_netpixel_quad_1")
        XCTAssertEqual(OEMCode.smartshowUkNetpixelQuad1.manufacturer, "SmartShow UK")
        XCTAssertEqual(OEMCode.smartshowUkNetpixelQuad1.product, "NetPixel Quad")
        XCTAssertEqual(OEMCode.smartshowUkNetpixelQuad1.dmxIn, 0)
        XCTAssertEqual(OEMCode.smartshowUkNetpixelQuad1.dmxOut, 16)
        XCTAssertEqual(OEMCode.smartshowUkNetpixelQuad1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.smartshowUkNetpixelQuad1.isRDMSupported, false)

        // Oem_smartshow_uk_nettwin_1 (0x2966)
        XCTAssertEqual(OEMCode.smartshowUkNettwin1, 0x2966)
        XCTAssertEqual(OEMCode.smartshowUkNettwin1.description, "Oem_smartshow_uk_nettwin_1")
        XCTAssertEqual(OEMCode.smartshowUkNettwin1.mnemonic, "Oem_smartshow_uk_nettwin_1")
        XCTAssertEqual(OEMCode.smartshowUkNettwin1.manufacturer, "SmartShow UK")
        XCTAssertEqual(OEMCode.smartshowUkNettwin1.product, "NetTWIN")
        XCTAssertEqual(OEMCode.smartshowUkNettwin1.dmxIn, 0)
        XCTAssertEqual(OEMCode.smartshowUkNettwin1.dmxOut, 2)
        XCTAssertEqual(OEMCode.smartshowUkNettwin1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.smartshowUkNettwin1.isRDMSupported, false)

        // Oem_smartshow_uk_netws_2040_1 (0x296C)
        XCTAssertEqual(OEMCode.smartshowUkNetws20401, 0x296C)
        XCTAssertEqual(OEMCode.smartshowUkNetws20401.description, "Oem_smartshow_uk_netws_2040_1")
        XCTAssertEqual(OEMCode.smartshowUkNetws20401.mnemonic, "Oem_smartshow_uk_netws_2040_1")
        XCTAssertEqual(OEMCode.smartshowUkNetws20401.manufacturer, "SmartShow UK")
        XCTAssertEqual(OEMCode.smartshowUkNetws20401.product, "NetWS 2040")
        XCTAssertEqual(OEMCode.smartshowUkNetws20401.dmxIn, 0)
        XCTAssertEqual(OEMCode.smartshowUkNetws20401.dmxOut, 12)
        XCTAssertEqual(OEMCode.smartshowUkNetws20401.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.smartshowUkNetws20401.isRDMSupported, false)

        // Oem_smartshow_uk_netws_340_1 (0x296D)
        XCTAssertEqual(OEMCode.smartshowUkNetws3401, 0x296D)
        XCTAssertEqual(OEMCode.smartshowUkNetws3401.description, "Oem_smartshow_uk_netws_340_1")
        XCTAssertEqual(OEMCode.smartshowUkNetws3401.mnemonic, "Oem_smartshow_uk_netws_340_1")
        XCTAssertEqual(OEMCode.smartshowUkNetws3401.manufacturer, "SmartShow UK")
        XCTAssertEqual(OEMCode.smartshowUkNetws3401.product, "NetWS 340")
        XCTAssertEqual(OEMCode.smartshowUkNetws3401.dmxIn, 0)
        XCTAssertEqual(OEMCode.smartshowUkNetws3401.dmxOut, 2)
        XCTAssertEqual(OEMCode.smartshowUkNetws3401.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.smartshowUkNetws3401.isRDMSupported, false)

        // Oem_spacelights_spacenet1i_1 (0x29C4)
        XCTAssertEqual(OEMCode.spacelightsSpacenet1I1, 0x29C4)
        XCTAssertEqual(OEMCode.spacelightsSpacenet1I1.description, "Oem_spacelights_spacenet1i_1")
        XCTAssertEqual(OEMCode.spacelightsSpacenet1I1.mnemonic, "Oem_spacelights_spacenet1i_1")
        XCTAssertEqual(OEMCode.spacelightsSpacenet1I1.manufacturer, "Spacelights")
        XCTAssertEqual(OEMCode.spacelightsSpacenet1I1.product, "spacenet1i")
        XCTAssertEqual(OEMCode.spacelightsSpacenet1I1.dmxIn, 1)
        XCTAssertEqual(OEMCode.spacelightsSpacenet1I1.dmxOut, 0)
        XCTAssertEqual(OEMCode.spacelightsSpacenet1I1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.spacelightsSpacenet1I1.isRDMSupported, false)

        // Oem_spacelights_spacenet2o_1 (0x29C5)
        XCTAssertEqual(OEMCode.spacelightsSpacenet2O1, 0x29C5)
        XCTAssertEqual(OEMCode.spacelightsSpacenet2O1.description, "Oem_spacelights_spacenet2o_1")
        XCTAssertEqual(OEMCode.spacelightsSpacenet2O1.mnemonic, "Oem_spacelights_spacenet2o_1")
        XCTAssertEqual(OEMCode.spacelightsSpacenet2O1.manufacturer, "Spacelights")
        XCTAssertEqual(OEMCode.spacelightsSpacenet2O1.product, "spacenet2o")
        XCTAssertEqual(OEMCode.spacelightsSpacenet2O1.dmxIn, 0)
        XCTAssertEqual(OEMCode.spacelightsSpacenet2O1.dmxOut, 2)
        XCTAssertEqual(OEMCode.spacelightsSpacenet2O1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.spacelightsSpacenet2O1.isRDMSupported, true)

        // Oem_sqd_lighting_co_limited_led_lighting_fixtures_series_1 (0x299A)
        XCTAssertEqual(OEMCode.sqdLightingCoLimitedLedLightingFixturesSeries1, 0x299A)
        XCTAssertEqual(OEMCode.sqdLightingCoLimitedLedLightingFixturesSeries1.description, "Oem_sqd_lighting_co_limited_led_lighting_fixtures_series_1")
        XCTAssertEqual(OEMCode.sqdLightingCoLimitedLedLightingFixturesSeries1.mnemonic, "Oem_sqd_lighting_co_limited_led_lighting_fixtures_series_1")
        XCTAssertEqual(OEMCode.sqdLightingCoLimitedLedLightingFixturesSeries1.manufacturer, "SQD lighting Co Limited")
        XCTAssertEqual(OEMCode.sqdLightingCoLimitedLedLightingFixturesSeries1.product, "LED lighting fixtures series")
        XCTAssertEqual(OEMCode.sqdLightingCoLimitedLedLightingFixturesSeries1.dmxIn, 1)
        XCTAssertEqual(OEMCode.sqdLightingCoLimitedLedLightingFixturesSeries1.dmxOut, 1)
        XCTAssertEqual(OEMCode.sqdLightingCoLimitedLedLightingFixturesSeries1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sqdLightingCoLimitedLedLightingFixturesSeries1.isRDMSupported, true)

        // Oem_ssg_technology_ltd_sd980_an_1 (0x295E)
        XCTAssertEqual(OEMCode.ssgTechnologyLtdSd980An1, 0x295E)
        XCTAssertEqual(OEMCode.ssgTechnologyLtdSd980An1.description, "Oem_ssg_technology_ltd_sd980_an_1")
        XCTAssertEqual(OEMCode.ssgTechnologyLtdSd980An1.mnemonic, "Oem_ssg_technology_ltd_sd980_an_1")
        XCTAssertEqual(OEMCode.ssgTechnologyLtdSd980An1.manufacturer, "SSG Technology Ltd")
        XCTAssertEqual(OEMCode.ssgTechnologyLtdSd980An1.product, "SD980 AN")
        XCTAssertEqual(OEMCode.ssgTechnologyLtdSd980An1.dmxIn, 8)
        XCTAssertEqual(OEMCode.ssgTechnologyLtdSd980An1.dmxOut, 8)
        XCTAssertEqual(OEMCode.ssgTechnologyLtdSd980An1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ssgTechnologyLtdSd980An1.isRDMSupported, true)

        // Oem_steinigke_showtechnic_eye_740_1 (0x2A29)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicEye7401, 0x2A29)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicEye7401.description, "Oem_steinigke_showtechnic_eye_740_1")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicEye7401.mnemonic, "Oem_steinigke_showtechnic_eye_740_1")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicEye7401.manufacturer, "Steinigke Showtechnic")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicEye7401.product, "EYE 740")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicEye7401.dmxIn, 1)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicEye7401.dmxOut, 1)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicEye7401.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicEye7401.isRDMSupported, true)

        // Oem_steinigke_showtechnic_gmbh_dmx_aio_1 (0x291B)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhDmxAio1, 0x291B)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhDmxAio1.description, "Oem_steinigke_showtechnic_gmbh_dmx_aio_1")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhDmxAio1.mnemonic, "Oem_steinigke_showtechnic_gmbh_dmx_aio_1")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhDmxAio1.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhDmxAio1.product, "DMX AIO")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhDmxAio1.dmxIn, 2)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhDmxAio1.dmxOut, 2)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhDmxAio1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhDmxAio1.isRDMSupported, false)

        // Oem_steinigke_showtechnic_gmbh_freedmx_ap_1 (0x2A5B)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhFreedmxAp1, 0x2A5B)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhFreedmxAp1.description, "Oem_steinigke_showtechnic_gmbh_freedmx_ap_1")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhFreedmxAp1.mnemonic, "Oem_steinigke_showtechnic_gmbh_freedmx_ap_1")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhFreedmxAp1.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhFreedmxAp1.product, "freeDMX AP")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhFreedmxAp1.dmxIn, 0)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhFreedmxAp1.dmxOut, 1)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhFreedmxAp1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhFreedmxAp1.isRDMSupported, false)

        // Oem_steinigke_showtechnic_gmbh_node_iv_1 (0x2A59)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhNodeIv1, 0x2A59)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhNodeIv1.description, "Oem_steinigke_showtechnic_gmbh_node_iv_1")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhNodeIv1.mnemonic, "Oem_steinigke_showtechnic_gmbh_node_iv_1")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhNodeIv1.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhNodeIv1.product, "Node IV")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhNodeIv1.dmxIn, 0)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhNodeIv1.dmxOut, 4)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhNodeIv1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhNodeIv1.isRDMSupported, false)

        // Oem_steinigke_showtechnic_gmbh_pixel_node_ii_1 (0x2A5A)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhPixelNodeIi1, 0x2A5A)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhPixelNodeIi1.description, "Oem_steinigke_showtechnic_gmbh_pixel_node_ii_1")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhPixelNodeIi1.mnemonic, "Oem_steinigke_showtechnic_gmbh_pixel_node_ii_1")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhPixelNodeIi1.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhPixelNodeIi1.product, "Pixel Node II")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhPixelNodeIi1.dmxIn, 0)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhPixelNodeIi1.dmxOut, 2)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhPixelNodeIi1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhPixelNodeIi1.isRDMSupported, false)

        // Oem_steinigke_showtechnic_gmbh_stage_pixel_bar_10_ww_1 (0x290A)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhStagePixelBar10Ww1, 0x290A)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhStagePixelBar10Ww1.description, "Oem_steinigke_showtechnic_gmbh_stage_pixel_bar_10_ww_1")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhStagePixelBar10Ww1.mnemonic, "Oem_steinigke_showtechnic_gmbh_stage_pixel_bar_10_ww_1")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhStagePixelBar10Ww1.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhStagePixelBar10Ww1.product, "Stage Pixel Bar 10 WW")
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhStagePixelBar10Ww1.dmxIn, 1)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhStagePixelBar10Ww1.dmxOut, 1)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhStagePixelBar10Ww1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinigkeShowtechnicGmbhStagePixelBar10Ww1.isRDMSupported, true)

        // Oem_suga_koubou_co_ltd_dmx_recorder_1 (0x2A37)
        XCTAssertEqual(OEMCode.sugaKoubouCoLtdDmxRecorder1, 0x2A37)
        XCTAssertEqual(OEMCode.sugaKoubouCoLtdDmxRecorder1.description, "Oem_suga_koubou_co_ltd_dmx_recorder_1")
        XCTAssertEqual(OEMCode.sugaKoubouCoLtdDmxRecorder1.mnemonic, "Oem_suga_koubou_co_ltd_dmx_recorder_1")
        XCTAssertEqual(OEMCode.sugaKoubouCoLtdDmxRecorder1.manufacturer, "Suga koubou Co Ltd")
        XCTAssertEqual(OEMCode.sugaKoubouCoLtdDmxRecorder1.product, "DMX Recorder")
        XCTAssertEqual(OEMCode.sugaKoubouCoLtdDmxRecorder1.dmxIn, 4)
        XCTAssertEqual(OEMCode.sugaKoubouCoLtdDmxRecorder1.dmxOut, 4)
        XCTAssertEqual(OEMCode.sugaKoubouCoLtdDmxRecorder1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sugaKoubouCoLtdDmxRecorder1.isRDMSupported, true)

        // Oem_sze_schneider_zirr_engineering_gmbh_cf_player_a_fullhd2_0_1 (0x29D6)
        XCTAssertEqual(OEMCode.szeSchneiderZirrEngineeringGmbhCfPlayerAFullhd201, 0x29D6)
        XCTAssertEqual(OEMCode.szeSchneiderZirrEngineeringGmbhCfPlayerAFullhd201.description, "Oem_sze_schneider_zirr_engineering_gmbh_cf_player_a_fullhd2_0_1")
        XCTAssertEqual(OEMCode.szeSchneiderZirrEngineeringGmbhCfPlayerAFullhd201.mnemonic, "Oem_sze_schneider_zirr_engineering_gmbh_cf_player_a_fullhd2_0_1")
        XCTAssertEqual(OEMCode.szeSchneiderZirrEngineeringGmbhCfPlayerAFullhd201.manufacturer, "SZe Schneider Zirr engineering GmbH")
        XCTAssertEqual(OEMCode.szeSchneiderZirrEngineeringGmbhCfPlayerAFullhd201.product, "CF Player A FullHD2 0")
        XCTAssertEqual(OEMCode.szeSchneiderZirrEngineeringGmbhCfPlayerAFullhd201.dmxIn, 0)
        XCTAssertEqual(OEMCode.szeSchneiderZirrEngineeringGmbhCfPlayerAFullhd201.dmxOut, 0)
        XCTAssertEqual(OEMCode.szeSchneiderZirrEngineeringGmbhCfPlayerAFullhd201.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.szeSchneiderZirrEngineeringGmbhCfPlayerAFullhd201.isRDMSupported, false)

        // Oem_thelight_luminary_for_cine_and_tv_sl_evo_1_studio_1 (0x29D0)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Studio1, 0x29D0)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Studio1.description, "Oem_thelight_luminary_for_cine_and_tv_sl_evo_1_studio_1")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Studio1.mnemonic, "Oem_thelight_luminary_for_cine_and_tv_sl_evo_1_studio_1")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Studio1.manufacturer, "THELIGHT Luminary for Cine and TV SL")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Studio1.product, "EVO 1 STUDIO")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Studio1.dmxIn, 1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Studio1.dmxOut, 1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Studio1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Studio1.isRDMSupported, true)

        // Oem_thelight_luminary_for_cine_and_tv_sl_evo_1_weatherproof_1 (0x29D1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Weatherproof1, 0x29D1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Weatherproof1.description, "Oem_thelight_luminary_for_cine_and_tv_sl_evo_1_weatherproof_1")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Weatherproof1.mnemonic, "Oem_thelight_luminary_for_cine_and_tv_sl_evo_1_weatherproof_1")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Weatherproof1.manufacturer, "THELIGHT Luminary for Cine and TV SL")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Weatherproof1.product, "EVO 1 WEATHERPROOF")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Weatherproof1.dmxIn, 1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Weatherproof1.dmxOut, 1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Weatherproof1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo1Weatherproof1.isRDMSupported, true)

        // Oem_thelight_luminary_for_cine_and_tv_sl_evo_2_studio_1 (0x29CE)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Studio1, 0x29CE)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Studio1.description, "Oem_thelight_luminary_for_cine_and_tv_sl_evo_2_studio_1")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Studio1.mnemonic, "Oem_thelight_luminary_for_cine_and_tv_sl_evo_2_studio_1")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Studio1.manufacturer, "THELIGHT Luminary for Cine and TV SL")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Studio1.product, "EVO 2 STUDIO")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Studio1.dmxIn, 1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Studio1.dmxOut, 1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Studio1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Studio1.isRDMSupported, true)

        // Oem_thelight_luminary_for_cine_and_tv_sl_evo_2_weatherproof_1 (0x29CF)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Weatherproof1, 0x29CF)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Weatherproof1.description, "Oem_thelight_luminary_for_cine_and_tv_sl_evo_2_weatherproof_1")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Weatherproof1.mnemonic, "Oem_thelight_luminary_for_cine_and_tv_sl_evo_2_weatherproof_1")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Weatherproof1.manufacturer, "THELIGHT Luminary for Cine and TV SL")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Weatherproof1.product, "EVO 2 WEATHERPROOF")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Weatherproof1.dmxIn, 1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Weatherproof1.dmxOut, 1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Weatherproof1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2Weatherproof1.isRDMSupported, true)

        // Oem_thelight_luminary_for_cine_and_tv_sl_evo_2x2_studio_1 (0x29CC)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Studio1, 0x29CC)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Studio1.description, "Oem_thelight_luminary_for_cine_and_tv_sl_evo_2x2_studio_1")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Studio1.mnemonic, "Oem_thelight_luminary_for_cine_and_tv_sl_evo_2x2_studio_1")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Studio1.manufacturer, "THELIGHT Luminary for Cine and TV SL")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Studio1.product, "EVO 2x2 STUDIO")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Studio1.dmxIn, 1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Studio1.dmxOut, 1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Studio1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Studio1.isRDMSupported, true)

        // Oem_thelight_luminary_for_cine_and_tv_sl_evo_2x2_weatherproof_1 (0x29CD)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Weatherproof1, 0x29CD)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Weatherproof1.description, "Oem_thelight_luminary_for_cine_and_tv_sl_evo_2x2_weatherproof_1")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Weatherproof1.mnemonic, "Oem_thelight_luminary_for_cine_and_tv_sl_evo_2x2_weatherproof_1")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Weatherproof1.manufacturer, "THELIGHT Luminary for Cine and TV SL")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Weatherproof1.product, "EVO 2x2 WEATHERPROOF")
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Weatherproof1.dmxIn, 1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Weatherproof1.dmxOut, 1)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Weatherproof1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.thelightLuminaryForCineAndTvSlEvo2X2Weatherproof1.isRDMSupported, true)

        // Oem_tom_bland_q_sys_plugin_1 (0x28F9)
        XCTAssertEqual(OEMCode.tomBlandQSysPlugin1, 0x28F9)
        XCTAssertEqual(OEMCode.tomBlandQSysPlugin1.description, "Oem_tom_bland_q_sys_plugin_1")
        XCTAssertEqual(OEMCode.tomBlandQSysPlugin1.mnemonic, "Oem_tom_bland_q_sys_plugin_1")
        XCTAssertEqual(OEMCode.tomBlandQSysPlugin1.manufacturer, "Tom Bland")
        XCTAssertEqual(OEMCode.tomBlandQSysPlugin1.product, "Q SYS Plugin")
        XCTAssertEqual(OEMCode.tomBlandQSysPlugin1.dmxIn, 1)
        XCTAssertEqual(OEMCode.tomBlandQSysPlugin1.dmxOut, 0)
        XCTAssertEqual(OEMCode.tomBlandQSysPlugin1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.tomBlandQSysPlugin1.isRDMSupported, false)

        // Oem_tongxinkeji_plamp_1 (0x2A4E)
        XCTAssertEqual(OEMCode.tongxinkejiPlamp1, 0x2A4E)
        XCTAssertEqual(OEMCode.tongxinkejiPlamp1.description, "Oem_tongxinkeji_plamp_1")
        XCTAssertEqual(OEMCode.tongxinkejiPlamp1.mnemonic, "Oem_tongxinkeji_plamp_1")
        XCTAssertEqual(OEMCode.tongxinkejiPlamp1.manufacturer, "tongxinkeji")
        XCTAssertEqual(OEMCode.tongxinkejiPlamp1.product, "plamp")
        XCTAssertEqual(OEMCode.tongxinkejiPlamp1.dmxIn, 512)
        XCTAssertEqual(OEMCode.tongxinkejiPlamp1.dmxOut, 512)
        XCTAssertEqual(OEMCode.tongxinkejiPlamp1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.tongxinkejiPlamp1.isRDMSupported, true)

        // Oem_tristan_leonid_zoltan_thiltges_lightsculptures_1 (0x2A1B)
        XCTAssertEqual(OEMCode.tristanLeonidZoltanThiltgesLightsculptures1, 0x2A1B)
        XCTAssertEqual(OEMCode.tristanLeonidZoltanThiltgesLightsculptures1.description, "Oem_tristan_leonid_zoltan_thiltges_lightsculptures_1")
        XCTAssertEqual(OEMCode.tristanLeonidZoltanThiltgesLightsculptures1.mnemonic, "Oem_tristan_leonid_zoltan_thiltges_lightsculptures_1")
        XCTAssertEqual(OEMCode.tristanLeonidZoltanThiltgesLightsculptures1.manufacturer, "Tristan Leonid Zoltan Thiltges")
        XCTAssertEqual(OEMCode.tristanLeonidZoltanThiltgesLightsculptures1.product, "Lightsculptures")
        XCTAssertEqual(OEMCode.tristanLeonidZoltanThiltgesLightsculptures1.dmxIn, 20)
        XCTAssertEqual(OEMCode.tristanLeonidZoltanThiltgesLightsculptures1.dmxOut, 0)
        XCTAssertEqual(OEMCode.tristanLeonidZoltanThiltgesLightsculptures1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.tristanLeonidZoltanThiltgesLightsculptures1.isRDMSupported, false)

        // Oem_tx_plamp_1 (0x2A4C)
        XCTAssertEqual(OEMCode.txPlamp1, 0x2A4C)
        XCTAssertEqual(OEMCode.txPlamp1.description, "Oem_tx_plamp_1")
        XCTAssertEqual(OEMCode.txPlamp1.mnemonic, "Oem_tx_plamp_1")
        XCTAssertEqual(OEMCode.txPlamp1.manufacturer, "tx")
        XCTAssertEqual(OEMCode.txPlamp1.product, "plamp")
        XCTAssertEqual(OEMCode.txPlamp1.dmxIn, 8)
        XCTAssertEqual(OEMCode.txPlamp1.dmxOut, 8)
        XCTAssertEqual(OEMCode.txPlamp1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.txPlamp1.isRDMSupported, true)

        // Oem_tx_plamp_2 (0x2A4D)
        XCTAssertEqual(OEMCode.txPlamp2, 0x2A4D)
        XCTAssertEqual(OEMCode.txPlamp2.description, "Oem_tx_plamp_2")
        XCTAssertEqual(OEMCode.txPlamp2.mnemonic, "Oem_tx_plamp_2")
        XCTAssertEqual(OEMCode.txPlamp2.manufacturer, "tx")
        XCTAssertEqual(OEMCode.txPlamp2.product, "plamp")
        XCTAssertEqual(OEMCode.txPlamp2.dmxIn, 512)
        XCTAssertEqual(OEMCode.txPlamp2.dmxOut, 512)
        XCTAssertEqual(OEMCode.txPlamp2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.txPlamp2.isRDMSupported, true)

        // Oem_vanray_dmx_link_pro_1 (0x2A13)
        XCTAssertEqual(OEMCode.vanrayDmxLinkPro1, 0x2A13)
        XCTAssertEqual(OEMCode.vanrayDmxLinkPro1.description, "Oem_vanray_dmx_link_pro_1")
        XCTAssertEqual(OEMCode.vanrayDmxLinkPro1.mnemonic, "Oem_vanray_dmx_link_pro_1")
        XCTAssertEqual(OEMCode.vanrayDmxLinkPro1.manufacturer, "VANRAY")
        XCTAssertEqual(OEMCode.vanrayDmxLinkPro1.product, "DMX LINK PRO")
        XCTAssertEqual(OEMCode.vanrayDmxLinkPro1.dmxIn, 32)
        XCTAssertEqual(OEMCode.vanrayDmxLinkPro1.dmxOut, 32)
        XCTAssertEqual(OEMCode.vanrayDmxLinkPro1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.vanrayDmxLinkPro1.isRDMSupported, true)

        // Oem_vibesta_bv_rtx1_1 (0x29FD)
        XCTAssertEqual(OEMCode.vibestaBvRtx11, 0x29FD)
        XCTAssertEqual(OEMCode.vibestaBvRtx11.description, "Oem_vibesta_bv_rtx1_1")
        XCTAssertEqual(OEMCode.vibestaBvRtx11.mnemonic, "Oem_vibesta_bv_rtx1_1")
        XCTAssertEqual(OEMCode.vibestaBvRtx11.manufacturer, "Vibesta BV")
        XCTAssertEqual(OEMCode.vibestaBvRtx11.product, "RTX1")
        XCTAssertEqual(OEMCode.vibestaBvRtx11.dmxIn, 1)
        XCTAssertEqual(OEMCode.vibestaBvRtx11.dmxOut, 1)
        XCTAssertEqual(OEMCode.vibestaBvRtx11.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.vibestaBvRtx11.isRDMSupported, false)

        // Oem_vl_software_arthur_maxi_1 (0x29D7)
        XCTAssertEqual(OEMCode.vlSoftwareArthurMaxi1, 0x29D7)
        XCTAssertEqual(OEMCode.vlSoftwareArthurMaxi1.description, "Oem_vl_software_arthur_maxi_1")
        XCTAssertEqual(OEMCode.vlSoftwareArthurMaxi1.mnemonic, "Oem_vl_software_arthur_maxi_1")
        XCTAssertEqual(OEMCode.vlSoftwareArthurMaxi1.manufacturer, "VL software")
        XCTAssertEqual(OEMCode.vlSoftwareArthurMaxi1.product, "Arthur Maxi")
        XCTAssertEqual(OEMCode.vlSoftwareArthurMaxi1.dmxIn, 0)
        XCTAssertEqual(OEMCode.vlSoftwareArthurMaxi1.dmxOut, 4)
        XCTAssertEqual(OEMCode.vlSoftwareArthurMaxi1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.vlSoftwareArthurMaxi1.isRDMSupported, false)

        // Oem_vsevolod_kozlov_show_box_1 (0x28F8)
        XCTAssertEqual(OEMCode.vsevolodKozlovShowBox1, 0x28F8)
        XCTAssertEqual(OEMCode.vsevolodKozlovShowBox1.description, "Oem_vsevolod_kozlov_show_box_1")
        XCTAssertEqual(OEMCode.vsevolodKozlovShowBox1.mnemonic, "Oem_vsevolod_kozlov_show_box_1")
        XCTAssertEqual(OEMCode.vsevolodKozlovShowBox1.manufacturer, "Vsevolod Kozlov")
        XCTAssertEqual(OEMCode.vsevolodKozlovShowBox1.product, "Show Box")
        XCTAssertEqual(OEMCode.vsevolodKozlovShowBox1.dmxIn, 0)
        XCTAssertEqual(OEMCode.vsevolodKozlovShowBox1.dmxOut, 1)
        XCTAssertEqual(OEMCode.vsevolodKozlovShowBox1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.vsevolodKozlovShowBox1.isRDMSupported, false)

        // Oem_wa_benjamin_pmp_power_metering_panel_1 (0x2A09)
        XCTAssertEqual(OEMCode.waBenjaminPmpPowerMeteringPanel1, 0x2A09)
        XCTAssertEqual(OEMCode.waBenjaminPmpPowerMeteringPanel1.description, "Oem_wa_benjamin_pmp_power_metering_panel_1")
        XCTAssertEqual(OEMCode.waBenjaminPmpPowerMeteringPanel1.mnemonic, "Oem_wa_benjamin_pmp_power_metering_panel_1")
        XCTAssertEqual(OEMCode.waBenjaminPmpPowerMeteringPanel1.manufacturer, "WA Benjamin")
        XCTAssertEqual(OEMCode.waBenjaminPmpPowerMeteringPanel1.product, "PMP Power Metering Panel")
        XCTAssertEqual(OEMCode.waBenjaminPmpPowerMeteringPanel1.dmxIn, 1)
        XCTAssertEqual(OEMCode.waBenjaminPmpPowerMeteringPanel1.dmxOut, 0)
        XCTAssertEqual(OEMCode.waBenjaminPmpPowerMeteringPanel1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.waBenjaminPmpPowerMeteringPanel1.isRDMSupported, true)

        // Oem_wangming_wangming_1 (0x29EB)
        XCTAssertEqual(OEMCode.wangmingWangming1, 0x29EB)
        XCTAssertEqual(OEMCode.wangmingWangming1.description, "Oem_wangming_wangming_1")
        XCTAssertEqual(OEMCode.wangmingWangming1.mnemonic, "Oem_wangming_wangming_1")
        XCTAssertEqual(OEMCode.wangmingWangming1.manufacturer, "WangMing")
        XCTAssertEqual(OEMCode.wangmingWangming1.product, "WangMing")
        XCTAssertEqual(OEMCode.wangmingWangming1.dmxIn, 1)
        XCTAssertEqual(OEMCode.wangmingWangming1.dmxOut, 1)
        XCTAssertEqual(OEMCode.wangmingWangming1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.wangmingWangming1.isRDMSupported, true)

        // Oem_waves_system_event_video_player_1 (0x2999)
        XCTAssertEqual(OEMCode.wavesSystemEventVideoPlayer1, 0x2999)
        XCTAssertEqual(OEMCode.wavesSystemEventVideoPlayer1.description, "Oem_waves_system_event_video_player_1")
        XCTAssertEqual(OEMCode.wavesSystemEventVideoPlayer1.mnemonic, "Oem_waves_system_event_video_player_1")
        XCTAssertEqual(OEMCode.wavesSystemEventVideoPlayer1.manufacturer, "Waves System")
        XCTAssertEqual(OEMCode.wavesSystemEventVideoPlayer1.product, "Event Video Player")
        XCTAssertEqual(OEMCode.wavesSystemEventVideoPlayer1.dmxIn, 1)
        XCTAssertEqual(OEMCode.wavesSystemEventVideoPlayer1.dmxOut, 1)
        XCTAssertEqual(OEMCode.wavesSystemEventVideoPlayer1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.wavesSystemEventVideoPlayer1.isRDMSupported, false)

        // Oem_wiktor_kaluzny_dmx_box_1 (0x29B5)
        XCTAssertEqual(OEMCode.wiktorKaluznyDmxBox1, 0x29B5)
        XCTAssertEqual(OEMCode.wiktorKaluznyDmxBox1.description, "Oem_wiktor_kaluzny_dmx_box_1")
        XCTAssertEqual(OEMCode.wiktorKaluznyDmxBox1.mnemonic, "Oem_wiktor_kaluzny_dmx_box_1")
        XCTAssertEqual(OEMCode.wiktorKaluznyDmxBox1.manufacturer, "Wiktor Kaluzny")
        XCTAssertEqual(OEMCode.wiktorKaluznyDmxBox1.product, "DMX BOX")
        XCTAssertEqual(OEMCode.wiktorKaluznyDmxBox1.dmxIn, 0)
        XCTAssertEqual(OEMCode.wiktorKaluznyDmxBox1.dmxOut, 1)
        XCTAssertEqual(OEMCode.wiktorKaluznyDmxBox1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.wiktorKaluznyDmxBox1.isRDMSupported, true)

        // Oem_wizzuled_matrix_led_modules_1 (0x2A49)
        XCTAssertEqual(OEMCode.wizzuledMatrixLedModules1, 0x2A49)
        XCTAssertEqual(OEMCode.wizzuledMatrixLedModules1.description, "Oem_wizzuled_matrix_led_modules_1")
        XCTAssertEqual(OEMCode.wizzuledMatrixLedModules1.mnemonic, "Oem_wizzuled_matrix_led_modules_1")
        XCTAssertEqual(OEMCode.wizzuledMatrixLedModules1.manufacturer, "WizzuLED")
        XCTAssertEqual(OEMCode.wizzuledMatrixLedModules1.product, "Matrix LED Modules")
        XCTAssertEqual(OEMCode.wizzuledMatrixLedModules1.dmxIn, 2)
        XCTAssertEqual(OEMCode.wizzuledMatrixLedModules1.dmxOut, 1)
        XCTAssertEqual(OEMCode.wizzuledMatrixLedModules1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.wizzuledMatrixLedModules1.isRDMSupported, true)

        // Oem_x_laser_mobile_beat_mercury_1 (0x293C)
        XCTAssertEqual(OEMCode.xLaserMobileBeatMercury1, 0x293C)
        XCTAssertEqual(OEMCode.xLaserMobileBeatMercury1.description, "Oem_x_laser_mobile_beat_mercury_1")
        XCTAssertEqual(OEMCode.xLaserMobileBeatMercury1.mnemonic, "Oem_x_laser_mobile_beat_mercury_1")
        XCTAssertEqual(OEMCode.xLaserMobileBeatMercury1.manufacturer, "X Laser")
        XCTAssertEqual(OEMCode.xLaserMobileBeatMercury1.product, "Mobile Beat Mercury")
        XCTAssertEqual(OEMCode.xLaserMobileBeatMercury1.dmxIn, 0)
        XCTAssertEqual(OEMCode.xLaserMobileBeatMercury1.dmxOut, 2)
        XCTAssertEqual(OEMCode.xLaserMobileBeatMercury1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xLaserMobileBeatMercury1.isRDMSupported, true)

        // Oem_x_laser_skywriter_hpx_m_10_1 (0x2906)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM101, 0x2906)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM101.description, "Oem_x_laser_skywriter_hpx_m_10_1")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM101.mnemonic, "Oem_x_laser_skywriter_hpx_m_10_1")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM101.manufacturer, "X Laser")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM101.product, "Skywriter HPX M 10")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM101.dmxIn, 1)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM101.dmxOut, 1)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM101.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM101.isRDMSupported, true)

        // Oem_x_laser_skywriter_hpx_m_20_1 (0x2905)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM201, 0x2905)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM201.description, "Oem_x_laser_skywriter_hpx_m_20_1")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM201.mnemonic, "Oem_x_laser_skywriter_hpx_m_20_1")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM201.manufacturer, "X Laser")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM201.product, "Skywriter HPX M 20")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM201.dmxIn, 1)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM201.dmxOut, 1)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM201.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM201.isRDMSupported, true)

        // Oem_x_laser_skywriter_hpx_m_2_1 (0x293D)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM21, 0x293D)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM21.description, "Oem_x_laser_skywriter_hpx_m_2_1")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM21.mnemonic, "Oem_x_laser_skywriter_hpx_m_2_1")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM21.manufacturer, "X Laser")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM21.product, "Skywriter HPX M_2")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM21.dmxIn, 0)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM21.dmxOut, 2)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM21.isRDMSupported, true)

        // Oem_x_laser_skywriter_hpx_m_5_1 (0x2907)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM51, 0x2907)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM51.description, "Oem_x_laser_skywriter_hpx_m_5_1")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM51.mnemonic, "Oem_x_laser_skywriter_hpx_m_5_1")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM51.manufacturer, "X Laser")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM51.product, "Skywriter HPX M 5")
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM51.dmxIn, 1)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM51.dmxOut, 1)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM51.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xLaserSkywriterHpxM51.isRDMSupported, true)

        // Oem_xinqidian_ganelight_1 (0x29E0)
        XCTAssertEqual(OEMCode.xinqidianGanelight1, 0x29E0)
        XCTAssertEqual(OEMCode.xinqidianGanelight1.description, "Oem_xinqidian_ganelight_1")
        XCTAssertEqual(OEMCode.xinqidianGanelight1.mnemonic, "Oem_xinqidian_ganelight_1")
        XCTAssertEqual(OEMCode.xinqidianGanelight1.manufacturer, "xinqidian")
        XCTAssertEqual(OEMCode.xinqidianGanelight1.product, "ganelight")
        XCTAssertEqual(OEMCode.xinqidianGanelight1.dmxIn, 1)
        XCTAssertEqual(OEMCode.xinqidianGanelight1.dmxOut, 4)
        XCTAssertEqual(OEMCode.xinqidianGanelight1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xinqidianGanelight1.isRDMSupported, true)

        // Oem_xuri_xur_1 (0x2917)
        XCTAssertEqual(OEMCode.xuriXur1, 0x2917)
        XCTAssertEqual(OEMCode.xuriXur1.description, "Oem_xuri_xur_1")
        XCTAssertEqual(OEMCode.xuriXur1.mnemonic, "Oem_xuri_xur_1")
        XCTAssertEqual(OEMCode.xuriXur1.manufacturer, "xuri")
        XCTAssertEqual(OEMCode.xuriXur1.product, "xur")
        XCTAssertEqual(OEMCode.xuriXur1.dmxIn, 1)
        XCTAssertEqual(OEMCode.xuriXur1.dmxOut, 500)
        XCTAssertEqual(OEMCode.xuriXur1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.xuriXur1.isRDMSupported, true)

        // Oem_zboxes_intelligent_technology_shanghai_co_ltd_zboxes_8_1 (0x2961)
        XCTAssertEqual(OEMCode.zboxesIntelligentTechnologyShanghaiCoLtdZboxes81, 0x2961)
        XCTAssertEqual(OEMCode.zboxesIntelligentTechnologyShanghaiCoLtdZboxes81.description, "Oem_zboxes_intelligent_technology_shanghai_co_ltd_zboxes_8_1")
        XCTAssertEqual(OEMCode.zboxesIntelligentTechnologyShanghaiCoLtdZboxes81.mnemonic, "Oem_zboxes_intelligent_technology_shanghai_co_ltd_zboxes_8_1")
        XCTAssertEqual(OEMCode.zboxesIntelligentTechnologyShanghaiCoLtdZboxes81.manufacturer, "Zboxes Intelligent Technology Shanghai Co Ltd")
        XCTAssertEqual(OEMCode.zboxesIntelligentTechnologyShanghaiCoLtdZboxes81.product, "Zboxes 8")
        XCTAssertEqual(OEMCode.zboxesIntelligentTechnologyShanghaiCoLtdZboxes81.dmxIn, 8)
        XCTAssertEqual(OEMCode.zboxesIntelligentTechnologyShanghaiCoLtdZboxes81.dmxOut, 8)
        XCTAssertEqual(OEMCode.zboxesIntelligentTechnologyShanghaiCoLtdZboxes81.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.zboxesIntelligentTechnologyShanghaiCoLtdZboxes81.isRDMSupported, true)

        // Oem_zhsj_video_control_1 (0x2A19)
        XCTAssertEqual(OEMCode.zhsjVideoControl1, 0x2A19)
        XCTAssertEqual(OEMCode.zhsjVideoControl1.description, "Oem_zhsj_video_control_1")
        XCTAssertEqual(OEMCode.zhsjVideoControl1.mnemonic, "Oem_zhsj_video_control_1")
        XCTAssertEqual(OEMCode.zhsjVideoControl1.manufacturer, "zhsj")
        XCTAssertEqual(OEMCode.zhsjVideoControl1.product, "Video control")
        XCTAssertEqual(OEMCode.zhsjVideoControl1.dmxIn, 12)
        XCTAssertEqual(OEMCode.zhsjVideoControl1.dmxOut, 12)
        XCTAssertEqual(OEMCode.zhsjVideoControl1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.zhsjVideoControl1.isRDMSupported, true)

        // Oem_zinc_event_production_ltd_wireless_art-net_led_controller_1 (0x2A54)
        XCTAssertEqual(OEMCode.zincEventProductionLtdWirelessArtNetLedController1, 0x2A54)
        XCTAssertEqual(OEMCode.zincEventProductionLtdWirelessArtNetLedController1.description, "Oem_zinc_event_production_ltd_wireless_art-net_led_controller_1")
        XCTAssertEqual(OEMCode.zincEventProductionLtdWirelessArtNetLedController1.mnemonic, "Oem_zinc_event_production_ltd_wireless_art-net_led_controller_1")
        XCTAssertEqual(OEMCode.zincEventProductionLtdWirelessArtNetLedController1.manufacturer, "Zinc Event Production Ltd")
        XCTAssertEqual(OEMCode.zincEventProductionLtdWirelessArtNetLedController1.product, "Wireless Art-Net LED controller")
        XCTAssertEqual(OEMCode.zincEventProductionLtdWirelessArtNetLedController1.dmxIn, 1)
        XCTAssertEqual(OEMCode.zincEventProductionLtdWirelessArtNetLedController1.dmxOut, 0)
        XCTAssertEqual(OEMCode.zincEventProductionLtdWirelessArtNetLedController1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.zincEventProductionLtdWirelessArtNetLedController1.isRDMSupported, false)

        // OemAbDmxA5121 (0x28A4)
        XCTAssertEqual(OEMCode.abDmxA5121, 0x28A4)
        XCTAssertEqual(OEMCode.abDmxA5121.description, "OemAbDmxA5121")
        XCTAssertEqual(OEMCode.abDmxA5121.mnemonic, "OemAbDmxA5121")
        XCTAssertEqual(OEMCode.abDmxA5121.manufacturer, "AB-DMX")
        XCTAssertEqual(OEMCode.abDmxA5121.product, "A512 node")
        XCTAssertEqual(OEMCode.abDmxA5121.dmxIn, 1)
        XCTAssertEqual(OEMCode.abDmxA5121.dmxOut, 2)
        XCTAssertEqual(OEMCode.abDmxA5121.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.abDmxA5121.isRDMSupported, true)

        // OemAbelEVA3715Z1 (0x28F6)
        XCTAssertEqual(OEMCode.abelEVA3715Z1, 0x28F6)
        XCTAssertEqual(OEMCode.abelEVA3715Z1.description, "OemAbelEVA3715Z1")
        XCTAssertEqual(OEMCode.abelEVA3715Z1.mnemonic, "OemAbelEVA3715Z1")
        XCTAssertEqual(OEMCode.abelEVA3715Z1.manufacturer, "ABLELITE INTERNATIONAL")
        XCTAssertEqual(OEMCode.abelEVA3715Z1.product, "EVA3715Z")
        XCTAssertEqual(OEMCode.abelEVA3715Z1.dmxIn, 2)
        XCTAssertEqual(OEMCode.abelEVA3715Z1.dmxOut, 2)
        XCTAssertEqual(OEMCode.abelEVA3715Z1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.abelEVA3715Z1.isRDMSupported, true)

        // OemAbsFxShow1 (0xB30)
        XCTAssertEqual(OEMCode.absFxShow1, 0xB30)
        XCTAssertEqual(OEMCode.absFxShow1.description, "OemAbsFxShow1")
        XCTAssertEqual(OEMCode.absFxShow1.mnemonic, "OemAbsFxShow1")
        XCTAssertEqual(OEMCode.absFxShow1.manufacturer, "Absolute FX Pte Ltd")
        XCTAssertEqual(OEMCode.absFxShow1.product, "Showtime")
        XCTAssertEqual(OEMCode.absFxShow1.dmxIn, 1)
        XCTAssertEqual(OEMCode.absFxShow1.dmxOut, 4)
        XCTAssertEqual(OEMCode.absFxShow1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.absFxShow1.isRDMSupported, false)

        // OemAbsFxVirtFount1 (0xB40)
        XCTAssertEqual(OEMCode.absFxVirtFount1, 0xB40)
        XCTAssertEqual(OEMCode.absFxVirtFount1.description, "OemAbsFxVirtFount1")
        XCTAssertEqual(OEMCode.absFxVirtFount1.mnemonic, "OemAbsFxVirtFount1")
        XCTAssertEqual(OEMCode.absFxVirtFount1.manufacturer, "Mediamation Inc")
        XCTAssertEqual(OEMCode.absFxVirtFount1.product, "Virtual Fountain")
        XCTAssertEqual(OEMCode.absFxVirtFount1.dmxIn, 4)
        XCTAssertEqual(OEMCode.absFxVirtFount1.dmxOut, 0)
        XCTAssertEqual(OEMCode.absFxVirtFount1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.absFxVirtFount1.isRDMSupported, false)

        // OemAc3KinStep1 (0x2849)
        XCTAssertEqual(OEMCode.ac3KinStep1, 0x2849)
        XCTAssertEqual(OEMCode.ac3KinStep1.description, "OemAc3KinStep1")
        XCTAssertEqual(OEMCode.ac3KinStep1.mnemonic, "OemAc3KinStep1")
        XCTAssertEqual(OEMCode.ac3KinStep1.manufacturer, "AC3 Studio")
        XCTAssertEqual(OEMCode.ac3KinStep1.product, "Kinetic Stepper Interface")
        XCTAssertEqual(OEMCode.ac3KinStep1.dmxIn, 32)
        XCTAssertEqual(OEMCode.ac3KinStep1.dmxOut, 32)
        XCTAssertEqual(OEMCode.ac3KinStep1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ac3KinStep1.isRDMSupported, false)

        // OemAckCfs (0x1050)
        XCTAssertEqual(OEMCode.ackCfs, 0x1050)
        XCTAssertEqual(OEMCode.ackCfs.description, "OemAckCfs")
        XCTAssertEqual(OEMCode.ackCfs.mnemonic, "OemAckCfs")
        XCTAssertEqual(OEMCode.ackCfs.manufacturer, "Ackerman Computer Sciences")
        XCTAssertNil(OEMCode.ackCfs.product)
        XCTAssertEqual(OEMCode.ackCfs.dmxIn, 1)
        XCTAssertEqual(OEMCode.ackCfs.dmxOut, 1)
        XCTAssertEqual(OEMCode.ackCfs.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ackCfs.isRDMSupported, false)

        // OemAckCl32 (0x1051)
        XCTAssertEqual(OEMCode.ackCl32, 0x1051)
        XCTAssertEqual(OEMCode.ackCl32.description, "OemAckCl32")
        XCTAssertEqual(OEMCode.ackCl32.mnemonic, "OemAckCl32")
        XCTAssertEqual(OEMCode.ackCl32.manufacturer, "Ackerman Computer Sciences")
        XCTAssertEqual(OEMCode.ackCl32.product, "Color LCD 320x240 Terminal")
        XCTAssertEqual(OEMCode.ackCl32.dmxIn, 0)
        XCTAssertEqual(OEMCode.ackCl32.dmxOut, 1)
        XCTAssertEqual(OEMCode.ackCl32.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ackCl32.isRDMSupported, false)

        // OemAclSn1 (0x13E2)
        XCTAssertEqual(OEMCode.aclSn1, 0x13E2)
        XCTAssertEqual(OEMCode.aclSn1.description, "OemAclSn1")
        XCTAssertEqual(OEMCode.aclSn1.mnemonic, "OemAclSn1")
        XCTAssertEqual(OEMCode.aclSn1.manufacturer, "AC Lasers")
        XCTAssertEqual(OEMCode.aclSn1.product, "SuperNova")
        XCTAssertEqual(OEMCode.aclSn1.dmxIn, 1)
        XCTAssertEqual(OEMCode.aclSn1.dmxOut, 1)
        XCTAssertEqual(OEMCode.aclSn1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aclSn1.isRDMSupported, true)

        // OemAclWl1 (0x13E3)
        XCTAssertEqual(OEMCode.aclWl1, 0x13E3)
        XCTAssertEqual(OEMCode.aclWl1.description, "OemAclWl1")
        XCTAssertEqual(OEMCode.aclWl1.mnemonic, "OemAclWl1")
        XCTAssertEqual(OEMCode.aclWl1.manufacturer, "AC Lasers")
        XCTAssertEqual(OEMCode.aclWl1.product, "W-Lux")
        XCTAssertEqual(OEMCode.aclWl1.dmxIn, 1)
        XCTAssertEqual(OEMCode.aclWl1.dmxOut, 1)
        XCTAssertEqual(OEMCode.aclWl1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aclWl1.isRDMSupported, true)

        // OemAcmAcmeCM1 (0x28DF)
        XCTAssertEqual(OEMCode.acmAcmeCM1, 0x28DF)
        XCTAssertEqual(OEMCode.acmAcmeCM1.description, "OemAcmAcmeCM1")
        XCTAssertEqual(OEMCode.acmAcmeCM1.mnemonic, "OemAcmAcmeCM1")
        XCTAssertEqual(OEMCode.acmAcmeCM1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmAcmeCM1.product, "Acme-CM")
        XCTAssertEqual(OEMCode.acmAcmeCM1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmAcmeCM1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmAcmeCM1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmAcmeCM1.isRDMSupported, true)

        // OemAcmAcmeLED1 (0x28DC)
        XCTAssertEqual(OEMCode.acmAcmeLED1, 0x28DC)
        XCTAssertEqual(OEMCode.acmAcmeLED1.description, "OemAcmAcmeLED1")
        XCTAssertEqual(OEMCode.acmAcmeLED1.mnemonic, "OemAcmAcmeLED1")
        XCTAssertEqual(OEMCode.acmAcmeLED1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmAcmeLED1.product, "Acme-LED")
        XCTAssertEqual(OEMCode.acmAcmeLED1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmAcmeLED1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmAcmeLED1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmAcmeLED1.isRDMSupported, true)

        // OemAcmAcmeLS1 (0x28DD)
        XCTAssertEqual(OEMCode.acmAcmeLS1, 0x28DD)
        XCTAssertEqual(OEMCode.acmAcmeLS1.description, "OemAcmAcmeLS1")
        XCTAssertEqual(OEMCode.acmAcmeLS1.mnemonic, "OemAcmAcmeLS1")
        XCTAssertEqual(OEMCode.acmAcmeLS1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmAcmeLS1.product, "Acme-LS")
        XCTAssertEqual(OEMCode.acmAcmeLS1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmAcmeLS1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmAcmeLS1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmAcmeLS1.isRDMSupported, true)

        // OemAcmAcmeMP1 (0x28DE)
        XCTAssertEqual(OEMCode.acmAcmeMP1, 0x28DE)
        XCTAssertEqual(OEMCode.acmAcmeMP1.description, "OemAcmAcmeMP1")
        XCTAssertEqual(OEMCode.acmAcmeMP1.mnemonic, "OemAcmAcmeMP1")
        XCTAssertEqual(OEMCode.acmAcmeMP1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmAcmeMP1.product, "Acme-MP")
        XCTAssertEqual(OEMCode.acmAcmeMP1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmAcmeMP1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmAcmeMP1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmAcmeMP1.isRDMSupported, true)

        // OemAcmAcmeTS1 (0x28E0)
        XCTAssertEqual(OEMCode.acmAcmeTS1, 0x28E0)
        XCTAssertEqual(OEMCode.acmAcmeTS1.description, "OemAcmAcmeTS1")
        XCTAssertEqual(OEMCode.acmAcmeTS1.mnemonic, "OemAcmAcmeTS1")
        XCTAssertEqual(OEMCode.acmAcmeTS1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmAcmeTS1.product, "Acme-TS")
        XCTAssertEqual(OEMCode.acmAcmeTS1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmAcmeTS1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmAcmeTS1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmAcmeTS1.isRDMSupported, true)

        // OemAcmAcmeXA1 (0x28E1)
        XCTAssertEqual(OEMCode.acmAcmeXA1, 0x28E1)
        XCTAssertEqual(OEMCode.acmAcmeXA1.description, "OemAcmAcmeXA1")
        XCTAssertEqual(OEMCode.acmAcmeXA1.mnemonic, "OemAcmAcmeXA1")
        XCTAssertEqual(OEMCode.acmAcmeXA1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmAcmeXA1.product, "Acme-XA")
        XCTAssertEqual(OEMCode.acmAcmeXA1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmAcmeXA1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmAcmeXA1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmAcmeXA1.isRDMSupported, true)

        // OemAcmAcmeXP1 (0x28E2)
        XCTAssertEqual(OEMCode.acmAcmeXP1, 0x28E2)
        XCTAssertEqual(OEMCode.acmAcmeXP1.description, "OemAcmAcmeXP1")
        XCTAssertEqual(OEMCode.acmAcmeXP1.mnemonic, "OemAcmAcmeXP1")
        XCTAssertEqual(OEMCode.acmAcmeXP1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmAcmeXP1.product, "Acme-XP")
        XCTAssertEqual(OEMCode.acmAcmeXP1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmAcmeXP1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmAcmeXP1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmAcmeXP1.isRDMSupported, true)

        // OemAcmCMS61 (0x28E3)
        XCTAssertEqual(OEMCode.acmCMS61, 0x28E3)
        XCTAssertEqual(OEMCode.acmCMS61.description, "OemAcmCMS61")
        XCTAssertEqual(OEMCode.acmCMS61.mnemonic, "OemAcmCMS61")
        XCTAssertEqual(OEMCode.acmCMS61.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmCMS61.product, "CM-S6")
        XCTAssertEqual(OEMCode.acmCMS61.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmCMS61.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmCMS61.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmCMS61.isRDMSupported, true)

        // OemAcmLEDMTX361 (0x28EE)
        XCTAssertEqual(OEMCode.acmLEDMTX361, 0x28EE)
        XCTAssertEqual(OEMCode.acmLEDMTX361.description, "OemAcmLEDMTX361")
        XCTAssertEqual(OEMCode.acmLEDMTX361.mnemonic, "OemAcmLEDMTX361")
        XCTAssertEqual(OEMCode.acmLEDMTX361.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmLEDMTX361.product, "LED-MTX36")
        XCTAssertEqual(OEMCode.acmLEDMTX361.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmLEDMTX361.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmLEDMTX361.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmLEDMTX361.isRDMSupported, true)

        // OemAcmLEDMTX36HEX1 (0x28ED)
        XCTAssertEqual(OEMCode.acmLEDMTX36HEX1, 0x28ED)
        XCTAssertEqual(OEMCode.acmLEDMTX36HEX1.description, "OemAcmLEDMTX36HEX1")
        XCTAssertEqual(OEMCode.acmLEDMTX36HEX1.mnemonic, "OemAcmLEDMTX36HEX1")
        XCTAssertEqual(OEMCode.acmLEDMTX36HEX1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmLEDMTX36HEX1.product, "LED-MTX36-HEX")
        XCTAssertEqual(OEMCode.acmLEDMTX36HEX1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmLEDMTX36HEX1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmLEDMTX36HEX1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmLEDMTX36HEX1.isRDMSupported, true)

        // OemAcmLPF10001 (0x28F0)
        XCTAssertEqual(OEMCode.acmLPF10001, 0x28F0)
        XCTAssertEqual(OEMCode.acmLPF10001.description, "OemAcmLPF10001")
        XCTAssertEqual(OEMCode.acmLPF10001.mnemonic, "OemAcmLPF10001")
        XCTAssertEqual(OEMCode.acmLPF10001.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmLPF10001.product, "LP-F1000")
        XCTAssertEqual(OEMCode.acmLPF10001.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmLPF10001.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmLPF10001.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmLPF10001.isRDMSupported, true)

        // OemAcmLPF20001 (0x28EF)
        XCTAssertEqual(OEMCode.acmLPF20001, 0x28EF)
        XCTAssertEqual(OEMCode.acmLPF20001.description, "OemAcmLPF20001")
        XCTAssertEqual(OEMCode.acmLPF20001.mnemonic, "OemAcmLPF20001")
        XCTAssertEqual(OEMCode.acmLPF20001.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmLPF20001.product, "LP-F2000")
        XCTAssertEqual(OEMCode.acmLPF20001.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmLPF20001.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmLPF20001.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmLPF20001.isRDMSupported, true)

        // OemAcmTB1230QW1 (0x28F5)
        XCTAssertEqual(OEMCode.acmTB1230QW1, 0x28F5)
        XCTAssertEqual(OEMCode.acmTB1230QW1.description, "OemAcmTB1230QW1")
        XCTAssertEqual(OEMCode.acmTB1230QW1.mnemonic, "OemAcmTB1230QW1")
        XCTAssertEqual(OEMCode.acmTB1230QW1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmTB1230QW1.product, "TB-1230QW")
        XCTAssertEqual(OEMCode.acmTB1230QW1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmTB1230QW1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmTB1230QW1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmTB1230QW1.isRDMSupported, true)

        // OemAcmTS150MWWCW1 (0x28E8)
        XCTAssertEqual(OEMCode.acmTS150MWWCW1, 0x28E8)
        XCTAssertEqual(OEMCode.acmTS150MWWCW1.description, "OemAcmTS150MWWCW1")
        XCTAssertEqual(OEMCode.acmTS150MWWCW1.mnemonic, "OemAcmTS150MWWCW1")
        XCTAssertEqual(OEMCode.acmTS150MWWCW1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmTS150MWWCW1.product, "TS-150M WW/CW")
        XCTAssertEqual(OEMCode.acmTS150MWWCW1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmTS150MWWCW1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmTS150MWWCW1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmTS150MWWCW1.isRDMSupported, true)

        // OemAcmTS150WWCW1 (0x28E9)
        XCTAssertEqual(OEMCode.acmTS150WWCW1, 0x28E9)
        XCTAssertEqual(OEMCode.acmTS150WWCW1.description, "OemAcmTS150WWCW1")
        XCTAssertEqual(OEMCode.acmTS150WWCW1.mnemonic, "OemAcmTS150WWCW1")
        XCTAssertEqual(OEMCode.acmTS150WWCW1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmTS150WWCW1.product, "TS-150 WW/CW")
        XCTAssertEqual(OEMCode.acmTS150WWCW1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmTS150WWCW1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmTS150WWCW1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmTS150WWCW1.isRDMSupported, true)

        // OemAcmTS300MWWCW1 (0x28EC)
        XCTAssertEqual(OEMCode.acmTS300MWWCW1, 0x28EC)
        XCTAssertEqual(OEMCode.acmTS300MWWCW1.description, "OemAcmTS300MWWCW1")
        XCTAssertEqual(OEMCode.acmTS300MWWCW1.mnemonic, "OemAcmTS300MWWCW1")
        XCTAssertEqual(OEMCode.acmTS300MWWCW1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmTS300MWWCW1.product, "TS-300M WW/CW")
        XCTAssertEqual(OEMCode.acmTS300MWWCW1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmTS300MWWCW1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmTS300MWWCW1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmTS300MWWCW1.isRDMSupported, true)

        // OemAcmTS300WWC1 (0x28EB)
        XCTAssertEqual(OEMCode.acmTS300WWC1, 0x28EB)
        XCTAssertEqual(OEMCode.acmTS300WWC1.description, "OemAcmTS300WWC1")
        XCTAssertEqual(OEMCode.acmTS300WWC1.mnemonic, "OemAcmTS300WWC1")
        XCTAssertEqual(OEMCode.acmTS300WWC1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmTS300WWC1.product, "TS-300 WW/C")
        XCTAssertEqual(OEMCode.acmTS300WWC1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmTS300WWC1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmTS300WWC1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmTS300WWC1.isRDMSupported, true)

        // OemAcmTS300WWCW1 (0x28EA)
        XCTAssertEqual(OEMCode.acmTS300WWCW1, 0x28EA)
        XCTAssertEqual(OEMCode.acmTS300WWCW1.description, "OemAcmTS300WWCW1")
        XCTAssertEqual(OEMCode.acmTS300WWCW1.mnemonic, "OemAcmTS300WWCW1")
        XCTAssertEqual(OEMCode.acmTS300WWCW1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmTS300WWCW1.product, "TS-300 WW/CW")
        XCTAssertEqual(OEMCode.acmTS300WWCW1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmTS300WWCW1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmTS300WWCW1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmTS300WWCW1.isRDMSupported, true)

        // OemAcmXp (0x10B0)
        XCTAssertEqual(OEMCode.acmXp, 0x10B0)
        XCTAssertEqual(OEMCode.acmXp.description, "OemAcmXp")
        XCTAssertEqual(OEMCode.acmXp.mnemonic, "OemAcmXp")
        XCTAssertEqual(OEMCode.acmXp.manufacturer, "ACME")
        XCTAssertEqual(OEMCode.acmXp.product, "XP-1000 SZ")
        XCTAssertEqual(OEMCode.acmXp.dmxIn, 1)
        XCTAssertEqual(OEMCode.acmXp.dmxOut, 0)
        XCTAssertEqual(OEMCode.acmXp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.acmXp.isRDMSupported, true)

        // OemAcmXP1000FS1 (0x28E4)
        XCTAssertEqual(OEMCode.acmXP1000FS1, 0x28E4)
        XCTAssertEqual(OEMCode.acmXP1000FS1.description, "OemAcmXP1000FS1")
        XCTAssertEqual(OEMCode.acmXP1000FS1.mnemonic, "OemAcmXP1000FS1")
        XCTAssertEqual(OEMCode.acmXP1000FS1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmXP1000FS1.product, "XP-1000FS")
        XCTAssertEqual(OEMCode.acmXP1000FS1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmXP1000FS1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmXP1000FS1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmXP1000FS1.isRDMSupported, true)

        // OemAcmXP1000SZF1 (0x28E5)
        XCTAssertEqual(OEMCode.acmXP1000SZF1, 0x28E5)
        XCTAssertEqual(OEMCode.acmXP1000SZF1.description, "OemAcmXP1000SZF1")
        XCTAssertEqual(OEMCode.acmXP1000SZF1.mnemonic, "OemAcmXP1000SZF1")
        XCTAssertEqual(OEMCode.acmXP1000SZF1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmXP1000SZF1.product, "XP-1000SZF")
        XCTAssertEqual(OEMCode.acmXP1000SZF1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmXP1000SZF1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmXP1000SZF1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmXP1000SZF1.isRDMSupported, true)

        // OemAcmXP1000WZ1 (0x28F1)
        XCTAssertEqual(OEMCode.acmXP1000WZ1, 0x28F1)
        XCTAssertEqual(OEMCode.acmXP1000WZ1.description, "OemAcmXP1000WZ1")
        XCTAssertEqual(OEMCode.acmXP1000WZ1.mnemonic, "OemAcmXP1000WZ1")
        XCTAssertEqual(OEMCode.acmXP1000WZ1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmXP1000WZ1.product, "XP-1000WZ")
        XCTAssertEqual(OEMCode.acmXP1000WZ1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmXP1000WZ1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmXP1000WZ1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmXP1000WZ1.isRDMSupported, true)

        // OemAcmXP5000NF1 (0x28E6)
        XCTAssertEqual(OEMCode.acmXP5000NF1, 0x28E6)
        XCTAssertEqual(OEMCode.acmXP5000NF1.description, "OemAcmXP5000NF1")
        XCTAssertEqual(OEMCode.acmXP5000NF1.mnemonic, "OemAcmXP5000NF1")
        XCTAssertEqual(OEMCode.acmXP5000NF1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmXP5000NF1.product, "XP-5000NF")
        XCTAssertEqual(OEMCode.acmXP5000NF1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmXP5000NF1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmXP5000NF1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmXP5000NF1.isRDMSupported, true)

        // OemAcmXP5000WZ1 (0x28E7)
        XCTAssertEqual(OEMCode.acmXP5000WZ1, 0x28E7)
        XCTAssertEqual(OEMCode.acmXP5000WZ1.description, "OemAcmXP5000WZ1")
        XCTAssertEqual(OEMCode.acmXP5000WZ1.mnemonic, "OemAcmXP5000WZ1")
        XCTAssertEqual(OEMCode.acmXP5000WZ1.manufacturer, "Acme")
        XCTAssertEqual(OEMCode.acmXP5000WZ1.product, "XP-5000WZ")
        XCTAssertEqual(OEMCode.acmXP5000WZ1.dmxIn, 0)
        XCTAssertEqual(OEMCode.acmXP5000WZ1.dmxOut, 1)
        XCTAssertEqual(OEMCode.acmXP5000WZ1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.acmXP5000WZ1.isRDMSupported, true)

        // OemAdbDownLink (0x70)
        XCTAssertEqual(OEMCode.adbDownLink, 0x70)
        XCTAssertEqual(OEMCode.adbDownLink.description, "OemAdbDownLink")
        XCTAssertEqual(OEMCode.adbDownLink.mnemonic, "OemAdbDownLink")
        XCTAssertEqual(OEMCode.adbDownLink.manufacturer, "ADB")
        XCTAssertEqual(OEMCode.adbDownLink.product, "ADB Down-Link")
        XCTAssertEqual(OEMCode.adbDownLink.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbDownLink.dmxOut, 2)
        XCTAssertEqual(OEMCode.adbDownLink.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adbDownLink.isRDMSupported, false)

        // OemAdbDownLynx2 (0x270)
        XCTAssertEqual(OEMCode.adbDownLynx2, 0x270)
        XCTAssertEqual(OEMCode.adbDownLynx2.description, "OemAdbDownLynx2")
        XCTAssertEqual(OEMCode.adbDownLynx2.mnemonic, "OemAdbDownLynx2")
        XCTAssertEqual(OEMCode.adbDownLynx2.manufacturer, "ADB")
        XCTAssertEqual(OEMCode.adbDownLynx2.product, "ADB Down-Lynx 2")
        XCTAssertEqual(OEMCode.adbDownLynx2.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbDownLynx2.dmxOut, 2)
        XCTAssertEqual(OEMCode.adbDownLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adbDownLynx2.isRDMSupported, true)

        // OemAdbUpLink (0x71)
        XCTAssertEqual(OEMCode.adbUpLink, 0x71)
        XCTAssertEqual(OEMCode.adbUpLink.description, "OemAdbUpLink")
        XCTAssertEqual(OEMCode.adbUpLink.mnemonic, "OemAdbUpLink")
        XCTAssertEqual(OEMCode.adbUpLink.manufacturer, "ADB")
        XCTAssertEqual(OEMCode.adbUpLink.product, "ADB Up-Link")
        XCTAssertEqual(OEMCode.adbUpLink.dmxIn, 2)
        XCTAssertEqual(OEMCode.adbUpLink.dmxOut, 0)
        XCTAssertEqual(OEMCode.adbUpLink.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adbUpLink.isRDMSupported, false)

        // OemAdbUpLynx2 (0x271)
        XCTAssertEqual(OEMCode.adbUpLynx2, 0x271)
        XCTAssertEqual(OEMCode.adbUpLynx2.description, "OemAdbUpLynx2")
        XCTAssertEqual(OEMCode.adbUpLynx2.mnemonic, "OemAdbUpLynx2")
        XCTAssertEqual(OEMCode.adbUpLynx2.manufacturer, "ADB")
        XCTAssertEqual(OEMCode.adbUpLynx2.product, "ADB Up-Lynx 2")
        XCTAssertEqual(OEMCode.adbUpLynx2.dmxIn, 2)
        XCTAssertEqual(OEMCode.adbUpLynx2.dmxOut, 0)
        XCTAssertEqual(OEMCode.adbUpLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adbUpLynx2.isRDMSupported, false)

        // OemAdbWifiRem (0x72)
        XCTAssertEqual(OEMCode.adbWifiRem, 0x72)
        XCTAssertEqual(OEMCode.adbWifiRem.description, "OemAdbWifiRem")
        XCTAssertEqual(OEMCode.adbWifiRem.mnemonic, "OemAdbWifiRem")
        XCTAssertEqual(OEMCode.adbWifiRem.manufacturer, "ADB")
        XCTAssertEqual(OEMCode.adbWifiRem.product, "ADB WiFi")
        XCTAssertEqual(OEMCode.adbWifiRem.dmxIn, 0)
        XCTAssertEqual(OEMCode.adbWifiRem.dmxOut, 0)
        XCTAssertEqual(OEMCode.adbWifiRem.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adbWifiRem.isRDMSupported, false)

        // OemAddBoxFreed1 (0x2888)
        XCTAssertEqual(OEMCode.addBoxFreed1, 0x2888)
        XCTAssertEqual(OEMCode.addBoxFreed1.description, "OemAddBoxFreed1")
        XCTAssertEqual(OEMCode.addBoxFreed1.mnemonic, "OemAddBoxFreed1")
        XCTAssertEqual(OEMCode.addBoxFreed1.manufacturer, "ADDiCTiON bOx")
        XCTAssertEqual(OEMCode.addBoxFreed1.product, "FrEEdOsE WLaN")
        XCTAssertEqual(OEMCode.addBoxFreed1.dmxIn, 1)
        XCTAssertEqual(OEMCode.addBoxFreed1.dmxOut, 0)
        XCTAssertEqual(OEMCode.addBoxFreed1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.addBoxFreed1.isRDMSupported, true)

        // OemAddBoxFull81 (0x2889)
        XCTAssertEqual(OEMCode.addBoxFull81, 0x2889)
        XCTAssertEqual(OEMCode.addBoxFull81.description, "OemAddBoxFull81")
        XCTAssertEqual(OEMCode.addBoxFull81.mnemonic, "OemAddBoxFull81")
        XCTAssertEqual(OEMCode.addBoxFull81.manufacturer, "ADDiCTiON bOx")
        XCTAssertEqual(OEMCode.addBoxFull81.product, "FuLLdOsE 8-Port")
        XCTAssertEqual(OEMCode.addBoxFull81.dmxIn, 8)
        XCTAssertEqual(OEMCode.addBoxFull81.dmxOut, 8)
        XCTAssertEqual(OEMCode.addBoxFull81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.addBoxFull81.isRDMSupported, true)

        // OemAddBoxHalf41 (0x288B)
        XCTAssertEqual(OEMCode.addBoxHalf41, 0x288B)
        XCTAssertEqual(OEMCode.addBoxHalf41.description, "OemAddBoxHalf41")
        XCTAssertEqual(OEMCode.addBoxHalf41.mnemonic, "OemAddBoxHalf41")
        XCTAssertEqual(OEMCode.addBoxHalf41.manufacturer, "ADDiCTiON bOx")
        XCTAssertEqual(OEMCode.addBoxHalf41.product, "HaLFdOsE 4-Port")
        XCTAssertEqual(OEMCode.addBoxHalf41.dmxIn, 4)
        XCTAssertEqual(OEMCode.addBoxHalf41.dmxOut, 4)
        XCTAssertEqual(OEMCode.addBoxHalf41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.addBoxHalf41.isRDMSupported, true)

        // OemAddBoxHalf81 (0x288C)
        XCTAssertEqual(OEMCode.addBoxHalf81, 0x288C)
        XCTAssertEqual(OEMCode.addBoxHalf81.description, "OemAddBoxHalf81")
        XCTAssertEqual(OEMCode.addBoxHalf81.mnemonic, "OemAddBoxHalf81")
        XCTAssertEqual(OEMCode.addBoxHalf81.manufacturer, "ADDiCTiON bOx")
        XCTAssertEqual(OEMCode.addBoxHalf81.product, "HaLFdOsE 8-Port")
        XCTAssertEqual(OEMCode.addBoxHalf81.dmxIn, 8)
        XCTAssertEqual(OEMCode.addBoxHalf81.dmxOut, 8)
        XCTAssertEqual(OEMCode.addBoxHalf81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.addBoxHalf81.isRDMSupported, true)

        // OemAddBoxTruss41 (0x288A)
        XCTAssertEqual(OEMCode.addBoxTruss41, 0x288A)
        XCTAssertEqual(OEMCode.addBoxTruss41.description, "OemAddBoxTruss41")
        XCTAssertEqual(OEMCode.addBoxTruss41.mnemonic, "OemAddBoxTruss41")
        XCTAssertEqual(OEMCode.addBoxTruss41.manufacturer, "ADDiCTiON bOx")
        XCTAssertEqual(OEMCode.addBoxTruss41.product, "TrUssdOsE 4-Port")
        XCTAssertEqual(OEMCode.addBoxTruss41.dmxIn, 4)
        XCTAssertEqual(OEMCode.addBoxTruss41.dmxOut, 4)
        XCTAssertEqual(OEMCode.addBoxTruss41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.addBoxTruss41.isRDMSupported, true)

        // OemAdfViziCmy3001 (0x28CE)
        XCTAssertEqual(OEMCode.adfViziCmy3001, 0x28CE)
        XCTAssertEqual(OEMCode.adfViziCmy3001.description, "OemAdfViziCmy3001")
        XCTAssertEqual(OEMCode.adfViziCmy3001.mnemonic, "OemAdfViziCmy3001")
        XCTAssertEqual(OEMCode.adfViziCmy3001.manufacturer, "ADJ Products")
        XCTAssertEqual(OEMCode.adfViziCmy3001.product, "VIZI CMY 300")
        XCTAssertEqual(OEMCode.adfViziCmy3001.dmxIn, 2)
        XCTAssertEqual(OEMCode.adfViziCmy3001.dmxOut, 2)
        XCTAssertEqual(OEMCode.adfViziCmy3001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adfViziCmy3001.isRDMSupported, true)

        // OemAdjAir1 (0x13C2)
        XCTAssertEqual(OEMCode.adjAir1, 0x13C2)
        XCTAssertEqual(OEMCode.adjAir1.description, "OemAdjAir1")
        XCTAssertEqual(OEMCode.adjAir1.mnemonic, "OemAdjAir1")
        XCTAssertEqual(OEMCode.adjAir1.manufacturer, "ADJ Products")
        XCTAssertEqual(OEMCode.adjAir1.product, "Airstream DMX Bridge")
        XCTAssertEqual(OEMCode.adjAir1.dmxIn, 0)
        XCTAssertEqual(OEMCode.adjAir1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adjAir1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjAir1.isRDMSupported, false)

        // OemAdjFlashK1 (0x1390)
        XCTAssertEqual(OEMCode.adjFlashK1, 0x1390)
        XCTAssertEqual(OEMCode.adjFlashK1.description, "OemAdjFlashK1")
        XCTAssertEqual(OEMCode.adjFlashK1.mnemonic, "OemAdjFlashK1")
        XCTAssertEqual(OEMCode.adjFlashK1.manufacturer, "ADJ Products")
        XCTAssertEqual(OEMCode.adjFlashK1.product, "Flash Kling Panel")
        XCTAssertEqual(OEMCode.adjFlashK1.dmxIn, 1)
        XCTAssertEqual(OEMCode.adjFlashK1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adjFlashK1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjFlashK1.isRDMSupported, false)

        // OemAdjParZ1003K1 (0x28CD)
        XCTAssertEqual(OEMCode.adjParZ1003K1, 0x28CD)
        XCTAssertEqual(OEMCode.adjParZ1003K1.description, "OemAdjParZ1003K1")
        XCTAssertEqual(OEMCode.adjParZ1003K1.mnemonic, "OemAdjParZ1003K1")
        XCTAssertEqual(OEMCode.adjParZ1003K1.manufacturer, "ADJ Products")
        XCTAssertEqual(OEMCode.adjParZ1003K1.product, "Par Z100 3K")
        XCTAssertEqual(OEMCode.adjParZ1003K1.dmxIn, 1)
        XCTAssertEqual(OEMCode.adjParZ1003K1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adjParZ1003K1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjParZ1003K1.isRDMSupported, true)

        // OemAdjParZ1005K1 (0x28CC)
        XCTAssertEqual(OEMCode.adjParZ1005K1, 0x28CC)
        XCTAssertEqual(OEMCode.adjParZ1005K1.description, "OemAdjParZ1005K1")
        XCTAssertEqual(OEMCode.adjParZ1005K1.mnemonic, "OemAdjParZ1005K1")
        XCTAssertEqual(OEMCode.adjParZ1005K1.manufacturer, "ADJ Products")
        XCTAssertEqual(OEMCode.adjParZ1005K1.product, "Par Z100 5K")
        XCTAssertEqual(OEMCode.adjParZ1005K1.dmxIn, 1)
        XCTAssertEqual(OEMCode.adjParZ1005K1.dmxOut, 1)
        XCTAssertEqual(OEMCode.adjParZ1005K1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjParZ1005K1.isRDMSupported, true)

        // OemAdjProdVIZIWASHPRO1 (0x28F7)
        XCTAssertEqual(OEMCode.adjProdVIZIWASHPRO1, 0x28F7)
        XCTAssertEqual(OEMCode.adjProdVIZIWASHPRO1.description, "OemAdjProdVIZIWASHPRO1")
        XCTAssertEqual(OEMCode.adjProdVIZIWASHPRO1.mnemonic, "OemAdjProdVIZIWASHPRO1")
        XCTAssertEqual(OEMCode.adjProdVIZIWASHPRO1.manufacturer, "ADJ PRODUCTS")
        XCTAssertEqual(OEMCode.adjProdVIZIWASHPRO1.product, "VIZI WASH PRO")
        XCTAssertEqual(OEMCode.adjProdVIZIWASHPRO1.dmxIn, 2)
        XCTAssertEqual(OEMCode.adjProdVIZIWASHPRO1.dmxOut, 2)
        XCTAssertEqual(OEMCode.adjProdVIZIWASHPRO1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adjProdVIZIWASHPRO1.isRDMSupported, true)

        // OemAdl1 (0x13C6)
        XCTAssertEqual(OEMCode.adl1, 0x13C6)
        XCTAssertEqual(OEMCode.adl1.description, "OemAdl1")
        XCTAssertEqual(OEMCode.adl1.mnemonic, "OemAdl1")
        XCTAssertEqual(OEMCode.adl1.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl1.product, "ADL DMX NetGate")
        XCTAssertEqual(OEMCode.adl1.dmxIn, 0)
        XCTAssertEqual(OEMCode.adl1.dmxOut, 4)
        XCTAssertEqual(OEMCode.adl1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adl1.isRDMSupported, false)

        // OemAdl10 (0x13CF)
        XCTAssertEqual(OEMCode.adl10, 0x13CF)
        XCTAssertEqual(OEMCode.adl10.description, "OemAdl10")
        XCTAssertEqual(OEMCode.adl10.mnemonic, "OemAdl10")
        XCTAssertEqual(OEMCode.adl10.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl10.product, "ADL DC WSO (operator workstation)")
        XCTAssertEqual(OEMCode.adl10.dmxIn, 1)
        XCTAssertEqual(OEMCode.adl10.dmxOut, 1)
        XCTAssertEqual(OEMCode.adl10.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adl10.isRDMSupported, false)

        // OemAdl11 (0x13D0)
        XCTAssertEqual(OEMCode.adl11, 0x13D0)
        XCTAssertEqual(OEMCode.adl11.description, "OemAdl11")
        XCTAssertEqual(OEMCode.adl11.mnemonic, "OemAdl11")
        XCTAssertEqual(OEMCode.adl11.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl11.product, "ADL DC IKB")
        XCTAssertEqual(OEMCode.adl11.dmxIn, 1)
        XCTAssertEqual(OEMCode.adl11.dmxOut, 0)
        XCTAssertEqual(OEMCode.adl11.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adl11.isRDMSupported, false)

        // OemAdl12 (0x13D1)
        XCTAssertEqual(OEMCode.adl12, 0x13D1)
        XCTAssertEqual(OEMCode.adl12.description, "OemAdl12")
        XCTAssertEqual(OEMCode.adl12.mnemonic, "OemAdl12")
        XCTAssertEqual(OEMCode.adl12.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl12.product, "ADL DimmerCabinet CPU")
        XCTAssertEqual(OEMCode.adl12.dmxIn, 1)
        XCTAssertEqual(OEMCode.adl12.dmxOut, 0)
        XCTAssertEqual(OEMCode.adl12.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adl12.isRDMSupported, false)

        // OemAdl13 (0x13D2)
        XCTAssertEqual(OEMCode.adl13, 0x13D2)
        XCTAssertEqual(OEMCode.adl13.description, "OemAdl13")
        XCTAssertEqual(OEMCode.adl13.mnemonic, "OemAdl13")
        XCTAssertEqual(OEMCode.adl13.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl13.product, "ADL Dimmer 220-12d-x")
        XCTAssertEqual(OEMCode.adl13.dmxIn, 1)
        XCTAssertEqual(OEMCode.adl13.dmxOut, 0)
        XCTAssertEqual(OEMCode.adl13.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adl13.isRDMSupported, true)

        // OemAdl14 (0x13D3)
        XCTAssertEqual(OEMCode.adl14, 0x13D3)
        XCTAssertEqual(OEMCode.adl14.description, "OemAdl14")
        XCTAssertEqual(OEMCode.adl14.mnemonic, "OemAdl14")
        XCTAssertEqual(OEMCode.adl14.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl14.product, "ADL MediaPlayer")
        XCTAssertEqual(OEMCode.adl14.dmxIn, 0)
        XCTAssertEqual(OEMCode.adl14.dmxOut, 1)
        XCTAssertEqual(OEMCode.adl14.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adl14.isRDMSupported, true)

        // OemAdl2 (0x13C7)
        XCTAssertEqual(OEMCode.adl2, 0x13C7)
        XCTAssertEqual(OEMCode.adl2.description, "OemAdl2")
        XCTAssertEqual(OEMCode.adl2.mnemonic, "OemAdl2")
        XCTAssertEqual(OEMCode.adl2.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl2.product, "ADL DMX NetGate +")
        XCTAssertEqual(OEMCode.adl2.dmxIn, 4)
        XCTAssertEqual(OEMCode.adl2.dmxOut, 4)
        XCTAssertEqual(OEMCode.adl2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adl2.isRDMSupported, false)

        // OemAdl3 (0x13C8)
        XCTAssertEqual(OEMCode.adl3, 0x13C8)
        XCTAssertEqual(OEMCode.adl3.description, "OemAdl3")
        XCTAssertEqual(OEMCode.adl3.mnemonic, "OemAdl3")
        XCTAssertEqual(OEMCode.adl3.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl3.product, "ADL DMX NetGate RDM")
        XCTAssertEqual(OEMCode.adl3.dmxIn, 0)
        XCTAssertEqual(OEMCode.adl3.dmxOut, 4)
        XCTAssertEqual(OEMCode.adl3.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adl3.isRDMSupported, true)

        // OemAdl4 (0x13C9)
        XCTAssertEqual(OEMCode.adl4, 0x13C9)
        XCTAssertEqual(OEMCode.adl4.description, "OemAdl4")
        XCTAssertEqual(OEMCode.adl4.mnemonic, "OemAdl4")
        XCTAssertEqual(OEMCode.adl4.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl4.product, "ADL DMX NetGate+ RDM")
        XCTAssertEqual(OEMCode.adl4.dmxIn, 4)
        XCTAssertEqual(OEMCode.adl4.dmxOut, 4)
        XCTAssertEqual(OEMCode.adl4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adl4.isRDMSupported, true)

        // OemAdl5 (0x13CA)
        XCTAssertEqual(OEMCode.adl5, 0x13CA)
        XCTAssertEqual(OEMCode.adl5.description, "OemAdl5")
        XCTAssertEqual(OEMCode.adl5.mnemonic, "OemAdl5")
        XCTAssertEqual(OEMCode.adl5.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl5.product, "ADL DMX NetGate DIN")
        XCTAssertEqual(OEMCode.adl5.dmxIn, 2)
        XCTAssertEqual(OEMCode.adl5.dmxOut, 2)
        XCTAssertEqual(OEMCode.adl5.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adl5.isRDMSupported, true)

        // OemAdl6 (0x13CB)
        XCTAssertEqual(OEMCode.adl6, 0x13CB)
        XCTAssertEqual(OEMCode.adl6.description, "OemAdl6")
        XCTAssertEqual(OEMCode.adl6.mnemonic, "OemAdl6")
        XCTAssertEqual(OEMCode.adl6.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl6.product, "ADL DMX NetGate ALARM")
        XCTAssertEqual(OEMCode.adl6.dmxIn, 0)
        XCTAssertEqual(OEMCode.adl6.dmxOut, 2)
        XCTAssertEqual(OEMCode.adl6.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.adl6.isRDMSupported, true)

        // OemAdl7 (0x13CC)
        XCTAssertEqual(OEMCode.adl7, 0x13CC)
        XCTAssertEqual(OEMCode.adl7.description, "OemAdl7")
        XCTAssertEqual(OEMCode.adl7.mnemonic, "OemAdl7")
        XCTAssertEqual(OEMCode.adl7.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl7.product, "ADL DC PU-24")
        XCTAssertEqual(OEMCode.adl7.dmxIn, 1)
        XCTAssertEqual(OEMCode.adl7.dmxOut, 1)
        XCTAssertEqual(OEMCode.adl7.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adl7.isRDMSupported, false)

        // OemAdl8 (0x13CD)
        XCTAssertEqual(OEMCode.adl8, 0x13CD)
        XCTAssertEqual(OEMCode.adl8.description, "OemAdl8")
        XCTAssertEqual(OEMCode.adl8.mnemonic, "OemAdl8")
        XCTAssertEqual(OEMCode.adl8.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl8.product, "ADL DC PU-24C")
        XCTAssertEqual(OEMCode.adl8.dmxIn, 1)
        XCTAssertEqual(OEMCode.adl8.dmxOut, 1)
        XCTAssertEqual(OEMCode.adl8.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adl8.isRDMSupported, false)

        // OemAdl9 (0x13CE)
        XCTAssertEqual(OEMCode.adl9, 0x13CE)
        XCTAssertEqual(OEMCode.adl9.description, "OemAdl9")
        XCTAssertEqual(OEMCode.adl9.mnemonic, "OemAdl9")
        XCTAssertEqual(OEMCode.adl9.manufacturer, "ADL Electronics Ltd")
        XCTAssertEqual(OEMCode.adl9.product, "ADL DC PU-6")
        XCTAssertEqual(OEMCode.adl9.dmxIn, 0)
        XCTAssertEqual(OEMCode.adl9.dmxOut, 0)
        XCTAssertEqual(OEMCode.adl9.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adl9.isRDMSupported, false)

        // OemAdsHyperionHoop1 (0x28B1)
        XCTAssertEqual(OEMCode.adsHyperionHoop1, 0x28B1)
        XCTAssertEqual(OEMCode.adsHyperionHoop1.description, "OemAdsHyperionHoop1")
        XCTAssertEqual(OEMCode.adsHyperionHoop1.mnemonic, "OemAdsHyperionHoop1")
        XCTAssertEqual(OEMCode.adsHyperionHoop1.manufacturer, "Argent Data Systems, Inc.")
        XCTAssertEqual(OEMCode.adsHyperionHoop1.product, "Hyperion Hoop")
        XCTAssertEqual(OEMCode.adsHyperionHoop1.dmxIn, 32)
        XCTAssertEqual(OEMCode.adsHyperionHoop1.dmxOut, 0)
        XCTAssertEqual(OEMCode.adsHyperionHoop1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.adsHyperionHoop1.isRDMSupported, false)

        // OemAdvP04 (0x10A1)
        XCTAssertEqual(OEMCode.advP04, 0x10A1)
        XCTAssertEqual(OEMCode.advP04.description, "OemAdvP04")
        XCTAssertEqual(OEMCode.advP04.mnemonic, "OemAdvP04")
        XCTAssertEqual(OEMCode.advP04.manufacturer, "Advatek Lighting")
        XCTAssertEqual(OEMCode.advP04.product, "PixLite 4")
        XCTAssertEqual(OEMCode.advP04.dmxIn, 0)
        XCTAssertEqual(OEMCode.advP04.dmxOut, 4)
        XCTAssertEqual(OEMCode.advP04.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.advP04.isRDMSupported, false)

        // OemAdvP16 (0x10A0)
        XCTAssertEqual(OEMCode.advP16, 0x10A0)
        XCTAssertEqual(OEMCode.advP16.description, "OemAdvP16")
        XCTAssertEqual(OEMCode.advP16.mnemonic, "OemAdvP16")
        XCTAssertEqual(OEMCode.advP16.manufacturer, "Advatek Lighting")
        XCTAssertEqual(OEMCode.advP16.product, "PixLite 16")
        XCTAssertEqual(OEMCode.advP16.dmxIn, 0)
        XCTAssertEqual(OEMCode.advP16.dmxOut, 4)
        XCTAssertEqual(OEMCode.advP16.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.advP16.isRDMSupported, false)

        // OemAinDigiNet1 (0xB80)
        XCTAssertEqual(OEMCode.ainDigiNet1, 0xB80)
        XCTAssertEqual(OEMCode.ainDigiNet1.description, "OemAinDigiNet1")
        XCTAssertEqual(OEMCode.ainDigiNet1.mnemonic, "OemAinDigiNet1")
        XCTAssertEqual(OEMCode.ainDigiNet1.manufacturer, "Company NA")
        XCTAssertEqual(OEMCode.ainDigiNet1.product, "Digi Network")
        XCTAssertEqual(OEMCode.ainDigiNet1.dmxIn, 4)
        XCTAssertEqual(OEMCode.ainDigiNet1.dmxOut, 4)
        XCTAssertEqual(OEMCode.ainDigiNet1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ainDigiNet1.isRDMSupported, true)

        // OemAinDigiNet2 (0xB82)
        XCTAssertEqual(OEMCode.ainDigiNet2, 0xB82)
        XCTAssertEqual(OEMCode.ainDigiNet2.description, "OemAinDigiNet2")
        XCTAssertEqual(OEMCode.ainDigiNet2.mnemonic, "OemAinDigiNet2")
        XCTAssertEqual(OEMCode.ainDigiNet2.manufacturer, "Company NA")
        XCTAssertEqual(OEMCode.ainDigiNet2.product, "DigiNet 416")
        XCTAssertEqual(OEMCode.ainDigiNet2.dmxIn, 0)
        XCTAssertEqual(OEMCode.ainDigiNet2.dmxOut, 4)
        XCTAssertEqual(OEMCode.ainDigiNet2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ainDigiNet2.isRDMSupported, false)

        // OemAinMozPsu4 (0xB81)
        XCTAssertEqual(OEMCode.ainMozPsu4, 0xB81)
        XCTAssertEqual(OEMCode.ainMozPsu4.description, "OemAinMozPsu4")
        XCTAssertEqual(OEMCode.ainMozPsu4.mnemonic, "OemAinMozPsu4")
        XCTAssertEqual(OEMCode.ainMozPsu4.manufacturer, "Company NA")
        XCTAssertEqual(OEMCode.ainMozPsu4.product, "Mozart PSU 4")
        XCTAssertEqual(OEMCode.ainMozPsu4.dmxIn, 0)
        XCTAssertEqual(OEMCode.ainMozPsu4.dmxOut, 4)
        XCTAssertEqual(OEMCode.ainMozPsu4.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ainMozPsu4.isRDMSupported, false)

        // OemAkLightDmx41 (0x28A1)
        XCTAssertEqual(OEMCode.akLightDmx41, 0x28A1)
        XCTAssertEqual(OEMCode.akLightDmx41.description, "OemAkLightDmx41")
        XCTAssertEqual(OEMCode.akLightDmx41.mnemonic, "OemAkLightDmx41")
        XCTAssertEqual(OEMCode.akLightDmx41.manufacturer, "AK-LIGHT")
        XCTAssertEqual(OEMCode.akLightDmx41.product, "DMX-4")
        XCTAssertEqual(OEMCode.akLightDmx41.dmxIn, 4)
        XCTAssertEqual(OEMCode.akLightDmx41.dmxOut, 4)
        XCTAssertEqual(OEMCode.akLightDmx41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.akLightDmx41.isRDMSupported, false)

        // OemAl5000 (0x7)
        XCTAssertEqual(OEMCode.al5000, 0x7)
        XCTAssertEqual(OEMCode.al5000.description, "OemAl5000")
        XCTAssertEqual(OEMCode.al5000.mnemonic, "OemAl5000")
        XCTAssertEqual(OEMCode.al5000.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.al5000.product, "Art-Net II Processor")
        XCTAssertEqual(OEMCode.al5000.dmxIn, 0)
        XCTAssertEqual(OEMCode.al5000.dmxOut, 2)
        XCTAssertEqual(OEMCode.al5000.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.al5000.isRDMSupported, false)

        // OemAL5001 (0x2000)
        XCTAssertEqual(OEMCode.aL5001, 0x2000)
        XCTAssertEqual(OEMCode.aL5001.description, "OemAL5001")
        XCTAssertEqual(OEMCode.aL5001.mnemonic, "OemAL5001")
        XCTAssertEqual(OEMCode.aL5001.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aL5001.product, "AL5001")
        XCTAssertEqual(OEMCode.aL5001.dmxIn, 0)
        XCTAssertEqual(OEMCode.aL5001.dmxOut, 2)
        XCTAssertEqual(OEMCode.aL5001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aL5001.isRDMSupported, true)

        // OemAL5002 (0x2050)
        XCTAssertEqual(OEMCode.aL5002, 0x2050)
        XCTAssertEqual(OEMCode.aL5002.description, "OemAL5002")
        XCTAssertEqual(OEMCode.aL5002.mnemonic, "OemAL5002")
        XCTAssertEqual(OEMCode.aL5002.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aL5002.product, "AL5002")
        XCTAssertEqual(OEMCode.aL5002.dmxIn, 0)
        XCTAssertEqual(OEMCode.aL5002.dmxOut, 2)
        XCTAssertEqual(OEMCode.aL5002.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aL5002.isRDMSupported, true)

        // OemApEniEni110 (0x28AE)
        XCTAssertEqual(OEMCode.apEniEni110, 0x28AE)
        XCTAssertEqual(OEMCode.apEniEni110.description, "OemApEniEni110")
        XCTAssertEqual(OEMCode.apEniEni110.mnemonic, "OemApEniEni110")
        XCTAssertEqual(OEMCode.apEniEni110.manufacturer, "Apollo Security")
        XCTAssertEqual(OEMCode.apEniEni110.product, "ENI-110")
        XCTAssertEqual(OEMCode.apEniEni110.dmxIn, 0)
        XCTAssertEqual(OEMCode.apEniEni110.dmxOut, 1)
        XCTAssertEqual(OEMCode.apEniEni110.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.apEniEni110.isRDMSupported, false)

        // OemArcCvd1 (0x13B0)
        XCTAssertEqual(OEMCode.arcCvd1, 0x13B0)
        XCTAssertEqual(OEMCode.arcCvd1.description, "OemArcCvd1")
        XCTAssertEqual(OEMCode.arcCvd1.mnemonic, "OemArcCvd1")
        XCTAssertEqual(OEMCode.arcCvd1.manufacturer, "ARC Solid-State Lighting Corporation")
        XCTAssertEqual(OEMCode.arcCvd1.product, "Constant Voltage Driver")
        XCTAssertEqual(OEMCode.arcCvd1.dmxIn, 1)
        XCTAssertEqual(OEMCode.arcCvd1.dmxOut, 0)
        XCTAssertEqual(OEMCode.arcCvd1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.arcCvd1.isRDMSupported, true)

        // OemArcLf150f1 (0x13B2)
        XCTAssertEqual(OEMCode.arcLf150f1, 0x13B2)
        XCTAssertEqual(OEMCode.arcLf150f1.description, "OemArcLf150f1")
        XCTAssertEqual(OEMCode.arcLf150f1.mnemonic, "OemArcLf150f1")
        XCTAssertEqual(OEMCode.arcLf150f1.manufacturer, "ARC Solid-State Lighting Corporation")
        XCTAssertEqual(OEMCode.arcLf150f1.product, "LF150 Flood Light")
        XCTAssertEqual(OEMCode.arcLf150f1.dmxIn, 1)
        XCTAssertEqual(OEMCode.arcLf150f1.dmxOut, 0)
        XCTAssertEqual(OEMCode.arcLf150f1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.arcLf150f1.isRDMSupported, true)

        // OemArcLf75f1 (0x13B1)
        XCTAssertEqual(OEMCode.arcLf75f1, 0x13B1)
        XCTAssertEqual(OEMCode.arcLf75f1.description, "OemArcLf75f1")
        XCTAssertEqual(OEMCode.arcLf75f1.mnemonic, "OemArcLf75f1")
        XCTAssertEqual(OEMCode.arcLf75f1.manufacturer, "ARC Solid-State Lighting Corporation")
        XCTAssertEqual(OEMCode.arcLf75f1.product, "LF75 Flood Light")
        XCTAssertEqual(OEMCode.arcLf75f1.dmxIn, 1)
        XCTAssertEqual(OEMCode.arcLf75f1.dmxOut, 0)
        XCTAssertEqual(OEMCode.arcLf75f1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.arcLf75f1.isRDMSupported, true)

        // OemArcSslcDc1 (0x1280)
        XCTAssertEqual(OEMCode.arcSslcDc1, 0x1280)
        XCTAssertEqual(OEMCode.arcSslcDc1.description, "OemArcSslcDc1")
        XCTAssertEqual(OEMCode.arcSslcDc1.mnemonic, "OemArcSslcDc1")
        XCTAssertEqual(OEMCode.arcSslcDc1.manufacturer, "ARC Solid-State Lighting Corporation")
        XCTAssertEqual(OEMCode.arcSslcDc1.product, "DMX Converter")
        XCTAssertEqual(OEMCode.arcSslcDc1.dmxIn, 0)
        XCTAssertEqual(OEMCode.arcSslcDc1.dmxOut, 4)
        XCTAssertEqual(OEMCode.arcSslcDc1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.arcSslcDc1.isRDMSupported, true)

        // OemArkaosVjd (0x380)
        XCTAssertEqual(OEMCode.arkaosVjd, 0x380)
        XCTAssertEqual(OEMCode.arkaosVjd.description, "OemArkaosVjd")
        XCTAssertEqual(OEMCode.arkaosVjd.mnemonic, "OemArkaosVjd")
        XCTAssertEqual(OEMCode.arkaosVjd.manufacturer, "Arkaos")
        XCTAssertEqual(OEMCode.arkaosVjd.product, "V J DMX")
        XCTAssertEqual(OEMCode.arkaosVjd.dmxIn, 1)
        XCTAssertEqual(OEMCode.arkaosVjd.dmxOut, 0)
        XCTAssertEqual(OEMCode.arkaosVjd.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.arkaosVjd.isRDMSupported, false)

        // OemArri1 (0x1360)
        XCTAssertEqual(OEMCode.arri1, 0x1360)
        XCTAssertEqual(OEMCode.arri1.description, "OemArri1")
        XCTAssertEqual(OEMCode.arri1.mnemonic, "OemArri1")
        XCTAssertEqual(OEMCode.arri1.manufacturer, "Arnold & Richter Cine Technik GmbH")
        XCTAssertEqual(OEMCode.arri1.product, "ARRI")
        XCTAssertEqual(OEMCode.arri1.dmxIn, 0)
        XCTAssertEqual(OEMCode.arri1.dmxOut, 1)
        XCTAssertEqual(OEMCode.arri1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.arri1.isRDMSupported, true)

        // OemArtAL5003 (0x2250)
        XCTAssertEqual(OEMCode.artAL5003, 0x2250)
        XCTAssertEqual(OEMCode.artAL5003.description, "OemArtAL5003")
        XCTAssertEqual(OEMCode.artAL5003.mnemonic, "OemArtAL5003")
        XCTAssertEqual(OEMCode.artAL5003.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artAL5003.product, "AL5003")
        XCTAssertEqual(OEMCode.artAL5003.dmxIn, 4)
        XCTAssertEqual(OEMCode.artAL5003.dmxOut, 4)
        XCTAssertEqual(OEMCode.artAL5003.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artAL5003.isRDMSupported, true)

        // OemArtArtLynxRj45 (0x226E)
        XCTAssertEqual(OEMCode.artArtLynxRj45, 0x226E)
        XCTAssertEqual(OEMCode.artArtLynxRj45.description, "OemArtArtLynxRj45")
        XCTAssertEqual(OEMCode.artArtLynxRj45.mnemonic, "OemArtArtLynxRj45")
        XCTAssertEqual(OEMCode.artArtLynxRj45.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artArtLynxRj45.product, "artLynx rj45")
        XCTAssertEqual(OEMCode.artArtLynxRj45.dmxIn, 0)
        XCTAssertEqual(OEMCode.artArtLynxRj45.dmxOut, 4)
        XCTAssertEqual(OEMCode.artArtLynxRj45.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artArtLynxRj45.isRDMSupported, true)

        // OemArtBoot (0x2110)
        XCTAssertEqual(OEMCode.artBoot, 0x2110)
        XCTAssertEqual(OEMCode.artBoot.description, "OemArtBoot")
        XCTAssertEqual(OEMCode.artBoot.mnemonic, "OemArtBoot")
        XCTAssertEqual(OEMCode.artBoot.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artBoot.product, "Art-Boot")
        XCTAssertEqual(OEMCode.artBoot.dmxIn, 0)
        XCTAssertEqual(OEMCode.artBoot.dmxOut, 0)
        XCTAssertEqual(OEMCode.artBoot.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artBoot.isRDMSupported, true)

        // OemArtColourTramp1 (0x226B)
        XCTAssertEqual(OEMCode.artColourTramp1, 0x226B)
        XCTAssertEqual(OEMCode.artColourTramp1.description, "OemArtColourTramp1")
        XCTAssertEqual(OEMCode.artColourTramp1.mnemonic, "OemArtColourTramp1")
        XCTAssertEqual(OEMCode.artColourTramp1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artColourTramp1.product, "Colour-Tramp (Input)")
        XCTAssertEqual(OEMCode.artColourTramp1.dmxIn, 1)
        XCTAssertEqual(OEMCode.artColourTramp1.dmxOut, 0)
        XCTAssertEqual(OEMCode.artColourTramp1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artColourTramp1.isRDMSupported, false)

        // OemArtDaliGateDuo (0x2259)
        XCTAssertEqual(OEMCode.artDaliGateDuo, 0x2259)
        XCTAssertEqual(OEMCode.artDaliGateDuo.description, "OemArtDaliGateDuo")
        XCTAssertEqual(OEMCode.artDaliGateDuo.mnemonic, "OemArtDaliGateDuo")
        XCTAssertEqual(OEMCode.artDaliGateDuo.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artDaliGateDuo.product, "daliGate duo")
        XCTAssertEqual(OEMCode.artDaliGateDuo.dmxIn, 0)
        XCTAssertEqual(OEMCode.artDaliGateDuo.dmxOut, 2)
        XCTAssertEqual(OEMCode.artDaliGateDuo.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artDaliGateDuo.isRDMSupported, true)

        // OemArtDaliGateQuad (0x225A)
        XCTAssertEqual(OEMCode.artDaliGateQuad, 0x225A)
        XCTAssertEqual(OEMCode.artDaliGateQuad.description, "OemArtDaliGateQuad")
        XCTAssertEqual(OEMCode.artDaliGateQuad.mnemonic, "OemArtDaliGateQuad")
        XCTAssertEqual(OEMCode.artDaliGateQuad.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artDaliGateQuad.product, "daliGate quad")
        XCTAssertEqual(OEMCode.artDaliGateQuad.dmxIn, 0)
        XCTAssertEqual(OEMCode.artDaliGateQuad.dmxOut, 4)
        XCTAssertEqual(OEMCode.artDaliGateQuad.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artDaliGateQuad.isRDMSupported, true)

        // OemArtDaliGateUno (0x2258)
        XCTAssertEqual(OEMCode.artDaliGateUno, 0x2258)
        XCTAssertEqual(OEMCode.artDaliGateUno.description, "OemArtDaliGateUno")
        XCTAssertEqual(OEMCode.artDaliGateUno.mnemonic, "OemArtDaliGateUno")
        XCTAssertEqual(OEMCode.artDaliGateUno.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artDaliGateUno.product, "daliGate uno")
        XCTAssertEqual(OEMCode.artDaliGateUno.dmxIn, 0)
        XCTAssertEqual(OEMCode.artDaliGateUno.dmxOut, 1)
        XCTAssertEqual(OEMCode.artDaliGateUno.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artDaliGateUno.isRDMSupported, true)

        // OemArtDataLynx2 (0x2268)
        XCTAssertEqual(OEMCode.artDataLynx2, 0x2268)
        XCTAssertEqual(OEMCode.artDataLynx2.description, "OemArtDataLynx2")
        XCTAssertEqual(OEMCode.artDataLynx2.mnemonic, "OemArtDataLynx2")
        XCTAssertEqual(OEMCode.artDataLynx2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artDataLynx2.product, "dataLynx II")
        XCTAssertEqual(OEMCode.artDataLynx2.dmxIn, 0)
        XCTAssertEqual(OEMCode.artDataLynx2.dmxOut, 4)
        XCTAssertEqual(OEMCode.artDataLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artDataLynx2.isRDMSupported, true)

        // OemArtDemux (0x20D0)
        XCTAssertEqual(OEMCode.artDemux, 0x20D0)
        XCTAssertEqual(OEMCode.artDemux.description, "OemArtDemux")
        XCTAssertEqual(OEMCode.artDemux.mnemonic, "OemArtDemux")
        XCTAssertEqual(OEMCode.artDemux.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artDemux.product, "Art-Demux")
        XCTAssertEqual(OEMCode.artDemux.dmxIn, 0)
        XCTAssertEqual(OEMCode.artDemux.dmxOut, 0)
        XCTAssertEqual(OEMCode.artDemux.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artDemux.isRDMSupported, false)

        // OemArtDiamond (0x2220)
        XCTAssertEqual(OEMCode.artDiamond, 0x2220)
        XCTAssertEqual(OEMCode.artDiamond.description, "OemArtDiamond")
        XCTAssertEqual(OEMCode.artDiamond.mnemonic, "OemArtDiamond")
        XCTAssertEqual(OEMCode.artDiamond.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artDiamond.product, "Diamond")
        XCTAssertEqual(OEMCode.artDiamond.dmxIn, 0)
        XCTAssertEqual(OEMCode.artDiamond.dmxOut, 0)
        XCTAssertEqual(OEMCode.artDiamond.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artDiamond.isRDMSupported, true)

        // OemArtDmxToolBox (0x226C)
        XCTAssertEqual(OEMCode.artDmxToolBox, 0x226C)
        XCTAssertEqual(OEMCode.artDmxToolBox.description, "OemArtDmxToolBox")
        XCTAssertEqual(OEMCode.artDmxToolBox.mnemonic, "OemArtDmxToolBox")
        XCTAssertEqual(OEMCode.artDmxToolBox.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artDmxToolBox.product, "DmxToolBox (Input)")
        XCTAssertEqual(OEMCode.artDmxToolBox.dmxIn, 1)
        XCTAssertEqual(OEMCode.artDmxToolBox.dmxOut, 0)
        XCTAssertEqual(OEMCode.artDmxToolBox.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artDmxToolBox.isRDMSupported, false)

        // OemArtDmxWorkshop1 (0x2269)
        XCTAssertEqual(OEMCode.artDmxWorkshop1, 0x2269)
        XCTAssertEqual(OEMCode.artDmxWorkshop1.description, "OemArtDmxWorkshop1")
        XCTAssertEqual(OEMCode.artDmxWorkshop1.mnemonic, "OemArtDmxWorkshop1")
        XCTAssertEqual(OEMCode.artDmxWorkshop1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artDmxWorkshop1.product, "DMX-Workshop (Input)")
        XCTAssertEqual(OEMCode.artDmxWorkshop1.dmxIn, 0)
        XCTAssertEqual(OEMCode.artDmxWorkshop1.dmxOut, 4)
        XCTAssertEqual(OEMCode.artDmxWorkshop1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artDmxWorkshop1.isRDMSupported, true)

        // OemArtDownLynxQuad (0x2270)
        XCTAssertEqual(OEMCode.artDownLynxQuad, 0x2270)
        XCTAssertEqual(OEMCode.artDownLynxQuad.description, "OemArtDownLynxQuad")
        XCTAssertEqual(OEMCode.artDownLynxQuad.mnemonic, "OemArtDownLynxQuad")
        XCTAssertEqual(OEMCode.artDownLynxQuad.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artDownLynxQuad.product, "downLynx quad")
        XCTAssertEqual(OEMCode.artDownLynxQuad.dmxIn, 0)
        XCTAssertEqual(OEMCode.artDownLynxQuad.dmxOut, 4)
        XCTAssertEqual(OEMCode.artDownLynxQuad.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artDownLynxQuad.isRDMSupported, true)

        // OemArtDvNet (0x2240)
        XCTAssertEqual(OEMCode.artDvNet, 0x2240)
        XCTAssertEqual(OEMCode.artDvNet.description, "OemArtDvNet")
        XCTAssertEqual(OEMCode.artDvNet.mnemonic, "OemArtDvNet")
        XCTAssertEqual(OEMCode.artDvNet.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artDvNet.product, "dVnet")
        XCTAssertEqual(OEMCode.artDvNet.dmxIn, 4)
        XCTAssertEqual(OEMCode.artDvNet.dmxOut, 4)
        XCTAssertEqual(OEMCode.artDvNet.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artDvNet.isRDMSupported, true)

        // OemArtE1 (0x2170)
        XCTAssertEqual(OEMCode.artE1, 0x2170)
        XCTAssertEqual(OEMCode.artE1.description, "OemArtE1")
        XCTAssertEqual(OEMCode.artE1.mnemonic, "OemArtE1")
        XCTAssertEqual(OEMCode.artE1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artE1.product, "Multichrome E1")
        XCTAssertEqual(OEMCode.artE1.dmxIn, 0)
        XCTAssertEqual(OEMCode.artE1.dmxOut, 2)
        XCTAssertEqual(OEMCode.artE1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artE1.isRDMSupported, true)

        // OemArtE2 (0x2150)
        XCTAssertEqual(OEMCode.artE2, 0x2150)
        XCTAssertEqual(OEMCode.artE2.description, "OemArtE2")
        XCTAssertEqual(OEMCode.artE2.mnemonic, "OemArtE2")
        XCTAssertEqual(OEMCode.artE2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artE2.product, "Multichrome E2")
        XCTAssertEqual(OEMCode.artE2.dmxIn, 0)
        XCTAssertEqual(OEMCode.artE2.dmxOut, 2)
        XCTAssertEqual(OEMCode.artE2.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artE2.isRDMSupported, true)

        // OemArtFourPlay (0x8003)
        XCTAssertEqual(OEMCode.artFourPlay, 0x8003)
        XCTAssertEqual(OEMCode.artFourPlay.description, "OemArtFourPlay")
        XCTAssertEqual(OEMCode.artFourPlay.mnemonic, "OemArtFourPlay")
        XCTAssertEqual(OEMCode.artFourPlay.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artFourPlay.product, "Four-Play")
        XCTAssertEqual(OEMCode.artFourPlay.dmxIn, 4)
        XCTAssertEqual(OEMCode.artFourPlay.dmxOut, 4)
        XCTAssertEqual(OEMCode.artFourPlay.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artFourPlay.isRDMSupported, false)

        // OemArtGraphite (0x2223)
        XCTAssertEqual(OEMCode.artGraphite, 0x2223)
        XCTAssertEqual(OEMCode.artGraphite.description, "OemArtGraphite")
        XCTAssertEqual(OEMCode.artGraphite.mnemonic, "OemArtGraphite")
        XCTAssertEqual(OEMCode.artGraphite.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artGraphite.product, "Graphite")
        XCTAssertEqual(OEMCode.artGraphite.dmxIn, 0)
        XCTAssertEqual(OEMCode.artGraphite.dmxOut, 0)
        XCTAssertEqual(OEMCode.artGraphite.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artGraphite.isRDMSupported, true)

        // OemArtLightJuiceCc3 (0x2262)
        XCTAssertEqual(OEMCode.artLightJuiceCc3, 0x2262)
        XCTAssertEqual(OEMCode.artLightJuiceCc3.description, "OemArtLightJuiceCc3")
        XCTAssertEqual(OEMCode.artLightJuiceCc3.mnemonic, "OemArtLightJuiceCc3")
        XCTAssertEqual(OEMCode.artLightJuiceCc3.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artLightJuiceCc3.product, "lightJuice CC2")
        XCTAssertEqual(OEMCode.artLightJuiceCc3.dmxIn, 0)
        XCTAssertEqual(OEMCode.artLightJuiceCc3.dmxOut, 1)
        XCTAssertEqual(OEMCode.artLightJuiceCc3.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artLightJuiceCc3.isRDMSupported, true)

        // OemArtLightJuiceCv4 (0x2260)
        XCTAssertEqual(OEMCode.artLightJuiceCv4, 0x2260)
        XCTAssertEqual(OEMCode.artLightJuiceCv4.description, "OemArtLightJuiceCv4")
        XCTAssertEqual(OEMCode.artLightJuiceCv4.mnemonic, "OemArtLightJuiceCv4")
        XCTAssertEqual(OEMCode.artLightJuiceCv4.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artLightJuiceCv4.product, "lightJuice CV4")
        XCTAssertEqual(OEMCode.artLightJuiceCv4.dmxIn, 0)
        XCTAssertEqual(OEMCode.artLightJuiceCv4.dmxOut, 1)
        XCTAssertEqual(OEMCode.artLightJuiceCv4.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artLightJuiceCv4.isRDMSupported, true)

        // OemArtLightJuiceDc24 (0x2261)
        XCTAssertEqual(OEMCode.artLightJuiceDc24, 0x2261)
        XCTAssertEqual(OEMCode.artLightJuiceDc24.description, "OemArtLightJuiceDc24")
        XCTAssertEqual(OEMCode.artLightJuiceDc24.mnemonic, "OemArtLightJuiceDc24")
        XCTAssertEqual(OEMCode.artLightJuiceDc24.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artLightJuiceDc24.product, "lightJuice DC24")
        XCTAssertEqual(OEMCode.artLightJuiceDc24.dmxIn, 0)
        XCTAssertEqual(OEMCode.artLightJuiceDc24.dmxOut, 1)
        XCTAssertEqual(OEMCode.artLightJuiceDc24.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artLightJuiceDc24.isRDMSupported, true)

        // OemArtLightJuiceDl1 (0x2265)
        XCTAssertEqual(OEMCode.artLightJuiceDl1, 0x2265)
        XCTAssertEqual(OEMCode.artLightJuiceDl1.description, "OemArtLightJuiceDl1")
        XCTAssertEqual(OEMCode.artLightJuiceDl1.mnemonic, "OemArtLightJuiceDl1")
        XCTAssertEqual(OEMCode.artLightJuiceDl1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artLightJuiceDl1.product, "lightJuice DALI")
        XCTAssertEqual(OEMCode.artLightJuiceDl1.dmxIn, 0)
        XCTAssertEqual(OEMCode.artLightJuiceDl1.dmxOut, 1)
        XCTAssertEqual(OEMCode.artLightJuiceDl1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artLightJuiceDl1.isRDMSupported, true)

        // OemArtLightJuiceDm1 (0x2266)
        XCTAssertEqual(OEMCode.artLightJuiceDm1, 0x2266)
        XCTAssertEqual(OEMCode.artLightJuiceDm1.description, "OemArtLightJuiceDm1")
        XCTAssertEqual(OEMCode.artLightJuiceDm1.mnemonic, "OemArtLightJuiceDm1")
        XCTAssertEqual(OEMCode.artLightJuiceDm1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artLightJuiceDm1.product, "lightJuice Dmx")
        XCTAssertEqual(OEMCode.artLightJuiceDm1.dmxIn, 0)
        XCTAssertEqual(OEMCode.artLightJuiceDm1.dmxOut, 1)
        XCTAssertEqual(OEMCode.artLightJuiceDm1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artLightJuiceDm1.isRDMSupported, true)

        // OemArtLightJuiceOl1 (0x2263)
        XCTAssertEqual(OEMCode.artLightJuiceOl1, 0x2263)
        XCTAssertEqual(OEMCode.artLightJuiceOl1.description, "OemArtLightJuiceOl1")
        XCTAssertEqual(OEMCode.artLightJuiceOl1.mnemonic, "OemArtLightJuiceOl1")
        XCTAssertEqual(OEMCode.artLightJuiceOl1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artLightJuiceOl1.product, "lightJuice OL1")
        XCTAssertEqual(OEMCode.artLightJuiceOl1.dmxIn, 0)
        XCTAssertEqual(OEMCode.artLightJuiceOl1.dmxOut, 1)
        XCTAssertEqual(OEMCode.artLightJuiceOl1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artLightJuiceOl1.isRDMSupported, true)

        // OemArtLightJuicePx1 (0x2264)
        XCTAssertEqual(OEMCode.artLightJuicePx1, 0x2264)
        XCTAssertEqual(OEMCode.artLightJuicePx1.description, "OemArtLightJuicePx1")
        XCTAssertEqual(OEMCode.artLightJuicePx1.mnemonic, "OemArtLightJuicePx1")
        XCTAssertEqual(OEMCode.artLightJuicePx1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artLightJuicePx1.product, "lightJuice PX1")
        XCTAssertEqual(OEMCode.artLightJuicePx1.dmxIn, 0)
        XCTAssertEqual(OEMCode.artLightJuicePx1.dmxOut, 1)
        XCTAssertEqual(OEMCode.artLightJuicePx1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artLightJuicePx1.isRDMSupported, true)

        // OemArtLynxDuo (0x2001)
        XCTAssertEqual(OEMCode.artLynxDuo, 0x2001)
        XCTAssertEqual(OEMCode.artLynxDuo.description, "OemArtLynxDuo")
        XCTAssertEqual(OEMCode.artLynxDuo.mnemonic, "OemArtLynxDuo")
        XCTAssertEqual(OEMCode.artLynxDuo.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artLynxDuo.product, "artLynx duo")
        XCTAssertEqual(OEMCode.artLynxDuo.dmxIn, 0)
        XCTAssertEqual(OEMCode.artLynxDuo.dmxOut, 2)
        XCTAssertEqual(OEMCode.artLynxDuo.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artLynxDuo.isRDMSupported, true)

        // OemArtLynxIp (0x2130)
        XCTAssertEqual(OEMCode.artLynxIp, 0x2130)
        XCTAssertEqual(OEMCode.artLynxIp.description, "OemArtLynxIp")
        XCTAssertEqual(OEMCode.artLynxIp.mnemonic, "OemArtLynxIp")
        XCTAssertEqual(OEMCode.artLynxIp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artLynxIp.product, "Art-Lynx IP")
        XCTAssertEqual(OEMCode.artLynxIp.dmxIn, 2)
        XCTAssertEqual(OEMCode.artLynxIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.artLynxIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artLynxIp.isRDMSupported, false)

        // OemArtLynxOp (0x2120)
        XCTAssertEqual(OEMCode.artLynxOp, 0x2120)
        XCTAssertEqual(OEMCode.artLynxOp.description, "OemArtLynxOp")
        XCTAssertEqual(OEMCode.artLynxOp.mnemonic, "OemArtLynxOp")
        XCTAssertEqual(OEMCode.artLynxOp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artLynxOp.product, "Art-Lynx OP")
        XCTAssertEqual(OEMCode.artLynxOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.artLynxOp.dmxOut, 2)
        XCTAssertEqual(OEMCode.artLynxOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artLynxOp.isRDMSupported, true)

        // OemArtLynxQuad1 (0x2267)
        XCTAssertEqual(OEMCode.artLynxQuad1, 0x2267)
        XCTAssertEqual(OEMCode.artLynxQuad1.description, "OemArtLynxQuad1")
        XCTAssertEqual(OEMCode.artLynxQuad1.mnemonic, "OemArtLynxQuad1")
        XCTAssertEqual(OEMCode.artLynxQuad1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artLynxQuad1.product, "artLynx quad")
        XCTAssertEqual(OEMCode.artLynxQuad1.dmxIn, 0)
        XCTAssertEqual(OEMCode.artLynxQuad1.dmxOut, 4)
        XCTAssertEqual(OEMCode.artLynxQuad1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artLynxQuad1.isRDMSupported, true)

        // OemArtMedia (0x2100)
        XCTAssertEqual(OEMCode.artMedia, 0x2100)
        XCTAssertEqual(OEMCode.artMedia.description, "OemArtMedia")
        XCTAssertEqual(OEMCode.artMedia.mnemonic, "OemArtMedia")
        XCTAssertEqual(OEMCode.artMedia.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artMedia.product, "Art-Media")
        XCTAssertEqual(OEMCode.artMedia.dmxIn, 0)
        XCTAssertEqual(OEMCode.artMedia.dmxOut, 0)
        XCTAssertEqual(OEMCode.artMedia.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artMedia.isRDMSupported, true)

        // OemArtMica (0x2225)
        XCTAssertEqual(OEMCode.artMica, 0x2225)
        XCTAssertEqual(OEMCode.artMica.description, "OemArtMica")
        XCTAssertEqual(OEMCode.artMica.mnemonic, "OemArtMica")
        XCTAssertEqual(OEMCode.artMica.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artMica.product, "Mica")
        XCTAssertEqual(OEMCode.artMica.dmxIn, 0)
        XCTAssertEqual(OEMCode.artMica.dmxOut, 0)
        XCTAssertEqual(OEMCode.artMica.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artMica.isRDMSupported, true)

        // OemArtMicroScope5 (0x2200)
        XCTAssertEqual(OEMCode.artMicroScope5, 0x2200)
        XCTAssertEqual(OEMCode.artMicroScope5.description, "OemArtMicroScope5")
        XCTAssertEqual(OEMCode.artMicroScope5.mnemonic, "OemArtMicroScope5")
        XCTAssertEqual(OEMCode.artMicroScope5.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artMicroScope5.product, "Micro-Scope 5")
        XCTAssertEqual(OEMCode.artMicroScope5.dmxIn, 0)
        XCTAssertEqual(OEMCode.artMicroScope5.dmxOut, 0)
        XCTAssertEqual(OEMCode.artMicroScope5.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artMicroScope5.isRDMSupported, true)

        // OemArtMonitorBase (0x2160)
        XCTAssertEqual(OEMCode.artMonitorBase, 0x2160)
        XCTAssertEqual(OEMCode.artMonitorBase.description, "OemArtMonitorBase")
        XCTAssertEqual(OEMCode.artMonitorBase.mnemonic, "OemArtMonitorBase")
        XCTAssertEqual(OEMCode.artMonitorBase.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artMonitorBase.product, "Art-Monitor Base")
        XCTAssertEqual(OEMCode.artMonitorBase.dmxIn, 0)
        XCTAssertEqual(OEMCode.artMonitorBase.dmxOut, 0)
        XCTAssertEqual(OEMCode.artMonitorBase.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artMonitorBase.isRDMSupported, true)

        // OemArtMultiPlay (0x2212)
        XCTAssertEqual(OEMCode.artMultiPlay, 0x2212)
        XCTAssertEqual(OEMCode.artMultiPlay.description, "OemArtMultiPlay")
        XCTAssertEqual(OEMCode.artMultiPlay.mnemonic, "OemArtMultiPlay")
        XCTAssertEqual(OEMCode.artMultiPlay.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artMultiPlay.product, "Multi-Play")
        XCTAssertEqual(OEMCode.artMultiPlay.dmxIn, 4)
        XCTAssertEqual(OEMCode.artMultiPlay.dmxOut, 4)
        XCTAssertEqual(OEMCode.artMultiPlay.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artMultiPlay.isRDMSupported, true)

        // OemArtNetLynxQuad (0x226F)
        XCTAssertEqual(OEMCode.artNetLynxQuad, 0x226F)
        XCTAssertEqual(OEMCode.artNetLynxQuad.description, "OemArtNetLynxQuad")
        XCTAssertEqual(OEMCode.artNetLynxQuad.mnemonic, "OemArtNetLynxQuad")
        XCTAssertEqual(OEMCode.artNetLynxQuad.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artNetLynxQuad.product, "netLynx quad")
        XCTAssertEqual(OEMCode.artNetLynxQuad.dmxIn, 0)
        XCTAssertEqual(OEMCode.artNetLynxQuad.dmxOut, 4)
        XCTAssertEqual(OEMCode.artNetLynxQuad.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artNetLynxQuad.isRDMSupported, true)

        // OemArtOemGateQuad (0x2272)
        XCTAssertEqual(OEMCode.artGateQuad, 0x2272)
        XCTAssertEqual(OEMCode.artGateQuad.description, "OemArtOemGateQuad")
        XCTAssertEqual(OEMCode.artGateQuad.mnemonic, "OemArtOemGateQuad")
        XCTAssertEqual(OEMCode.artGateQuad.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artGateQuad.product, "oemGate quad")
        XCTAssertEqual(OEMCode.artGateQuad.dmxIn, 0)
        XCTAssertEqual(OEMCode.artGateQuad.dmxOut, 4)
        XCTAssertEqual(OEMCode.artGateQuad.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artGateQuad.isRDMSupported, true)

        // OemArtOpal (0x2224)
        XCTAssertEqual(OEMCode.artOpal, 0x2224)
        XCTAssertEqual(OEMCode.artOpal.description, "OemArtOpal")
        XCTAssertEqual(OEMCode.artOpal.mnemonic, "OemArtOpal")
        XCTAssertEqual(OEMCode.artOpal.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artOpal.product, "Opal")
        XCTAssertEqual(OEMCode.artOpal.dmxIn, 0)
        XCTAssertEqual(OEMCode.artOpal.dmxOut, 0)
        XCTAssertEqual(OEMCode.artOpal.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artOpal.isRDMSupported, true)

        // OemArtPipe (0x20F0)
        XCTAssertEqual(OEMCode.artPipe, 0x20F0)
        XCTAssertEqual(OEMCode.artPipe.description, "OemArtPipe")
        XCTAssertEqual(OEMCode.artPipe.mnemonic, "OemArtPipe")
        XCTAssertEqual(OEMCode.artPipe.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artPipe.product, "Art-Pipe")
        XCTAssertEqual(OEMCode.artPipe.dmxIn, 0)
        XCTAssertEqual(OEMCode.artPipe.dmxOut, 1)
        XCTAssertEqual(OEMCode.artPipe.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artPipe.isRDMSupported, true)

        // OemArtPixiLynx4x4 (0x226D)
        XCTAssertEqual(OEMCode.artPixiLynx4x4, 0x226D)
        XCTAssertEqual(OEMCode.artPixiLynx4x4.description, "OemArtPixiLynx4x4")
        XCTAssertEqual(OEMCode.artPixiLynx4x4.mnemonic, "OemArtPixiLynx4x4")
        XCTAssertEqual(OEMCode.artPixiLynx4x4.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artPixiLynx4x4.product, "pixiLynx 4x4")
        XCTAssertEqual(OEMCode.artPixiLynx4x4.dmxIn, 0)
        XCTAssertEqual(OEMCode.artPixiLynx4x4.dmxOut, 16)
        XCTAssertEqual(OEMCode.artPixiLynx4x4.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artPixiLynx4x4.isRDMSupported, true)

        // OemArtPlay (0x20B0)
        XCTAssertEqual(OEMCode.artPlay, 0x20B0)
        XCTAssertEqual(OEMCode.artPlay.description, "OemArtPlay")
        XCTAssertEqual(OEMCode.artPlay.mnemonic, "OemArtPlay")
        XCTAssertEqual(OEMCode.artPlay.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artPlay.product, "Art-Play")
        XCTAssertEqual(OEMCode.artPlay.dmxIn, 4)
        XCTAssertEqual(OEMCode.artPlay.dmxOut, 4)
        XCTAssertEqual(OEMCode.artPlay.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artPlay.isRDMSupported, true)

        // OemArtQuartz (0x2221)
        XCTAssertEqual(OEMCode.artQuartz, 0x2221)
        XCTAssertEqual(OEMCode.artQuartz.description, "OemArtQuartz")
        XCTAssertEqual(OEMCode.artQuartz.mnemonic, "OemArtQuartz")
        XCTAssertEqual(OEMCode.artQuartz.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artQuartz.product, "Quartz")
        XCTAssertEqual(OEMCode.artQuartz.dmxIn, 0)
        XCTAssertEqual(OEMCode.artQuartz.dmxOut, 0)
        XCTAssertEqual(OEMCode.artQuartz.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artQuartz.isRDMSupported, true)

        // OemArtRackLynxOcto (0x2271)
        XCTAssertEqual(OEMCode.artRackLynxOcto, 0x2271)
        XCTAssertEqual(OEMCode.artRackLynxOcto.description, "OemArtRackLynxOcto")
        XCTAssertEqual(OEMCode.artRackLynxOcto.mnemonic, "OemArtRackLynxOcto")
        XCTAssertEqual(OEMCode.artRackLynxOcto.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artRackLynxOcto.product, "rackLynxOcto")
        XCTAssertEqual(OEMCode.artRackLynxOcto.dmxIn, 0)
        XCTAssertEqual(OEMCode.artRackLynxOcto.dmxOut, 8)
        XCTAssertEqual(OEMCode.artRackLynxOcto.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artRackLynxOcto.isRDMSupported, true)

        // OemArtRelay (0x20E0)
        XCTAssertEqual(OEMCode.artRelay, 0x20E0)
        XCTAssertEqual(OEMCode.artRelay.description, "OemArtRelay")
        XCTAssertEqual(OEMCode.artRelay.mnemonic, "OemArtRelay")
        XCTAssertEqual(OEMCode.artRelay.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artRelay.product, "Art-Relay")
        XCTAssertEqual(OEMCode.artRelay.dmxIn, 0)
        XCTAssertEqual(OEMCode.artRelay.dmxOut, 1)
        XCTAssertEqual(OEMCode.artRelay.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artRelay.isRDMSupported, true)

        // OemArtSense (0x2230)
        XCTAssertEqual(OEMCode.artSense, 0x2230)
        XCTAssertEqual(OEMCode.artSense.description, "OemArtSense")
        XCTAssertEqual(OEMCode.artSense.mnemonic, "OemArtSense")
        XCTAssertEqual(OEMCode.artSense.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artSense.product, "eSense")
        XCTAssertEqual(OEMCode.artSense.dmxIn, 0)
        XCTAssertEqual(OEMCode.artSense.dmxOut, 0)
        XCTAssertEqual(OEMCode.artSense.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artSense.isRDMSupported, true)

        // OemArtSenseXt (0x2231)
        XCTAssertEqual(OEMCode.artSenseXt, 0x2231)
        XCTAssertEqual(OEMCode.artSenseXt.description, "OemArtSenseXt")
        XCTAssertEqual(OEMCode.artSenseXt.mnemonic, "OemArtSenseXt")
        XCTAssertEqual(OEMCode.artSenseXt.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artSenseXt.product, "eSense XT")
        XCTAssertEqual(OEMCode.artSenseXt.dmxIn, 0)
        XCTAssertEqual(OEMCode.artSenseXt.dmxOut, 0)
        XCTAssertEqual(OEMCode.artSenseXt.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artSenseXt.isRDMSupported, true)

        // OemArtTwoPlay (0x2210)
        XCTAssertEqual(OEMCode.artTwoPlay, 0x2210)
        XCTAssertEqual(OEMCode.artTwoPlay.description, "OemArtTwoPlay")
        XCTAssertEqual(OEMCode.artTwoPlay.mnemonic, "OemArtTwoPlay")
        XCTAssertEqual(OEMCode.artTwoPlay.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artTwoPlay.product, "Two-Play")
        XCTAssertEqual(OEMCode.artTwoPlay.dmxIn, 4)
        XCTAssertEqual(OEMCode.artTwoPlay.dmxOut, 4)
        XCTAssertEqual(OEMCode.artTwoPlay.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artTwoPlay.isRDMSupported, true)

        // OemArtTwoPlayXt (0x2211)
        XCTAssertEqual(OEMCode.artTwoPlayXt, 0x2211)
        XCTAssertEqual(OEMCode.artTwoPlayXt.description, "OemArtTwoPlayXt")
        XCTAssertEqual(OEMCode.artTwoPlayXt.mnemonic, "OemArtTwoPlayXt")
        XCTAssertEqual(OEMCode.artTwoPlayXt.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artTwoPlayXt.product, "Two-Play XT")
        XCTAssertEqual(OEMCode.artTwoPlayXt.dmxIn, 4)
        XCTAssertEqual(OEMCode.artTwoPlayXt.dmxOut, 4)
        XCTAssertEqual(OEMCode.artTwoPlayXt.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artTwoPlayXt.isRDMSupported, true)

        // OemArtVersaEthA1 (0x2242)
        XCTAssertEqual(OEMCode.artVersaEthA1, 0x2242)
        XCTAssertEqual(OEMCode.artVersaEthA1.description, "OemArtVersaEthA1")
        XCTAssertEqual(OEMCode.artVersaEthA1.mnemonic, "OemArtVersaEthA1")
        XCTAssertEqual(OEMCode.artVersaEthA1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artVersaEthA1.product, "versaSplit EthA")
        XCTAssertEqual(OEMCode.artVersaEthA1.dmxIn, 0)
        XCTAssertEqual(OEMCode.artVersaEthA1.dmxOut, 1)
        XCTAssertEqual(OEMCode.artVersaEthA1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artVersaEthA1.isRDMSupported, true)

        // OemArtVersaEthB1 (0x2241)
        XCTAssertEqual(OEMCode.artVersaEthB1, 0x2241)
        XCTAssertEqual(OEMCode.artVersaEthB1.description, "OemArtVersaEthB1")
        XCTAssertEqual(OEMCode.artVersaEthB1.mnemonic, "OemArtVersaEthB1")
        XCTAssertEqual(OEMCode.artVersaEthB1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artVersaEthB1.product, "versaSplit EthB")
        XCTAssertEqual(OEMCode.artVersaEthB1.dmxIn, 0)
        XCTAssertEqual(OEMCode.artVersaEthB1.dmxOut, 1)
        XCTAssertEqual(OEMCode.artVersaEthB1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.artVersaEthB1.isRDMSupported, true)

        // OemArtVisual1 (0x226A)
        XCTAssertEqual(OEMCode.artVisual1, 0x226A)
        XCTAssertEqual(OEMCode.artVisual1.description, "OemArtVisual1")
        XCTAssertEqual(OEMCode.artVisual1.mnemonic, "OemArtVisual1")
        XCTAssertEqual(OEMCode.artVisual1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artVisual1.product, "visualEyes")
        XCTAssertEqual(OEMCode.artVisual1.dmxIn, 0)
        XCTAssertEqual(OEMCode.artVisual1.dmxOut, 4)
        XCTAssertEqual(OEMCode.artVisual1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artVisual1.isRDMSupported, true)

        // OemArtZircon (0x2222)
        XCTAssertEqual(OEMCode.artZircon, 0x2222)
        XCTAssertEqual(OEMCode.artZircon.description, "OemArtZircon")
        XCTAssertEqual(OEMCode.artZircon.mnemonic, "OemArtZircon")
        XCTAssertEqual(OEMCode.artZircon.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.artZircon.product, "Zircon")
        XCTAssertEqual(OEMCode.artZircon.dmxIn, 0)
        XCTAssertEqual(OEMCode.artZircon.dmxOut, 0)
        XCTAssertEqual(OEMCode.artZircon.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.artZircon.isRDMSupported, true)

        // OemAsteraAc4 (0xBD0)
        XCTAssertEqual(OEMCode.asteraAc4, 0xBD0)
        XCTAssertEqual(OEMCode.asteraAc4.description, "OemAsteraAc4")
        XCTAssertEqual(OEMCode.asteraAc4.mnemonic, "OemAsteraAc4")
        XCTAssertEqual(OEMCode.asteraAc4.manufacturer, "Astera")
        XCTAssertEqual(OEMCode.asteraAc4.product, "AC4")
        XCTAssertEqual(OEMCode.asteraAc4.dmxIn, 0)
        XCTAssertEqual(OEMCode.asteraAc4.dmxOut, 4)
        XCTAssertEqual(OEMCode.asteraAc4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.asteraAc4.isRDMSupported, false)

        // OemAtitNorseWifia (0x2864)
        XCTAssertEqual(OEMCode.atitNorseWifia, 0x2864)
        XCTAssertEqual(OEMCode.atitNorseWifia.description, "OemAtitNorseWifia")
        XCTAssertEqual(OEMCode.atitNorseWifia.mnemonic, "OemAtitNorseWifia")
        XCTAssertEqual(OEMCode.atitNorseWifia.manufacturer, "atit.no")
        XCTAssertEqual(OEMCode.atitNorseWifia.product, "NorseDMX Wi-Fi Node II")
        XCTAssertEqual(OEMCode.atitNorseWifia.dmxIn, 0)
        XCTAssertEqual(OEMCode.atitNorseWifia.dmxOut, 1)
        XCTAssertEqual(OEMCode.atitNorseWifia.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.atitNorseWifia.isRDMSupported, true)

        // OemAudioSceneI (0x401)
        XCTAssertEqual(OEMCode.audioSceneI, 0x401)
        XCTAssertEqual(OEMCode.audioSceneI.description, "OemAudioSceneI")
        XCTAssertEqual(OEMCode.audioSceneI.mnemonic, "OemAudioSceneI")
        XCTAssertEqual(OEMCode.audioSceneI.manufacturer, "Audio Scene")
        XCTAssertEqual(OEMCode.audioSceneI.product, "OemAudioSceneI")
        XCTAssertEqual(OEMCode.audioSceneI.dmxIn, 2)
        XCTAssertEqual(OEMCode.audioSceneI.dmxOut, 0)
        XCTAssertEqual(OEMCode.audioSceneI.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.audioSceneI.isRDMSupported, false)

        // OemAudioSceneO (0x400)
        XCTAssertEqual(OEMCode.audioSceneO, 0x400)
        XCTAssertEqual(OEMCode.audioSceneO.description, "OemAudioSceneO")
        XCTAssertEqual(OEMCode.audioSceneO.mnemonic, "OemAudioSceneO")
        XCTAssertEqual(OEMCode.audioSceneO.manufacturer, "Audio Scene")
        XCTAssertEqual(OEMCode.audioSceneO.product, "OemAudioSceneO")
        XCTAssertEqual(OEMCode.audioSceneO.dmxIn, 0)
        XCTAssertEqual(OEMCode.audioSceneO.dmxOut, 2)
        XCTAssertEqual(OEMCode.audioSceneO.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.audioSceneO.isRDMSupported, false)

        // OemAutoAlxMediaWall1 (0x28C0)
        XCTAssertEqual(OEMCode.autoAlxMediaWall1, 0x28C0)
        XCTAssertEqual(OEMCode.autoAlxMediaWall1.description, "OemAutoAlxMediaWall1")
        XCTAssertEqual(OEMCode.autoAlxMediaWall1.mnemonic, "OemAutoAlxMediaWall1")
        XCTAssertEqual(OEMCode.autoAlxMediaWall1.manufacturer, "AUTOLUX Handels- und ProduktionsgmbH")
        XCTAssertEqual(OEMCode.autoAlxMediaWall1.product, "ALX-MEDIAWALL")
        XCTAssertEqual(OEMCode.autoAlxMediaWall1.dmxIn, 0)
        XCTAssertEqual(OEMCode.autoAlxMediaWall1.dmxOut, 2)
        XCTAssertEqual(OEMCode.autoAlxMediaWall1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.autoAlxMediaWall1.isRDMSupported, true)

        // OemAux0Down (0x80)
        XCTAssertEqual(OEMCode.aux0Down, 0x80)
        XCTAssertEqual(OEMCode.aux0Down.description, "OemAux0Down")
        XCTAssertEqual(OEMCode.aux0Down.mnemonic, "OemAux0Down")
        XCTAssertEqual(OEMCode.aux0Down.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux0Down.product, "AL 0 Down")
        XCTAssertEqual(OEMCode.aux0Down.dmxIn, 0)
        XCTAssertEqual(OEMCode.aux0Down.dmxOut, 2)
        XCTAssertEqual(OEMCode.aux0Down.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux0Down.isRDMSupported, false)

        // OemAux0Up (0x81)
        XCTAssertEqual(OEMCode.aux0Up, 0x81)
        XCTAssertEqual(OEMCode.aux0Up.description, "OemAux0Up")
        XCTAssertEqual(OEMCode.aux0Up.mnemonic, "OemAux0Up")
        XCTAssertEqual(OEMCode.aux0Up.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux0Up.product, "AL 0 Up")
        XCTAssertEqual(OEMCode.aux0Up.dmxIn, 2)
        XCTAssertEqual(OEMCode.aux0Up.dmxOut, 0)
        XCTAssertEqual(OEMCode.aux0Up.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux0Up.isRDMSupported, false)

        // OemAux1Down (0x82)
        XCTAssertEqual(OEMCode.aux1Down, 0x82)
        XCTAssertEqual(OEMCode.aux1Down.description, "OemAux1Down")
        XCTAssertEqual(OEMCode.aux1Down.mnemonic, "OemAux1Down")
        XCTAssertEqual(OEMCode.aux1Down.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux1Down.product, "AL 1 Down")
        XCTAssertEqual(OEMCode.aux1Down.dmxIn, 0)
        XCTAssertEqual(OEMCode.aux1Down.dmxOut, 2)
        XCTAssertEqual(OEMCode.aux1Down.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux1Down.isRDMSupported, false)

        // OemAux1Down2 (0x282)
        XCTAssertEqual(OEMCode.aux1Down2, 0x282)
        XCTAssertEqual(OEMCode.aux1Down2.description, "OemAux1Down2")
        XCTAssertEqual(OEMCode.aux1Down2.mnemonic, "OemAux1Down2")
        XCTAssertEqual(OEMCode.aux1Down2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux1Down2.product, "AL OEM D1")
        XCTAssertEqual(OEMCode.aux1Down2.dmxIn, 0)
        XCTAssertEqual(OEMCode.aux1Down2.dmxOut, 2)
        XCTAssertEqual(OEMCode.aux1Down2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux1Down2.isRDMSupported, true)

        // OemAux1Up (0x83)
        XCTAssertEqual(OEMCode.aux1Up, 0x83)
        XCTAssertEqual(OEMCode.aux1Up.description, "OemAux1Up")
        XCTAssertEqual(OEMCode.aux1Up.mnemonic, "OemAux1Up")
        XCTAssertEqual(OEMCode.aux1Up.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux1Up.product, "AL 1 Up")
        XCTAssertEqual(OEMCode.aux1Up.dmxIn, 2)
        XCTAssertEqual(OEMCode.aux1Up.dmxOut, 0)
        XCTAssertEqual(OEMCode.aux1Up.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux1Up.isRDMSupported, false)

        // OemAux1Up2 (0x283)
        XCTAssertEqual(OEMCode.aux1Up2, 0x283)
        XCTAssertEqual(OEMCode.aux1Up2.description, "OemAux1Up2")
        XCTAssertEqual(OEMCode.aux1Up2.mnemonic, "OemAux1Up2")
        XCTAssertEqual(OEMCode.aux1Up2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux1Up2.product, "AL OEM U1")
        XCTAssertEqual(OEMCode.aux1Up2.dmxIn, 2)
        XCTAssertEqual(OEMCode.aux1Up2.dmxOut, 0)
        XCTAssertEqual(OEMCode.aux1Up2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux1Up2.isRDMSupported, false)

        // OemAux2Down (0x84)
        XCTAssertEqual(OEMCode.aux2Down, 0x84)
        XCTAssertEqual(OEMCode.aux2Down.description, "OemAux2Down")
        XCTAssertEqual(OEMCode.aux2Down.mnemonic, "OemAux2Down")
        XCTAssertEqual(OEMCode.aux2Down.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux2Down.product, "AL 2 Down")
        XCTAssertEqual(OEMCode.aux2Down.dmxIn, 0)
        XCTAssertEqual(OEMCode.aux2Down.dmxOut, 2)
        XCTAssertEqual(OEMCode.aux2Down.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux2Down.isRDMSupported, false)

        // OemAux2Down2 (0x284)
        XCTAssertEqual(OEMCode.aux2Down2, 0x284)
        XCTAssertEqual(OEMCode.aux2Down2.description, "OemAux2Down2")
        XCTAssertEqual(OEMCode.aux2Down2.mnemonic, "OemAux2Down2")
        XCTAssertEqual(OEMCode.aux2Down2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux2Down2.product, "AL OEM D2")
        XCTAssertEqual(OEMCode.aux2Down2.dmxIn, 0)
        XCTAssertEqual(OEMCode.aux2Down2.dmxOut, 2)
        XCTAssertEqual(OEMCode.aux2Down2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux2Down2.isRDMSupported, true)

        // OemAux2Up (0x85)
        XCTAssertEqual(OEMCode.aux2Up, 0x85)
        XCTAssertEqual(OEMCode.aux2Up.description, "OemAux2Up")
        XCTAssertEqual(OEMCode.aux2Up.mnemonic, "OemAux2Up")
        XCTAssertEqual(OEMCode.aux2Up.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux2Up.product, "AL 2 Up")
        XCTAssertEqual(OEMCode.aux2Up.dmxIn, 2)
        XCTAssertEqual(OEMCode.aux2Up.dmxOut, 0)
        XCTAssertEqual(OEMCode.aux2Up.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux2Up.isRDMSupported, false)

        // OemAux2Up2 (0x285)
        XCTAssertEqual(OEMCode.aux2Up2, 0x285)
        XCTAssertEqual(OEMCode.aux2Up2.description, "OemAux2Up2")
        XCTAssertEqual(OEMCode.aux2Up2.mnemonic, "OemAux2Up2")
        XCTAssertEqual(OEMCode.aux2Up2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux2Up2.product, "AL OEM U2")
        XCTAssertEqual(OEMCode.aux2Up2.dmxIn, 2)
        XCTAssertEqual(OEMCode.aux2Up2.dmxOut, 0)
        XCTAssertEqual(OEMCode.aux2Up2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux2Up2.isRDMSupported, false)

        // OemAux3Down (0x86)
        XCTAssertEqual(OEMCode.aux3Down, 0x86)
        XCTAssertEqual(OEMCode.aux3Down.description, "OemAux3Down")
        XCTAssertEqual(OEMCode.aux3Down.mnemonic, "OemAux3Down")
        XCTAssertEqual(OEMCode.aux3Down.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux3Down.product, "AL 3 Down")
        XCTAssertEqual(OEMCode.aux3Down.dmxIn, 0)
        XCTAssertEqual(OEMCode.aux3Down.dmxOut, 2)
        XCTAssertEqual(OEMCode.aux3Down.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux3Down.isRDMSupported, false)

        // OemAux3Down2 (0x286)
        XCTAssertEqual(OEMCode.aux3Down2, 0x286)
        XCTAssertEqual(OEMCode.aux3Down2.description, "OemAux3Down2")
        XCTAssertEqual(OEMCode.aux3Down2.mnemonic, "OemAux3Down2")
        XCTAssertEqual(OEMCode.aux3Down2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux3Down2.product, "AL OEM D3")
        XCTAssertEqual(OEMCode.aux3Down2.dmxIn, 0)
        XCTAssertEqual(OEMCode.aux3Down2.dmxOut, 2)
        XCTAssertEqual(OEMCode.aux3Down2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux3Down2.isRDMSupported, true)

        // OemAux3Up (0x87)
        XCTAssertEqual(OEMCode.aux3Up, 0x87)
        XCTAssertEqual(OEMCode.aux3Up.description, "OemAux3Up")
        XCTAssertEqual(OEMCode.aux3Up.mnemonic, "OemAux3Up")
        XCTAssertEqual(OEMCode.aux3Up.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux3Up.product, "AL 3 Up")
        XCTAssertEqual(OEMCode.aux3Up.dmxIn, 2)
        XCTAssertEqual(OEMCode.aux3Up.dmxOut, 0)
        XCTAssertEqual(OEMCode.aux3Up.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux3Up.isRDMSupported, false)

        // OemAux3Up2 (0x287)
        XCTAssertEqual(OEMCode.aux3Up2, 0x287)
        XCTAssertEqual(OEMCode.aux3Up2.description, "OemAux3Up2")
        XCTAssertEqual(OEMCode.aux3Up2.mnemonic, "OemAux3Up2")
        XCTAssertEqual(OEMCode.aux3Up2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux3Up2.product, "AL OEM U3")
        XCTAssertEqual(OEMCode.aux3Up2.dmxIn, 2)
        XCTAssertEqual(OEMCode.aux3Up2.dmxOut, 0)
        XCTAssertEqual(OEMCode.aux3Up2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux3Up2.isRDMSupported, false)

        // OemAux4Down (0x88)
        XCTAssertEqual(OEMCode.aux4Down, 0x88)
        XCTAssertEqual(OEMCode.aux4Down.description, "OemAux4Down")
        XCTAssertEqual(OEMCode.aux4Down.mnemonic, "OemAux4Down")
        XCTAssertEqual(OEMCode.aux4Down.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux4Down.product, "AL 4 Down")
        XCTAssertEqual(OEMCode.aux4Down.dmxIn, 0)
        XCTAssertEqual(OEMCode.aux4Down.dmxOut, 2)
        XCTAssertEqual(OEMCode.aux4Down.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux4Down.isRDMSupported, false)

        // OemAux4Down2 (0x288)
        XCTAssertEqual(OEMCode.aux4Down2, 0x288)
        XCTAssertEqual(OEMCode.aux4Down2.description, "OemAux4Down2")
        XCTAssertEqual(OEMCode.aux4Down2.mnemonic, "OemAux4Down2")
        XCTAssertEqual(OEMCode.aux4Down2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux4Down2.product, "AL OEM D4")
        XCTAssertEqual(OEMCode.aux4Down2.dmxIn, 0)
        XCTAssertEqual(OEMCode.aux4Down2.dmxOut, 2)
        XCTAssertEqual(OEMCode.aux4Down2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux4Down2.isRDMSupported, true)

        // OemAux4Up (0x89)
        XCTAssertEqual(OEMCode.aux4Up, 0x89)
        XCTAssertEqual(OEMCode.aux4Up.description, "OemAux4Up")
        XCTAssertEqual(OEMCode.aux4Up.mnemonic, "OemAux4Up")
        XCTAssertEqual(OEMCode.aux4Up.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux4Up.product, "AL 4 Up")
        XCTAssertEqual(OEMCode.aux4Up.dmxIn, 2)
        XCTAssertEqual(OEMCode.aux4Up.dmxOut, 0)
        XCTAssertEqual(OEMCode.aux4Up.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux4Up.isRDMSupported, false)

        // OemAux4Up2 (0x289)
        XCTAssertEqual(OEMCode.aux4Up2, 0x289)
        XCTAssertEqual(OEMCode.aux4Up2.description, "OemAux4Up2")
        XCTAssertEqual(OEMCode.aux4Up2.mnemonic, "OemAux4Up2")
        XCTAssertEqual(OEMCode.aux4Up2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux4Up2.product, "AL OEM U4")
        XCTAssertEqual(OEMCode.aux4Up2.dmxIn, 2)
        XCTAssertEqual(OEMCode.aux4Up2.dmxOut, 0)
        XCTAssertEqual(OEMCode.aux4Up2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux4Up2.isRDMSupported, false)

        // OemAux5Down (0x8A)
        XCTAssertEqual(OEMCode.aux5Down, 0x8A)
        XCTAssertEqual(OEMCode.aux5Down.description, "OemAux5Down")
        XCTAssertEqual(OEMCode.aux5Down.mnemonic, "OemAux5Down")
        XCTAssertEqual(OEMCode.aux5Down.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux5Down.product, "AL 5 Down")
        XCTAssertEqual(OEMCode.aux5Down.dmxIn, 0)
        XCTAssertEqual(OEMCode.aux5Down.dmxOut, 2)
        XCTAssertEqual(OEMCode.aux5Down.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux5Down.isRDMSupported, false)

        // OemAux5Down2 (0x28A)
        XCTAssertEqual(OEMCode.aux5Down2, 0x28A)
        XCTAssertEqual(OEMCode.aux5Down2.description, "OemAux5Down2")
        XCTAssertEqual(OEMCode.aux5Down2.mnemonic, "OemAux5Down2")
        XCTAssertEqual(OEMCode.aux5Down2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux5Down2.product, "AL OEM D5")
        XCTAssertEqual(OEMCode.aux5Down2.dmxIn, 0)
        XCTAssertEqual(OEMCode.aux5Down2.dmxOut, 2)
        XCTAssertEqual(OEMCode.aux5Down2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux5Down2.isRDMSupported, true)

        // OemAux5Up (0x8B)
        XCTAssertEqual(OEMCode.aux5Up, 0x8B)
        XCTAssertEqual(OEMCode.aux5Up.description, "OemAux5Up")
        XCTAssertEqual(OEMCode.aux5Up.mnemonic, "OemAux5Up")
        XCTAssertEqual(OEMCode.aux5Up.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux5Up.product, "AL 5 Up")
        XCTAssertEqual(OEMCode.aux5Up.dmxIn, 2)
        XCTAssertEqual(OEMCode.aux5Up.dmxOut, 0)
        XCTAssertEqual(OEMCode.aux5Up.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux5Up.isRDMSupported, false)

        // OemAux5Up2 (0x28B)
        XCTAssertEqual(OEMCode.aux5Up2, 0x28B)
        XCTAssertEqual(OEMCode.aux5Up2.description, "OemAux5Up2")
        XCTAssertEqual(OEMCode.aux5Up2.mnemonic, "OemAux5Up2")
        XCTAssertEqual(OEMCode.aux5Up2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.aux5Up2.product, "AL OEM U5")
        XCTAssertEqual(OEMCode.aux5Up2.dmxIn, 2)
        XCTAssertEqual(OEMCode.aux5Up2.dmxOut, 0)
        XCTAssertEqual(OEMCode.aux5Up2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.aux5Up2.isRDMSupported, false)

        // OemAvoArt2000 (0x6)
        XCTAssertEqual(OEMCode.avoArt2000, 0x6)
        XCTAssertEqual(OEMCode.avoArt2000.description, "OemAvoArt2000")
        XCTAssertEqual(OEMCode.avoArt2000.mnemonic, "OemAvoArt2000")
        XCTAssertEqual(OEMCode.avoArt2000.manufacturer, "Avolites")
        XCTAssertEqual(OEMCode.avoArt2000.product, "Dimmer")
        XCTAssertEqual(OEMCode.avoArt2000.dmxIn, 2)
        XCTAssertEqual(OEMCode.avoArt2000.dmxOut, 0)
        XCTAssertEqual(OEMCode.avoArt2000.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.avoArt2000.isRDMSupported, false)

        // OemAvoD4Elite (0x341)
        XCTAssertEqual(OEMCode.avoD4Elite, 0x341)
        XCTAssertEqual(OEMCode.avoD4Elite.description, "OemAvoD4Elite")
        XCTAssertEqual(OEMCode.avoD4Elite.mnemonic, "OemAvoD4Elite")
        XCTAssertEqual(OEMCode.avoD4Elite.manufacturer, "Avolites")
        XCTAssertEqual(OEMCode.avoD4Elite.product, "Diamond 4 elite")
        XCTAssertEqual(OEMCode.avoD4Elite.dmxIn, 0)
        XCTAssertEqual(OEMCode.avoD4Elite.dmxOut, 8)
        XCTAssertEqual(OEMCode.avoD4Elite.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.avoD4Elite.isRDMSupported, false)

        // OemAvoD4Vision (0x340)
        XCTAssertEqual(OEMCode.avoD4Vision, 0x340)
        XCTAssertEqual(OEMCode.avoD4Vision.description, "OemAvoD4Vision")
        XCTAssertEqual(OEMCode.avoD4Vision.mnemonic, "OemAvoD4Vision")
        XCTAssertEqual(OEMCode.avoD4Vision.manufacturer, "Avolites")
        XCTAssertEqual(OEMCode.avoD4Vision.product, "Diamond 4 Vision")
        XCTAssertEqual(OEMCode.avoD4Vision.dmxIn, 0)
        XCTAssertEqual(OEMCode.avoD4Vision.dmxOut, 8)
        XCTAssertEqual(OEMCode.avoD4Vision.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.avoD4Vision.isRDMSupported, false)

        // OemAvoPearlOff (0x342)
        XCTAssertEqual(OEMCode.avoPearlOff, 0x342)
        XCTAssertEqual(OEMCode.avoPearlOff.description, "OemAvoPearlOff")
        XCTAssertEqual(OEMCode.avoPearlOff.mnemonic, "OemAvoPearlOff")
        XCTAssertEqual(OEMCode.avoPearlOff.manufacturer, "Avolites")
        XCTAssertEqual(OEMCode.avoPearlOff.product, "Peal offline")
        XCTAssertEqual(OEMCode.avoPearlOff.dmxIn, 0)
        XCTAssertEqual(OEMCode.avoPearlOff.dmxOut, 4)
        XCTAssertEqual(OEMCode.avoPearlOff.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.avoPearlOff.isRDMSupported, false)

        // OemAvoTitan (0x343)
        XCTAssertEqual(OEMCode.avoTitan, 0x343)
        XCTAssertEqual(OEMCode.avoTitan.description, "OemAvoTitan")
        XCTAssertEqual(OEMCode.avoTitan.mnemonic, "OemAvoTitan")
        XCTAssertEqual(OEMCode.avoTitan.manufacturer, "Avolites")
        XCTAssertEqual(OEMCode.avoTitan.product, "Titan")
        XCTAssertEqual(OEMCode.avoTitan.dmxIn, 0)
        XCTAssertEqual(OEMCode.avoTitan.dmxOut, 4)
        XCTAssertEqual(OEMCode.avoTitan.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.avoTitan.isRDMSupported, false)

        // OemAvstWas (0x10C0)
        XCTAssertEqual(OEMCode.avstWas, 0x10C0)
        XCTAssertEqual(OEMCode.avstWas.description, "OemAvstWas")
        XCTAssertEqual(OEMCode.avstWas.mnemonic, "OemAvstWas")
        XCTAssertEqual(OEMCode.avstWas.manufacturer, "AV Stumpfl GmbH")
        XCTAssertEqual(OEMCode.avstWas.product, "Wings AV Suite")
        XCTAssertEqual(OEMCode.avstWas.dmxIn, 4)
        XCTAssertEqual(OEMCode.avstWas.dmxOut, 4)
        XCTAssertEqual(OEMCode.avstWas.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.avstWas.isRDMSupported, false)

        // OemAyrtonFixNod1 (0x284A)
        XCTAssertEqual(OEMCode.ayrtonFixNod1, 0x284A)
        XCTAssertEqual(OEMCode.ayrtonFixNod1.description, "OemAyrtonFixNod1")
        XCTAssertEqual(OEMCode.ayrtonFixNod1.mnemonic, "OemAyrtonFixNod1")
        XCTAssertEqual(OEMCode.ayrtonFixNod1.manufacturer, "AYRTON")
        XCTAssertEqual(OEMCode.ayrtonFixNod1.product, "AyrtonFixtureNode")
        XCTAssertEqual(OEMCode.ayrtonFixNod1.dmxIn, 0)
        XCTAssertEqual(OEMCode.ayrtonFixNod1.dmxOut, 2)
        XCTAssertEqual(OEMCode.ayrtonFixNod1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ayrtonFixNod1.isRDMSupported, true)

        // OemBarco1200 (0x820)
        XCTAssertEqual(OEMCode.barco1200, 0x820)
        XCTAssertEqual(OEMCode.barco1200.description, "OemBarco1200")
        XCTAssertEqual(OEMCode.barco1200.mnemonic, "OemBarco1200")
        XCTAssertEqual(OEMCode.barco1200.manufacturer, "Barco")
        XCTAssertEqual(OEMCode.barco1200.product, "Barco DML-120")
        XCTAssertEqual(OEMCode.barco1200.dmxIn, 1)
        XCTAssertEqual(OEMCode.barco1200.dmxOut, 0)
        XCTAssertEqual(OEMCode.barco1200.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.barco1200.isRDMSupported, false)

        // OemBarcoCLM (0x822)
        XCTAssertEqual(OEMCode.barcoCLM, 0x822)
        XCTAssertEqual(OEMCode.barcoCLM.description, "OemBarcoCLM")
        XCTAssertEqual(OEMCode.barcoCLM.mnemonic, "OemBarcoCLM")
        XCTAssertEqual(OEMCode.barcoCLM.manufacturer, "Barco")
        XCTAssertEqual(OEMCode.barcoCLM.product, "CLM")
        XCTAssertEqual(OEMCode.barcoCLM.dmxIn, 0)
        XCTAssertEqual(OEMCode.barcoCLM.dmxOut, 0)
        XCTAssertEqual(OEMCode.barcoCLM.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.barcoCLM.isRDMSupported, false)

        // OemBarcoFLM (0x821)
        XCTAssertEqual(OEMCode.barcoFLM, 0x821)
        XCTAssertEqual(OEMCode.barcoFLM.description, "OemBarcoFLM")
        XCTAssertEqual(OEMCode.barcoFLM.mnemonic, "OemBarcoFLM")
        XCTAssertEqual(OEMCode.barcoFLM.manufacturer, "Barco")
        XCTAssertEqual(OEMCode.barcoFLM.product, "FLM")
        XCTAssertEqual(OEMCode.barcoFLM.dmxIn, 0)
        XCTAssertEqual(OEMCode.barcoFLM.dmxOut, 0)
        XCTAssertEqual(OEMCode.barcoFLM.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.barcoFLM.isRDMSupported, false)

        // OemBatOemV1 (0x13F0)
        XCTAssertEqual(OEMCode.batV1, 0x13F0)
        XCTAssertEqual(OEMCode.batV1.description, "OemBatOemV1")
        XCTAssertEqual(OEMCode.batV1.mnemonic, "OemBatOemV1")
        XCTAssertEqual(OEMCode.batV1.manufacturer, "Batmink Ltd")
        XCTAssertEqual(OEMCode.batV1.product, "OEMVISAGEVISIONMAPPER")
        XCTAssertEqual(OEMCode.batV1.dmxIn, 0)
        XCTAssertEqual(OEMCode.batV1.dmxOut, 4)
        XCTAssertEqual(OEMCode.batV1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.batV1.isRDMSupported, false)

        // OemBeglecBm55 (0x1162)
        XCTAssertEqual(OEMCode.beglecBm55, 0x1162)
        XCTAssertEqual(OEMCode.beglecBm55.description, "OemBeglecBm55")
        XCTAssertEqual(OEMCode.beglecBm55.mnemonic, "OemBeglecBm55")
        XCTAssertEqual(OEMCode.beglecBm55.manufacturer, "BEGLEC")
        XCTAssertEqual(OEMCode.beglecBm55.product, "BEAM MATRIX5x5-RGBW")
        XCTAssertEqual(OEMCode.beglecBm55.dmxIn, 1)
        XCTAssertEqual(OEMCode.beglecBm55.dmxOut, 1)
        XCTAssertEqual(OEMCode.beglecBm55.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.beglecBm55.isRDMSupported, true)

        // OemBeglecN28 (0x1160)
        XCTAssertEqual(OEMCode.beglecN28, 0x1160)
        XCTAssertEqual(OEMCode.beglecN28.description, "OemBeglecN28")
        XCTAssertEqual(OEMCode.beglecN28.mnemonic, "OemBeglecN28")
        XCTAssertEqual(OEMCode.beglecN28.manufacturer, "BEGLEC")
        XCTAssertNil(OEMCode.beglecN28.product)
        XCTAssertEqual(OEMCode.beglecN28.dmxIn, 1)
        XCTAssertEqual(OEMCode.beglecN28.dmxOut, 1)
        XCTAssertEqual(OEMCode.beglecN28.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.beglecN28.isRDMSupported, true)

        // OemBeglecPm55 (0x1161)
        XCTAssertEqual(OEMCode.beglecPm55, 0x1161)
        XCTAssertEqual(OEMCode.beglecPm55.description, "OemBeglecPm55")
        XCTAssertEqual(OEMCode.beglecPm55.mnemonic, "OemBeglecPm55")
        XCTAssertEqual(OEMCode.beglecPm55.manufacturer, "BEGLEC")
        XCTAssertNil(OEMCode.beglecPm55.product)
        XCTAssertEqual(OEMCode.beglecPm55.dmxIn, 1)
        XCTAssertEqual(OEMCode.beglecPm55.dmxOut, 1)
        XCTAssertEqual(OEMCode.beglecPm55.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.beglecPm55.isRDMSupported, true)

        // OemBeijXinNd1 (0xBA0)
        XCTAssertEqual(OEMCode.beijXinNd1, 0xBA0)
        XCTAssertEqual(OEMCode.beijXinNd1.description, "OemBeijXinNd1")
        XCTAssertEqual(OEMCode.beijXinNd1.mnemonic, "OemBeijXinNd1")
        XCTAssertEqual(OEMCode.beijXinNd1.manufacturer, "Starlighting")
        XCTAssertEqual(OEMCode.beijXinNd1.product, "Net-DMX Notes")
        XCTAssertEqual(OEMCode.beijXinNd1.dmxIn, 3)
        XCTAssertEqual(OEMCode.beijXinNd1.dmxOut, 3)
        XCTAssertEqual(OEMCode.beijXinNd1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.beijXinNd1.isRDMSupported, false)

        // OemBfEtherMuxDesk (0x352)
        XCTAssertEqual(OEMCode.bfEtherMuxDesk, 0x352)
        XCTAssertEqual(OEMCode.bfEtherMuxDesk.description, "OemBfEtherMuxDesk")
        XCTAssertEqual(OEMCode.bfEtherMuxDesk.mnemonic, "OemBfEtherMuxDesk")
        XCTAssertEqual(OEMCode.bfEtherMuxDesk.manufacturer, "Bigfoot")
        XCTAssertEqual(OEMCode.bfEtherMuxDesk.product, "EtherMux Desktop")
        XCTAssertEqual(OEMCode.bfEtherMuxDesk.dmxIn, 0)
        XCTAssertEqual(OEMCode.bfEtherMuxDesk.dmxOut, 1)
        XCTAssertEqual(OEMCode.bfEtherMuxDesk.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.bfEtherMuxDesk.isRDMSupported, false)

        // OemBfEtherMuxRem (0x350)
        XCTAssertEqual(OEMCode.bfEtherMuxRem, 0x350)
        XCTAssertEqual(OEMCode.bfEtherMuxRem.description, "OemBfEtherMuxRem")
        XCTAssertEqual(OEMCode.bfEtherMuxRem.mnemonic, "OemBfEtherMuxRem")
        XCTAssertEqual(OEMCode.bfEtherMuxRem.manufacturer, "Bigfoot")
        XCTAssertEqual(OEMCode.bfEtherMuxRem.product, "EtherMux Remote")
        XCTAssertEqual(OEMCode.bfEtherMuxRem.dmxIn, 1)
        XCTAssertEqual(OEMCode.bfEtherMuxRem.dmxOut, 0)
        XCTAssertEqual(OEMCode.bfEtherMuxRem.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.bfEtherMuxRem.isRDMSupported, false)

        // OemBfEtherMuxServ (0x351)
        XCTAssertEqual(OEMCode.bfEtherMuxServ, 0x351)
        XCTAssertEqual(OEMCode.bfEtherMuxServ.description, "OemBfEtherMuxServ")
        XCTAssertEqual(OEMCode.bfEtherMuxServ.mnemonic, "OemBfEtherMuxServ")
        XCTAssertEqual(OEMCode.bfEtherMuxServ.manufacturer, "Bigfoot")
        XCTAssertEqual(OEMCode.bfEtherMuxServ.product, "EtherMux Server")
        XCTAssertEqual(OEMCode.bfEtherMuxServ.dmxIn, 1)
        XCTAssertEqual(OEMCode.bfEtherMuxServ.dmxOut, 1)
        XCTAssertEqual(OEMCode.bfEtherMuxServ.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.bfEtherMuxServ.isRDMSupported, false)

        // OemBiamLedA01 (0x28CA)
        XCTAssertEqual(OEMCode.biamLedA01, 0x28CA)
        XCTAssertEqual(OEMCode.biamLedA01.description, "OemBiamLedA01")
        XCTAssertEqual(OEMCode.biamLedA01.mnemonic, "OemBiamLedA01")
        XCTAssertEqual(OEMCode.biamLedA01.manufacturer, "Biamino and Figli S.p.A.")
        XCTAssertEqual(OEMCode.biamLedA01.product, "BIALEDA01")
        XCTAssertEqual(OEMCode.biamLedA01.dmxIn, 0)
        XCTAssertEqual(OEMCode.biamLedA01.dmxOut, 12)
        XCTAssertEqual(OEMCode.biamLedA01.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.biamLedA01.isRDMSupported, false)

        // OemBigdipBP440BSW (0x2857)
        XCTAssertEqual(OEMCode.bigdipBP440BSW, 0x2857)
        XCTAssertEqual(OEMCode.bigdipBP440BSW.description, "OemBigdipBP440BSW")
        XCTAssertEqual(OEMCode.bigdipBP440BSW.mnemonic, "OemBigdipBP440BSW")
        XCTAssertEqual(OEMCode.bigdipBP440BSW.manufacturer, "Big Dipper Laser Science and Technology Co., Ltd.")
        XCTAssertEqual(OEMCode.bigdipBP440BSW.product, "BP-440BSW")
        XCTAssertEqual(OEMCode.bigdipBP440BSW.dmxIn, 1)
        XCTAssertEqual(OEMCode.bigdipBP440BSW.dmxOut, 4)
        XCTAssertEqual(OEMCode.bigdipBP440BSW.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.bigdipBP440BSW.isRDMSupported, true)

        // OemBigonoffIltos1 (0x11B0)
        XCTAssertEqual(OEMCode.bigonoffIltos1, 0x11B0)
        XCTAssertEqual(OEMCode.bigonoffIltos1.description, "OemBigonoffIltos1")
        XCTAssertEqual(OEMCode.bigonoffIltos1.mnemonic, "OemBigonoffIltos1")
        XCTAssertEqual(OEMCode.bigonoffIltos1.manufacturer, "Claude Bigonoff")
        XCTAssertEqual(OEMCode.bigonoffIltos1.product, "Interface LT Open-source")
        XCTAssertEqual(OEMCode.bigonoffIltos1.dmxIn, 4)
        XCTAssertEqual(OEMCode.bigonoffIltos1.dmxOut, 4)
        XCTAssertEqual(OEMCode.bigonoffIltos1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.bigonoffIltos1.isRDMSupported, false)

        // OemBlsC215508201 (0x2813)
        XCTAssertEqual(OEMCode.blsC215508201, 0x2813)
        XCTAssertEqual(OEMCode.blsC215508201.description, "OemBlsC215508201")
        XCTAssertEqual(OEMCode.blsC215508201.mnemonic, "OemBlsC215508201")
        XCTAssertEqual(OEMCode.blsC215508201.manufacturer, "BLS")
        XCTAssertEqual(OEMCode.blsC215508201.product, "c21550820")
        XCTAssertEqual(OEMCode.blsC215508201.dmxIn, 1)
        XCTAssertEqual(OEMCode.blsC215508201.dmxOut, 4)
        XCTAssertEqual(OEMCode.blsC215508201.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.blsC215508201.isRDMSupported, true)

        // OemBlueHyst (0x330)
        XCTAssertEqual(OEMCode.blueHyst, 0x330)
        XCTAssertEqual(OEMCode.blueHyst.description, "OemBlueHyst")
        XCTAssertEqual(OEMCode.blueHyst.mnemonic, "OemBlueHyst")
        XCTAssertEqual(OEMCode.blueHyst.manufacturer, "Invisible Rival")
        XCTAssertEqual(OEMCode.blueHyst.product, "Blue Hysteria")
        XCTAssertEqual(OEMCode.blueHyst.dmxIn, 2)
        XCTAssertEqual(OEMCode.blueHyst.dmxOut, 2)
        XCTAssertEqual(OEMCode.blueHyst.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.blueHyst.isRDMSupported, false)

        // OemBooqWiFiDMXRDMModule1 (0x28D6)
        XCTAssertEqual(OEMCode.booqWiFiDMXRDMModule1, 0x28D6)
        XCTAssertEqual(OEMCode.booqWiFiDMXRDMModule1.description, "OemBooqWiFiDMXRDMModule1")
        XCTAssertEqual(OEMCode.booqWiFiDMXRDMModule1.mnemonic, "OemBooqWiFiDMXRDMModule1")
        XCTAssertEqual(OEMCode.booqWiFiDMXRDMModule1.manufacturer, "BOOQlight BV")
        XCTAssertEqual(OEMCode.booqWiFiDMXRDMModule1.product, "WiFi DMX/RDM Module")
        XCTAssertEqual(OEMCode.booqWiFiDMXRDMModule1.dmxIn, 1)
        XCTAssertEqual(OEMCode.booqWiFiDMXRDMModule1.dmxOut, 1)
        XCTAssertEqual(OEMCode.booqWiFiDMXRDMModule1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.booqWiFiDMXRDMModule1.isRDMSupported, true)

        // OemBotex1 (0x420)
        XCTAssertEqual(OEMCode.botex1, 0x420)
        XCTAssertEqual(OEMCode.botex1.description, "OemBotex1")
        XCTAssertEqual(OEMCode.botex1.mnemonic, "OemBotex1")
        XCTAssertEqual(OEMCode.botex1.manufacturer, "Botex")
        XCTAssertEqual(OEMCode.botex1.product, "OemBotex1")
        XCTAssertEqual(OEMCode.botex1.dmxIn, 2)
        XCTAssertEqual(OEMCode.botex1.dmxOut, 2)
        XCTAssertEqual(OEMCode.botex1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.botex1.isRDMSupported, false)

        // OemBrainsaltBsmConPro (0xEC0)
        XCTAssertEqual(OEMCode.brainsaltBsmConPro, 0xEC0)
        XCTAssertEqual(OEMCode.brainsaltBsmConPro.description, "OemBrainsaltBsmConPro")
        XCTAssertEqual(OEMCode.brainsaltBsmConPro.mnemonic, "OemBrainsaltBsmConPro")
        XCTAssertEqual(OEMCode.brainsaltBsmConPro.manufacturer, "BRAINSALT MEDIA GMBH")
        XCTAssertEqual(OEMCode.brainsaltBsmConPro.product, "BSM Conductor PRO")
        XCTAssertEqual(OEMCode.brainsaltBsmConPro.dmxIn, 1)
        XCTAssertEqual(OEMCode.brainsaltBsmConPro.dmxOut, 1)
        XCTAssertEqual(OEMCode.brainsaltBsmConPro.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.brainsaltBsmConPro.isRDMSupported, false)

        // OemBrightSoundBrightMapa (0x2863)
        XCTAssertEqual(OEMCode.brightSoundBrightMapa, 0x2863)
        XCTAssertEqual(OEMCode.brightSoundBrightMapa.description, "OemBrightSoundBrightMapa")
        XCTAssertEqual(OEMCode.brightSoundBrightMapa.mnemonic, "OemBrightSoundBrightMapa")
        XCTAssertEqual(OEMCode.brightSoundBrightMapa.manufacturer, "Bright Sound")
        XCTAssertEqual(OEMCode.brightSoundBrightMapa.product, "Bright Mapper")
        XCTAssertEqual(OEMCode.brightSoundBrightMapa.dmxIn, 0)
        XCTAssertEqual(OEMCode.brightSoundBrightMapa.dmxOut, 0)
        XCTAssertEqual(OEMCode.brightSoundBrightMapa.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.brightSoundBrightMapa.isRDMSupported, false)

        // OemBrinkNetNode01 (0xF00)
        XCTAssertEqual(OEMCode.brinkNetNode01, 0xF00)
        XCTAssertEqual(OEMCode.brinkNetNode01.description, "OemBrinkNetNode01")
        XCTAssertEqual(OEMCode.brinkNetNode01.mnemonic, "OemBrinkNetNode01")
        XCTAssertEqual(OEMCode.brinkNetNode01.manufacturer, "Brink Electronics")
        XCTAssertEqual(OEMCode.brinkNetNode01.product, "net-node-01")
        XCTAssertEqual(OEMCode.brinkNetNode01.dmxIn, 0)
        XCTAssertEqual(OEMCode.brinkNetNode01.dmxOut, 1)
        XCTAssertEqual(OEMCode.brinkNetNode01.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.brinkNetNode01.isRDMSupported, false)

        // OemBrinkNetNode10 (0xF01)
        XCTAssertEqual(OEMCode.brinkNetNode10, 0xF01)
        XCTAssertEqual(OEMCode.brinkNetNode10.description, "OemBrinkNetNode10")
        XCTAssertEqual(OEMCode.brinkNetNode10.mnemonic, "OemBrinkNetNode10")
        XCTAssertEqual(OEMCode.brinkNetNode10.manufacturer, "Brink Electronics")
        XCTAssertEqual(OEMCode.brinkNetNode10.product, "net-node-10")
        XCTAssertEqual(OEMCode.brinkNetNode10.dmxIn, 1)
        XCTAssertEqual(OEMCode.brinkNetNode10.dmxOut, 0)
        XCTAssertEqual(OEMCode.brinkNetNode10.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.brinkNetNode10.isRDMSupported, false)

        // OemBrinkNetNode11 (0xF02)
        XCTAssertEqual(OEMCode.brinkNetNode11, 0xF02)
        XCTAssertEqual(OEMCode.brinkNetNode11.description, "OemBrinkNetNode11")
        XCTAssertEqual(OEMCode.brinkNetNode11.mnemonic, "OemBrinkNetNode11")
        XCTAssertEqual(OEMCode.brinkNetNode11.manufacturer, "Brink Electronics")
        XCTAssertEqual(OEMCode.brinkNetNode11.product, "net-node-11")
        XCTAssertEqual(OEMCode.brinkNetNode11.dmxIn, 1)
        XCTAssertEqual(OEMCode.brinkNetNode11.dmxOut, 1)
        XCTAssertEqual(OEMCode.brinkNetNode11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.brinkNetNode11.isRDMSupported, false)

        // OemBriteqBb10a (0x12B1)
        XCTAssertEqual(OEMCode.briteqBb10a, 0x12B1)
        XCTAssertEqual(OEMCode.briteqBb10a.description, "OemBriteqBb10a")
        XCTAssertEqual(OEMCode.briteqBb10a.mnemonic, "OemBriteqBb10a")
        XCTAssertEqual(OEMCode.briteqBb10a.manufacturer, "Briteq")
        XCTAssertEqual(OEMCode.briteqBb10a.product, "BEAMBAR10-RGBW")
        XCTAssertEqual(OEMCode.briteqBb10a.dmxIn, 1)
        XCTAssertEqual(OEMCode.briteqBb10a.dmxOut, 1)
        XCTAssertEqual(OEMCode.briteqBb10a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.briteqBb10a.isRDMSupported, true)

        // OemBriteqBb5a (0x12B0)
        XCTAssertEqual(OEMCode.briteqBb5a, 0x12B0)
        XCTAssertEqual(OEMCode.briteqBb5a.description, "OemBriteqBb5a")
        XCTAssertEqual(OEMCode.briteqBb5a.mnemonic, "OemBriteqBb5a")
        XCTAssertEqual(OEMCode.briteqBb5a.manufacturer, "Briteq")
        XCTAssertEqual(OEMCode.briteqBb5a.product, "BEAMBAR5-RGBW")
        XCTAssertEqual(OEMCode.briteqBb5a.dmxIn, 1)
        XCTAssertEqual(OEMCode.briteqBb5a.dmxOut, 1)
        XCTAssertEqual(OEMCode.briteqBb5a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.briteqBb5a.isRDMSupported, true)

        // OemBriteqBm5a (0x12B3)
        XCTAssertEqual(OEMCode.briteqBm5a, 0x12B3)
        XCTAssertEqual(OEMCode.briteqBm5a.description, "OemBriteqBm5a")
        XCTAssertEqual(OEMCode.briteqBm5a.mnemonic, "OemBriteqBm5a")
        XCTAssertEqual(OEMCode.briteqBm5a.manufacturer, "Briteq")
        XCTAssertEqual(OEMCode.briteqBm5a.product, "BEAM MATRIX5x5-RGBW")
        XCTAssertEqual(OEMCode.briteqBm5a.dmxIn, 1)
        XCTAssertEqual(OEMCode.briteqBm5a.dmxOut, 1)
        XCTAssertEqual(OEMCode.briteqBm5a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.briteqBm5a.isRDMSupported, true)

        // OemBriteqBw5a (0x12B2)
        XCTAssertEqual(OEMCode.briteqBw5a, 0x12B2)
        XCTAssertEqual(OEMCode.briteqBw5a.description, "OemBriteqBw5a")
        XCTAssertEqual(OEMCode.briteqBw5a.mnemonic, "OemBriteqBw5a")
        XCTAssertEqual(OEMCode.briteqBw5a.manufacturer, "Briteq")
        XCTAssertEqual(OEMCode.briteqBw5a.product, "BEAM WIZARD5x5")
        XCTAssertEqual(OEMCode.briteqBw5a.dmxIn, 1)
        XCTAssertEqual(OEMCode.briteqBw5a.dmxOut, 1)
        XCTAssertEqual(OEMCode.briteqBw5a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.briteqBw5a.isRDMSupported, true)

        // OemBritNod24 (0x28AC)
        XCTAssertEqual(OEMCode.britNod24, 0x28AC)
        XCTAssertEqual(OEMCode.britNod24.description, "OemBritNod24")
        XCTAssertEqual(OEMCode.britNod24.mnemonic, "OemBritNod24")
        XCTAssertEqual(OEMCode.britNod24.manufacturer, "BRITEQ")
        XCTAssertEqual(OEMCode.britNod24.product, "BT-NODE24")
        XCTAssertEqual(OEMCode.britNod24.dmxIn, 4)
        XCTAssertEqual(OEMCode.britNod24.dmxOut, 4)
        XCTAssertEqual(OEMCode.britNod24.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.britNod24.isRDMSupported, true)

        // OemCallegDmxCom1 (0x13A0)
        XCTAssertEqual(OEMCode.callegDmxCom1, 0x13A0)
        XCTAssertEqual(OEMCode.callegDmxCom1.description, "OemCallegDmxCom1")
        XCTAssertEqual(OEMCode.callegDmxCom1.mnemonic, "OemCallegDmxCom1")
        XCTAssertEqual(OEMCode.callegDmxCom1.manufacturer, "Callegenix LLC")
        XCTAssertEqual(OEMCode.callegDmxCom1.product, "DMX Commander")
        XCTAssertEqual(OEMCode.callegDmxCom1.dmxIn, 2)
        XCTAssertEqual(OEMCode.callegDmxCom1.dmxOut, 2)
        XCTAssertEqual(OEMCode.callegDmxCom1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.callegDmxCom1.isRDMSupported, false)

        // OemCallegPixD1 (0x13A1)
        XCTAssertEqual(OEMCode.callegPixD1, 0x13A1)
        XCTAssertEqual(OEMCode.callegPixD1.description, "OemCallegPixD1")
        XCTAssertEqual(OEMCode.callegPixD1.mnemonic, "OemCallegPixD1")
        XCTAssertEqual(OEMCode.callegPixD1.manufacturer, "Callegenix LLC")
        XCTAssertEqual(OEMCode.callegPixD1.product, "Pixel Driver")
        XCTAssertEqual(OEMCode.callegPixD1.dmxIn, 0)
        XCTAssertEqual(OEMCode.callegPixD1.dmxOut, 0)
        XCTAssertEqual(OEMCode.callegPixD1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.callegPixD1.isRDMSupported, true)

        // OemCameoEvosS31 (0x28C4)
        XCTAssertEqual(OEMCode.cameoEvosS31, 0x28C4)
        XCTAssertEqual(OEMCode.cameoEvosS31.description, "OemCameoEvosS31")
        XCTAssertEqual(OEMCode.cameoEvosS31.mnemonic, "OemCameoEvosS31")
        XCTAssertEqual(OEMCode.cameoEvosS31.manufacturer, "Cameo")
        XCTAssertEqual(OEMCode.cameoEvosS31.product, "EVOS S3")
        XCTAssertEqual(OEMCode.cameoEvosS31.dmxIn, 2)
        XCTAssertEqual(OEMCode.cameoEvosS31.dmxOut, 2)
        XCTAssertEqual(OEMCode.cameoEvosS31.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cameoEvosS31.isRDMSupported, true)

        // OemCameoEvosW71 (0x28C3)
        XCTAssertEqual(OEMCode.cameoEvosW71, 0x28C3)
        XCTAssertEqual(OEMCode.cameoEvosW71.description, "OemCameoEvosW71")
        XCTAssertEqual(OEMCode.cameoEvosW71.mnemonic, "OemCameoEvosW71")
        XCTAssertEqual(OEMCode.cameoEvosW71.manufacturer, "Cameo")
        XCTAssertEqual(OEMCode.cameoEvosW71.product, "EVOS W7")
        XCTAssertEqual(OEMCode.cameoEvosW71.dmxIn, 2)
        XCTAssertEqual(OEMCode.cameoEvosW71.dmxOut, 2)
        XCTAssertEqual(OEMCode.cameoEvosW71.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cameoEvosW71.isRDMSupported, true)

        // OemCataLynx (0x110)
        XCTAssertEqual(OEMCode.cataLynx, 0x110)
        XCTAssertEqual(OEMCode.cataLynx.description, "OemCataLynx")
        XCTAssertEqual(OEMCode.cataLynx.mnemonic, "OemCataLynx")
        XCTAssertEqual(OEMCode.cataLynx.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynx.product, "Cata-Lynx")
        XCTAssertEqual(OEMCode.cataLynx.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynx.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynx.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynx.isRDMSupported, true)

        // OemCataLynx1 (0x111)
        XCTAssertEqual(OEMCode.cataLynx1, 0x111)
        XCTAssertEqual(OEMCode.cataLynx1.description, "OemCataLynx1")
        XCTAssertEqual(OEMCode.cataLynx1.mnemonic, "OemCataLynx1")
        XCTAssertEqual(OEMCode.cataLynx1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynx1.product, "Cata-Lynx Exp 1")
        XCTAssertEqual(OEMCode.cataLynx1.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynx1.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynx1.isRDMSupported, true)

        // OemCataLynx2 (0x112)
        XCTAssertEqual(OEMCode.cataLynx2, 0x112)
        XCTAssertEqual(OEMCode.cataLynx2.description, "OemCataLynx2")
        XCTAssertEqual(OEMCode.cataLynx2.mnemonic, "OemCataLynx2")
        XCTAssertEqual(OEMCode.cataLynx2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynx2.product, "Cata-Lynx Exp 2")
        XCTAssertEqual(OEMCode.cataLynx2.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynx2.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynx2.isRDMSupported, true)

        // OemCataLynx3 (0x113)
        XCTAssertEqual(OEMCode.cataLynx3, 0x113)
        XCTAssertEqual(OEMCode.cataLynx3.description, "OemCataLynx3")
        XCTAssertEqual(OEMCode.cataLynx3.mnemonic, "OemCataLynx3")
        XCTAssertEqual(OEMCode.cataLynx3.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynx3.product, "Cata-Lynx Exp 3")
        XCTAssertEqual(OEMCode.cataLynx3.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynx3.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynx3.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynx3.isRDMSupported, true)

        // OemCataLynx4 (0x114)
        XCTAssertEqual(OEMCode.cataLynx4, 0x114)
        XCTAssertEqual(OEMCode.cataLynx4.description, "OemCataLynx4")
        XCTAssertEqual(OEMCode.cataLynx4.mnemonic, "OemCataLynx4")
        XCTAssertEqual(OEMCode.cataLynx4.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynx4.product, "Cata-Lynx Exp 4")
        XCTAssertEqual(OEMCode.cataLynx4.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynx4.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynx4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynx4.isRDMSupported, true)

        // OemCataLynx5 (0x115)
        XCTAssertEqual(OEMCode.cataLynx5, 0x115)
        XCTAssertEqual(OEMCode.cataLynx5.description, "OemCataLynx5")
        XCTAssertEqual(OEMCode.cataLynx5.mnemonic, "OemCataLynx5")
        XCTAssertEqual(OEMCode.cataLynx5.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynx5.product, "Cata-Lynx Exp 5")
        XCTAssertEqual(OEMCode.cataLynx5.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynx5.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynx5.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynx5.isRDMSupported, true)

        // OemCataLynx6 (0x116)
        XCTAssertEqual(OEMCode.cataLynx6, 0x116)
        XCTAssertEqual(OEMCode.cataLynx6.description, "OemCataLynx6")
        XCTAssertEqual(OEMCode.cataLynx6.mnemonic, "OemCataLynx6")
        XCTAssertEqual(OEMCode.cataLynx6.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynx6.product, "Cata-Lynx Exp 6")
        XCTAssertEqual(OEMCode.cataLynx6.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynx6.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynx6.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynx6.isRDMSupported, true)

        // OemCataLynx7 (0x117)
        XCTAssertEqual(OEMCode.cataLynx7, 0x117)
        XCTAssertEqual(OEMCode.cataLynx7.description, "OemCataLynx7")
        XCTAssertEqual(OEMCode.cataLynx7.mnemonic, "OemCataLynx7")
        XCTAssertEqual(OEMCode.cataLynx7.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynx7.product, "Cata-Lynx Exp 7")
        XCTAssertEqual(OEMCode.cataLynx7.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynx7.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynx7.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynx7.isRDMSupported, true)

        // OemCataLynx8 (0x118)
        XCTAssertEqual(OEMCode.cataLynx8, 0x118)
        XCTAssertEqual(OEMCode.cataLynx8.description, "OemCataLynx8")
        XCTAssertEqual(OEMCode.cataLynx8.mnemonic, "OemCataLynx8")
        XCTAssertEqual(OEMCode.cataLynx8.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynx8.product, "Cata-Lynx Exp 8")
        XCTAssertEqual(OEMCode.cataLynx8.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynx8.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynx8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynx8.isRDMSupported, true)

        // OemCataLynx9 (0x119)
        XCTAssertEqual(OEMCode.cataLynx9, 0x119)
        XCTAssertEqual(OEMCode.cataLynx9.description, "OemCataLynx9")
        XCTAssertEqual(OEMCode.cataLynx9.mnemonic, "OemCataLynx9")
        XCTAssertEqual(OEMCode.cataLynx9.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynx9.product, "Cata-Lynx Exp 9")
        XCTAssertEqual(OEMCode.cataLynx9.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynx9.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynx9.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynx9.isRDMSupported, true)

        // OemCataLynxa (0x11A)
        XCTAssertEqual(OEMCode.cataLynxa, 0x11A)
        XCTAssertEqual(OEMCode.cataLynxa.description, "OemCataLynxa")
        XCTAssertEqual(OEMCode.cataLynxa.mnemonic, "OemCataLynxa")
        XCTAssertEqual(OEMCode.cataLynxa.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynxa.product, "Cata-Lynx Exp a")
        XCTAssertEqual(OEMCode.cataLynxa.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynxa.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynxa.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynxa.isRDMSupported, true)

        // OemCataLynxb (0x11B)
        XCTAssertEqual(OEMCode.cataLynxb, 0x11B)
        XCTAssertEqual(OEMCode.cataLynxb.description, "OemCataLynxb")
        XCTAssertEqual(OEMCode.cataLynxb.mnemonic, "OemCataLynxb")
        XCTAssertEqual(OEMCode.cataLynxb.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynxb.product, "Cata-Lynx Exp b")
        XCTAssertEqual(OEMCode.cataLynxb.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynxb.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynxb.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynxb.isRDMSupported, true)

        // OemCataLynxc (0x11C)
        XCTAssertEqual(OEMCode.cataLynxc, 0x11C)
        XCTAssertEqual(OEMCode.cataLynxc.description, "OemCataLynxc")
        XCTAssertEqual(OEMCode.cataLynxc.mnemonic, "OemCataLynxc")
        XCTAssertEqual(OEMCode.cataLynxc.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynxc.product, "Cata-Lynx Exp c")
        XCTAssertEqual(OEMCode.cataLynxc.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynxc.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynxc.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynxc.isRDMSupported, true)

        // OemCataLynxd (0x11D)
        XCTAssertEqual(OEMCode.cataLynxd, 0x11D)
        XCTAssertEqual(OEMCode.cataLynxd.description, "OemCataLynxd")
        XCTAssertEqual(OEMCode.cataLynxd.mnemonic, "OemCataLynxd")
        XCTAssertEqual(OEMCode.cataLynxd.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynxd.product, "Cata-Lynx Exp d")
        XCTAssertEqual(OEMCode.cataLynxd.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynxd.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynxd.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynxd.isRDMSupported, true)

        // OemCataLynxe (0x11E)
        XCTAssertEqual(OEMCode.cataLynxe, 0x11E)
        XCTAssertEqual(OEMCode.cataLynxe.description, "OemCataLynxe")
        XCTAssertEqual(OEMCode.cataLynxe.mnemonic, "OemCataLynxe")
        XCTAssertEqual(OEMCode.cataLynxe.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynxe.product, "Cata-Lynx Exp e")
        XCTAssertEqual(OEMCode.cataLynxe.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynxe.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynxe.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynxe.isRDMSupported, true)

        // OemCataLynxf (0x11F)
        XCTAssertEqual(OEMCode.cataLynxf, 0x11F)
        XCTAssertEqual(OEMCode.cataLynxf.description, "OemCataLynxf")
        XCTAssertEqual(OEMCode.cataLynxf.mnemonic, "OemCataLynxf")
        XCTAssertEqual(OEMCode.cataLynxf.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynxf.product, "Cata-Lynx Exp f")
        XCTAssertEqual(OEMCode.cataLynxf.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynxf.dmxOut, 2)
        XCTAssertEqual(OEMCode.cataLynxf.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynxf.isRDMSupported, true)

        // OemCataLynxNtIp (0x2070)
        XCTAssertEqual(OEMCode.cataLynxNtIp, 0x2070)
        XCTAssertEqual(OEMCode.cataLynxNtIp.description, "OemCataLynxNtIp")
        XCTAssertEqual(OEMCode.cataLynxNtIp.mnemonic, "OemCataLynxNtIp")
        XCTAssertEqual(OEMCode.cataLynxNtIp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynxNtIp.product, "Cata-Lynx IP (G4)")
        XCTAssertEqual(OEMCode.cataLynxNtIp.dmxIn, 4)
        XCTAssertEqual(OEMCode.cataLynxNtIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.cataLynxNtIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynxNtIp.isRDMSupported, false)

        // OemCataLynxNtOp (0x2075)
        XCTAssertEqual(OEMCode.cataLynxNtOp, 0x2075)
        XCTAssertEqual(OEMCode.cataLynxNtOp.description, "OemCataLynxNtOp")
        XCTAssertEqual(OEMCode.cataLynxNtOp.mnemonic, "OemCataLynxNtOp")
        XCTAssertEqual(OEMCode.cataLynxNtOp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.cataLynxNtOp.product, "Cata-Lynx OP (G4)")
        XCTAssertEqual(OEMCode.cataLynxNtOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.cataLynxNtOp.dmxOut, 4)
        XCTAssertEqual(OEMCode.cataLynxNtOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cataLynxNtOp.isRDMSupported, true)

        // OemCelAud36 (0xD82)
        XCTAssertEqual(OEMCode.celAud36, 0xD82)
        XCTAssertEqual(OEMCode.celAud36.description, "OemCelAud36")
        XCTAssertEqual(OEMCode.celAud36.mnemonic, "OemCelAud36")
        XCTAssertEqual(OEMCode.celAud36.manufacturer, "Celestial Audio")
        XCTAssertEqual(OEMCode.celAud36.product, "DMX36")
        XCTAssertEqual(OEMCode.celAud36.dmxIn, 1)
        XCTAssertEqual(OEMCode.celAud36.dmxOut, 1)
        XCTAssertEqual(OEMCode.celAud36.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.celAud36.isRDMSupported, false)

        // OemCelAud8p (0xD81)
        XCTAssertEqual(OEMCode.celAud8p, 0xD81)
        XCTAssertEqual(OEMCode.celAud8p.description, "OemCelAud8p")
        XCTAssertEqual(OEMCode.celAud8p.mnemonic, "OemCelAud8p")
        XCTAssertEqual(OEMCode.celAud8p.manufacturer, "Celestial Audio")
        XCTAssertEqual(OEMCode.celAud8p.product, "EtherDMXArt8-Pro")
        XCTAssertEqual(OEMCode.celAud8p.dmxIn, 0)
        XCTAssertEqual(OEMCode.celAud8p.dmxOut, 4)
        XCTAssertEqual(OEMCode.celAud8p.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.celAud8p.isRDMSupported, false)

        // OemCelAud8s (0xD80)
        XCTAssertEqual(OEMCode.celAud8s, 0xD80)
        XCTAssertEqual(OEMCode.celAud8s.description, "OemCelAud8s")
        XCTAssertEqual(OEMCode.celAud8s.mnemonic, "OemCelAud8s")
        XCTAssertEqual(OEMCode.celAud8s.manufacturer, "Celestial Audio")
        XCTAssertEqual(OEMCode.celAud8s.product, "EtherDMXArt8-Simple")
        XCTAssertEqual(OEMCode.celAud8s.dmxIn, 0)
        XCTAssertEqual(OEMCode.celAud8s.dmxOut, 4)
        XCTAssertEqual(OEMCode.celAud8s.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.celAud8s.isRDMSupported, false)

        // OemChainZoneRt1 (0xAE0)
        XCTAssertEqual(OEMCode.chainZoneRt1, 0xAE0)
        XCTAssertEqual(OEMCode.chainZoneRt1.description, "OemChainZoneRt1")
        XCTAssertEqual(OEMCode.chainZoneRt1.mnemonic, "OemChainZoneRt1")
        XCTAssertEqual(OEMCode.chainZoneRt1.manufacturer, "chainzone")
        XCTAssertEqual(OEMCode.chainZoneRt1.product, "RoundTable")
        XCTAssertEqual(OEMCode.chainZoneRt1.dmxIn, 0)
        XCTAssertEqual(OEMCode.chainZoneRt1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chainZoneRt1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chainZoneRt1.isRDMSupported, false)

        // OemChamSysMq (0x8C0)
        XCTAssertEqual(OEMCode.chamSysMq, 0x8C0)
        XCTAssertEqual(OEMCode.chamSysMq.description, "OemChamSysMq")
        XCTAssertEqual(OEMCode.chamSysMq.mnemonic, "OemChamSysMq")
        XCTAssertEqual(OEMCode.chamSysMq.manufacturer, "ChamSys")
        XCTAssertEqual(OEMCode.chamSysMq.product, "MagicQ")
        XCTAssertEqual(OEMCode.chamSysMq.dmxIn, 0)
        XCTAssertEqual(OEMCode.chamSysMq.dmxOut, 0)
        XCTAssertEqual(OEMCode.chamSysMq.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chamSysMq.isRDMSupported, false)

        // OemChauvetEd642 (0x12F1)
        XCTAssertEqual(OEMCode.chauvetEd642, 0x12F1)
        XCTAssertEqual(OEMCode.chauvetEd642.description, "OemChauvetEd642")
        XCTAssertEqual(OEMCode.chauvetEd642.mnemonic, "OemChauvetEd642")
        XCTAssertEqual(OEMCode.chauvetEd642.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetEd642.product, "Epix Drive 642")
        XCTAssertEqual(OEMCode.chauvetEd642.dmxIn, 4)
        XCTAssertEqual(OEMCode.chauvetEd642.dmxOut, 0)
        XCTAssertEqual(OEMCode.chauvetEd642.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chauvetEd642.isRDMSupported, false)

        // OemChauvetEd900 (0x12F0)
        XCTAssertEqual(OEMCode.chauvetEd900, 0x12F0)
        XCTAssertEqual(OEMCode.chauvetEd900.description, "OemChauvetEd900")
        XCTAssertEqual(OEMCode.chauvetEd900.mnemonic, "OemChauvetEd900")
        XCTAssertEqual(OEMCode.chauvetEd900.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetEd900.product, "Epix Drive 900")
        XCTAssertEqual(OEMCode.chauvetEd900.dmxIn, 3)
        XCTAssertEqual(OEMCode.chauvetEd900.dmxOut, 0)
        XCTAssertEqual(OEMCode.chauvetEd900.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chauvetEd900.isRDMSupported, false)

        // OemChauvetEpixD2ip1 (0x2853)
        XCTAssertEqual(OEMCode.chauvetEpixD2ip1, 0x2853)
        XCTAssertEqual(OEMCode.chauvetEpixD2ip1.description, "OemChauvetEpixD2ip1")
        XCTAssertEqual(OEMCode.chauvetEpixD2ip1.mnemonic, "OemChauvetEpixD2ip1")
        XCTAssertEqual(OEMCode.chauvetEpixD2ip1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetEpixD2ip1.product, "Epix Drive 2000 IP")
        XCTAssertEqual(OEMCode.chauvetEpixD2ip1.dmxIn, 20)
        XCTAssertEqual(OEMCode.chauvetEpixD2ip1.dmxOut, 0)
        XCTAssertEqual(OEMCode.chauvetEpixD2ip1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chauvetEpixD2ip1.isRDMSupported, true)

        // OemChauvetMavMk1w (0x12F7)
        XCTAssertEqual(OEMCode.chauvetMavMk1w, 0x12F7)
        XCTAssertEqual(OEMCode.chauvetMavMk1w.description, "OemChauvetMavMk1w")
        XCTAssertEqual(OEMCode.chauvetMavMk1w.mnemonic, "OemChauvetMavMk1w")
        XCTAssertEqual(OEMCode.chauvetMavMk1w.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetMavMk1w.product, "Maverick Mk1 Wash")
        XCTAssertEqual(OEMCode.chauvetMavMk1w.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetMavMk1w.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetMavMk1w.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetMavMk1w.isRDMSupported, false)

        // OemChauvetMavMk2 (0x12F6)
        XCTAssertEqual(OEMCode.chauvetMavMk2, 0x12F6)
        XCTAssertEqual(OEMCode.chauvetMavMk2.description, "OemChauvetMavMk2")
        XCTAssertEqual(OEMCode.chauvetMavMk2.mnemonic, "OemChauvetMavMk2")
        XCTAssertEqual(OEMCode.chauvetMavMk2.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetMavMk2.product, "Maverick Mk2")
        XCTAssertEqual(OEMCode.chauvetMavMk2.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetMavMk2.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetMavMk2.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chauvetMavMk2.isRDMSupported, false)

        // OemChauvetMavMkx1 (0x12F8)
        XCTAssertEqual(OEMCode.chauvetMavMkx1, 0x12F8)
        XCTAssertEqual(OEMCode.chauvetMavMkx1.description, "OemChauvetMavMkx1")
        XCTAssertEqual(OEMCode.chauvetMavMkx1.mnemonic, "OemChauvetMavMkx1")
        XCTAssertEqual(OEMCode.chauvetMavMkx1.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetMavMkx1.product, "Maverick Mkx1 Wash")
        XCTAssertEqual(OEMCode.chauvetMavMkx1.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetMavMkx1.dmxOut, 1)
        XCTAssertEqual(OEMCode.chauvetMavMkx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetMavMkx1.isRDMSupported, false)

        // OemChauvetNetx (0x12F2)
        XCTAssertEqual(OEMCode.chauvetNetx, 0x12F2)
        XCTAssertEqual(OEMCode.chauvetNetx.description, "OemChauvetNetx")
        XCTAssertEqual(OEMCode.chauvetNetx.mnemonic, "OemChauvetNetx")
        XCTAssertEqual(OEMCode.chauvetNetx.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetNetx.product, "Net-X")
        XCTAssertEqual(OEMCode.chauvetNetx.dmxIn, 4)
        XCTAssertEqual(OEMCode.chauvetNetx.dmxOut, 4)
        XCTAssertEqual(OEMCode.chauvetNetx.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chauvetNetx.isRDMSupported, false)

        // OemChauvetNexus22 (0x12F4)
        XCTAssertEqual(OEMCode.chauvetNexus22, 0x12F4)
        XCTAssertEqual(OEMCode.chauvetNexus22.description, "OemChauvetNexus22")
        XCTAssertEqual(OEMCode.chauvetNexus22.mnemonic, "OemChauvetNexus22")
        XCTAssertEqual(OEMCode.chauvetNexus22.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetNexus22.product, "Nexus 2x2")
        XCTAssertEqual(OEMCode.chauvetNexus22.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetNexus22.dmxOut, 0)
        XCTAssertEqual(OEMCode.chauvetNexus22.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chauvetNexus22.isRDMSupported, false)

        // OemChauvetNexus41 (0x12F5)
        XCTAssertEqual(OEMCode.chauvetNexus41, 0x12F5)
        XCTAssertEqual(OEMCode.chauvetNexus41.description, "OemChauvetNexus41")
        XCTAssertEqual(OEMCode.chauvetNexus41.mnemonic, "OemChauvetNexus41")
        XCTAssertEqual(OEMCode.chauvetNexus41.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetNexus41.product, "Nexus 4x1")
        XCTAssertEqual(OEMCode.chauvetNexus41.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetNexus41.dmxOut, 0)
        XCTAssertEqual(OEMCode.chauvetNexus41.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chauvetNexus41.isRDMSupported, false)

        // OemChauvetNexus44 (0x12F3)
        XCTAssertEqual(OEMCode.chauvetNexus44, 0x12F3)
        XCTAssertEqual(OEMCode.chauvetNexus44.description, "OemChauvetNexus44")
        XCTAssertEqual(OEMCode.chauvetNexus44.mnemonic, "OemChauvetNexus44")
        XCTAssertEqual(OEMCode.chauvetNexus44.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetNexus44.product, "Nexus 4x4")
        XCTAssertEqual(OEMCode.chauvetNexus44.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetNexus44.dmxOut, 0)
        XCTAssertEqual(OEMCode.chauvetNexus44.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chauvetNexus44.isRDMSupported, false)

        // OemChauvetOvB2805fc (0x12FA)
        XCTAssertEqual(OEMCode.chauvetOvB2805fc, 0x12FA)
        XCTAssertEqual(OEMCode.chauvetOvB2805fc.description, "OemChauvetOvB2805fc")
        XCTAssertEqual(OEMCode.chauvetOvB2805fc.mnemonic, "OemChauvetOvB2805fc")
        XCTAssertEqual(OEMCode.chauvetOvB2805fc.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetOvB2805fc.product, "Ovation B-2805FC")
        XCTAssertEqual(OEMCode.chauvetOvB2805fc.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetOvB2805fc.dmxOut, 0)
        XCTAssertEqual(OEMCode.chauvetOvB2805fc.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chauvetOvB2805fc.isRDMSupported, false)

        // OemChauvetOvB565fc (0x12F9)
        XCTAssertEqual(OEMCode.chauvetOvB565fc, 0x12F9)
        XCTAssertEqual(OEMCode.chauvetOvB565fc.description, "OemChauvetOvB565fc")
        XCTAssertEqual(OEMCode.chauvetOvB565fc.mnemonic, "OemChauvetOvB565fc")
        XCTAssertEqual(OEMCode.chauvetOvB565fc.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetOvB565fc.product, "Ovation B-565FC")
        XCTAssertEqual(OEMCode.chauvetOvB565fc.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetOvB565fc.dmxOut, 0)
        XCTAssertEqual(OEMCode.chauvetOvB565fc.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chauvetOvB565fc.isRDMSupported, false)

        // OemChauvetProNetX20 (0x289D)
        XCTAssertEqual(OEMCode.chauvetProNetX20, 0x289D)
        XCTAssertEqual(OEMCode.chauvetProNetX20.description, "OemChauvetProNetX20")
        XCTAssertEqual(OEMCode.chauvetProNetX20.mnemonic, "OemChauvetProNetX20")
        XCTAssertEqual(OEMCode.chauvetProNetX20.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetProNetX20.product, "NET-X 2.0")
        XCTAssertEqual(OEMCode.chauvetProNetX20.dmxIn, 8)
        XCTAssertEqual(OEMCode.chauvetProNetX20.dmxOut, 8)
        XCTAssertEqual(OEMCode.chauvetProNetX20.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chauvetProNetX20.isRDMSupported, true)

        // OemChauvetVipD43s (0x12FB)
        XCTAssertEqual(OEMCode.chauvetVipD43s, 0x12FB)
        XCTAssertEqual(OEMCode.chauvetVipD43s.description, "OemChauvetVipD43s")
        XCTAssertEqual(OEMCode.chauvetVipD43s.mnemonic, "OemChauvetVipD43s")
        XCTAssertEqual(OEMCode.chauvetVipD43s.manufacturer, "Chauvet Professional")
        XCTAssertEqual(OEMCode.chauvetVipD43s.product, "VIP Drive 43s")
        XCTAssertEqual(OEMCode.chauvetVipD43s.dmxIn, 1)
        XCTAssertEqual(OEMCode.chauvetVipD43s.dmxOut, 0)
        XCTAssertEqual(OEMCode.chauvetVipD43s.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chauvetVipD43s.isRDMSupported, false)

        // OemChrmlechElidy (0xDE2)
        XCTAssertEqual(OEMCode.chrmlechElidy, 0xDE2)
        XCTAssertEqual(OEMCode.chrmlechElidy.description, "OemChrmlechElidy")
        XCTAssertEqual(OEMCode.chrmlechElidy.mnemonic, "OemChrmlechElidy")
        XCTAssertEqual(OEMCode.chrmlechElidy.manufacturer, "Chromlech")
        XCTAssertEqual(OEMCode.chrmlechElidy.product, "Elidy")
        XCTAssertEqual(OEMCode.chrmlechElidy.dmxIn, 1)
        XCTAssertEqual(OEMCode.chrmlechElidy.dmxOut, 1)
        XCTAssertEqual(OEMCode.chrmlechElidy.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chrmlechElidy.isRDMSupported, false)

        // OemChrmlechElidyR (0xDE3)
        XCTAssertEqual(OEMCode.chrmlechElidyR, 0xDE3)
        XCTAssertEqual(OEMCode.chrmlechElidyR.description, "OemChrmlechElidyR")
        XCTAssertEqual(OEMCode.chrmlechElidyR.mnemonic, "OemChrmlechElidyR")
        XCTAssertEqual(OEMCode.chrmlechElidyR.manufacturer, "Chromlech")
        XCTAssertEqual(OEMCode.chrmlechElidyR.product, "Elidy RDM")
        XCTAssertEqual(OEMCode.chrmlechElidyR.dmxIn, 1)
        XCTAssertEqual(OEMCode.chrmlechElidyR.dmxOut, 1)
        XCTAssertEqual(OEMCode.chrmlechElidyR.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chrmlechElidyR.isRDMSupported, true)

        // OemChrmlechElidyS (0xDE0)
        XCTAssertEqual(OEMCode.chrmlechElidyS, 0xDE0)
        XCTAssertEqual(OEMCode.chrmlechElidyS.description, "OemChrmlechElidyS")
        XCTAssertEqual(OEMCode.chrmlechElidyS.mnemonic, "OemChrmlechElidyS")
        XCTAssertEqual(OEMCode.chrmlechElidyS.manufacturer, "Chromlech")
        XCTAssertEqual(OEMCode.chrmlechElidyS.product, "Elidy S")
        XCTAssertEqual(OEMCode.chrmlechElidyS.dmxIn, 1)
        XCTAssertEqual(OEMCode.chrmlechElidyS.dmxOut, 1)
        XCTAssertEqual(OEMCode.chrmlechElidyS.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chrmlechElidyS.isRDMSupported, false)

        // OemChrmlechElidySR (0xDE1)
        XCTAssertEqual(OEMCode.chrmlechElidySR, 0xDE1)
        XCTAssertEqual(OEMCode.chrmlechElidySR.description, "OemChrmlechElidySR")
        XCTAssertEqual(OEMCode.chrmlechElidySR.mnemonic, "OemChrmlechElidySR")
        XCTAssertEqual(OEMCode.chrmlechElidySR.manufacturer, "Chromlech")
        XCTAssertEqual(OEMCode.chrmlechElidySR.product, "Elidy S RDM")
        XCTAssertEqual(OEMCode.chrmlechElidySR.dmxIn, 1)
        XCTAssertEqual(OEMCode.chrmlechElidySR.dmxOut, 1)
        XCTAssertEqual(OEMCode.chrmlechElidySR.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.chrmlechElidySR.isRDMSupported, true)

        // OemChromateqLp (0xD40)
        XCTAssertEqual(OEMCode.chromateqLp, 0xD40)
        XCTAssertEqual(OEMCode.chromateqLp.description, "OemChromateqLp")
        XCTAssertEqual(OEMCode.chromateqLp.mnemonic, "OemChromateqLp")
        XCTAssertEqual(OEMCode.chromateqLp.manufacturer, "Chromateq SARL")
        XCTAssertEqual(OEMCode.chromateqLp.product, "LED Player")
        XCTAssertEqual(OEMCode.chromateqLp.dmxIn, 0)
        XCTAssertEqual(OEMCode.chromateqLp.dmxOut, 4)
        XCTAssertEqual(OEMCode.chromateqLp.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chromateqLp.isRDMSupported, true)

        // OemChromateqPd (0xD41)
        XCTAssertEqual(OEMCode.chromateqPd, 0xD41)
        XCTAssertEqual(OEMCode.chromateqPd.description, "OemChromateqPd")
        XCTAssertEqual(OEMCode.chromateqPd.mnemonic, "OemChromateqPd")
        XCTAssertEqual(OEMCode.chromateqPd.manufacturer, "Chromateq SARL")
        XCTAssertEqual(OEMCode.chromateqPd.product, "Pro DMX")
        XCTAssertEqual(OEMCode.chromateqPd.dmxIn, 0)
        XCTAssertEqual(OEMCode.chromateqPd.dmxOut, 4)
        XCTAssertEqual(OEMCode.chromateqPd.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.chromateqPd.isRDMSupported, true)

        // OemCinEcb1 (0xAC0)
        XCTAssertEqual(OEMCode.cinEcb1, 0xAC0)
        XCTAssertEqual(OEMCode.cinEcb1.description, "OemCinEcb1")
        XCTAssertEqual(OEMCode.cinEcb1.mnemonic, "OemCinEcb1")
        XCTAssertEqual(OEMCode.cinEcb1.manufacturer, "Cinetix Medien und Interface GmbH")
        XCTAssertEqual(OEMCode.cinEcb1.product, "Ethernet/DMX512 Control Box,")
        XCTAssertEqual(OEMCode.cinEcb1.dmxIn, 0)
        XCTAssertEqual(OEMCode.cinEcb1.dmxOut, 1)
        XCTAssertEqual(OEMCode.cinEcb1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cinEcb1.isRDMSupported, false)

        // OemCinEg1 (0xAC1)
        XCTAssertEqual(OEMCode.cinEg1, 0xAC1)
        XCTAssertEqual(OEMCode.cinEg1.description, "OemCinEg1")
        XCTAssertEqual(OEMCode.cinEg1.mnemonic, "OemCinEg1")
        XCTAssertEqual(OEMCode.cinEg1.manufacturer, "Cinetix Medien und Interface GmbH")
        XCTAssertEqual(OEMCode.cinEg1.product, "Ethernet/DMX512 Generator")
        XCTAssertEqual(OEMCode.cinEg1.dmxIn, 0)
        XCTAssertEqual(OEMCode.cinEg1.dmxOut, 1)
        XCTAssertEqual(OEMCode.cinEg1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cinEg1.isRDMSupported, false)

        // OemCinEgio1 (0xAC2)
        XCTAssertEqual(OEMCode.cinEgio1, 0xAC2)
        XCTAssertEqual(OEMCode.cinEgio1.description, "OemCinEgio1")
        XCTAssertEqual(OEMCode.cinEgio1.mnemonic, "OemCinEgio1")
        XCTAssertEqual(OEMCode.cinEgio1.manufacturer, "Cinetix Medien und Interface GmbH")
        XCTAssertEqual(OEMCode.cinEgio1.product, "Ethernet/DMX512 GenIO")
        XCTAssertEqual(OEMCode.cinEgio1.dmxIn, 0)
        XCTAssertEqual(OEMCode.cinEgio1.dmxOut, 1)
        XCTAssertEqual(OEMCode.cinEgio1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cinEgio1.isRDMSupported, false)

        // OemCityShowNeo (0x831)
        XCTAssertEqual(OEMCode.cityShowNeo, 0x831)
        XCTAssertEqual(OEMCode.cityShowNeo.description, "OemCityShowNeo")
        XCTAssertEqual(OEMCode.cityShowNeo.mnemonic, "OemCityShowNeo")
        XCTAssertEqual(OEMCode.cityShowNeo.manufacturer, "City Theatrical")
        XCTAssertEqual(OEMCode.cityShowNeo.product, "SHoW DMX Neo Transceiver")
        XCTAssertEqual(OEMCode.cityShowNeo.dmxIn, 0)
        XCTAssertEqual(OEMCode.cityShowNeo.dmxOut, 2)
        XCTAssertEqual(OEMCode.cityShowNeo.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cityShowNeo.isRDMSupported, true)

        // OemCityShowTx (0x830)
        XCTAssertEqual(OEMCode.cityShowTx, 0x830)
        XCTAssertEqual(OEMCode.cityShowTx.description, "OemCityShowTx")
        XCTAssertEqual(OEMCode.cityShowTx.mnemonic, "OemCityShowTx")
        XCTAssertEqual(OEMCode.cityShowTx.manufacturer, "City Theatrical")
        XCTAssertEqual(OEMCode.cityShowTx.product, "SHoW DMX Transmitter")
        XCTAssertEqual(OEMCode.cityShowTx.dmxIn, 0)
        XCTAssertEqual(OEMCode.cityShowTx.dmxOut, 1)
        XCTAssertEqual(OEMCode.cityShowTx.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.cityShowTx.isRDMSupported, true)

        // OemCityTheatPds375Trx (0xAF1)
        XCTAssertEqual(OEMCode.cityTheatPds375Trx, 0xAF1)
        XCTAssertEqual(OEMCode.cityTheatPds375Trx.description, "OemCityTheatPds375Trx")
        XCTAssertEqual(OEMCode.cityTheatPds375Trx.mnemonic, "OemCityTheatPds375Trx")
        XCTAssertEqual(OEMCode.cityTheatPds375Trx.manufacturer, "City Theatrical, Inc")
        XCTAssertEqual(OEMCode.cityTheatPds375Trx.product, "PDS-375TRX")
        XCTAssertEqual(OEMCode.cityTheatPds375Trx.dmxIn, 0)
        XCTAssertEqual(OEMCode.cityTheatPds375Trx.dmxOut, 1)
        XCTAssertEqual(OEMCode.cityTheatPds375Trx.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cityTheatPds375Trx.isRDMSupported, true)

        // OemCityTheatPds750Trx (0xAF0)
        XCTAssertEqual(OEMCode.cityTheatPds750Trx, 0xAF0)
        XCTAssertEqual(OEMCode.cityTheatPds750Trx.description, "OemCityTheatPds750Trx")
        XCTAssertEqual(OEMCode.cityTheatPds750Trx.mnemonic, "OemCityTheatPds750Trx")
        XCTAssertEqual(OEMCode.cityTheatPds750Trx.manufacturer, "City Theatrical, Inc")
        XCTAssertEqual(OEMCode.cityTheatPds750Trx.product, "PDS-750TRX")
        XCTAssertEqual(OEMCode.cityTheatPds750Trx.dmxIn, 0)
        XCTAssertEqual(OEMCode.cityTheatPds750Trx.dmxOut, 1)
        XCTAssertEqual(OEMCode.cityTheatPds750Trx.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cityTheatPds750Trx.isRDMSupported, true)

        // OemClaudeHeinDesLxCon1 (0x1250)
        XCTAssertEqual(OEMCode.claudeHeinDesLxCon1, 0x1250)
        XCTAssertEqual(OEMCode.claudeHeinDesLxCon1.description, "OemClaudeHeinDesLxCon1")
        XCTAssertEqual(OEMCode.claudeHeinDesLxCon1.mnemonic, "OemClaudeHeinDesLxCon1")
        XCTAssertEqual(OEMCode.claudeHeinDesLxCon1.manufacturer, "Claude Heintz Design")
        XCTAssertEqual(OEMCode.claudeHeinDesLxCon1.product, "LXConsole")
        XCTAssertEqual(OEMCode.claudeHeinDesLxCon1.dmxIn, 1)
        XCTAssertEqual(OEMCode.claudeHeinDesLxCon1.dmxOut, 1)
        XCTAssertEqual(OEMCode.claudeHeinDesLxCon1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.claudeHeinDesLxCon1.isRDMSupported, false)

        // OemClayPackyAledaKeyeK10Hcr1 (0x28B8)
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK10Hcr1, 0x28B8)
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK10Hcr1.description, "OemClayPackyAledaKeyeK10Hcr1")
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK10Hcr1.mnemonic, "OemClayPackyAledaKeyeK10Hcr1")
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK10Hcr1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK10Hcr1.product, "ALEDA K-EYE K10 HCR")
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK10Hcr1.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK10Hcr1.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK10Hcr1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK10Hcr1.isRDMSupported, true)

        // OemClayPackyAledaKeyeK20Hcr1 (0x28B7)
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK20Hcr1, 0x28B7)
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK20Hcr1.description, "OemClayPackyAledaKeyeK20Hcr1")
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK20Hcr1.mnemonic, "OemClayPackyAledaKeyeK20Hcr1")
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK20Hcr1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK20Hcr1.product, "ALEDA K-EYE K20 HCR")
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK20Hcr1.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK20Hcr1.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK20Hcr1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPackyAledaKeyeK20Hcr1.isRDMSupported, true)

        // OemClayPackyAxcorBeam300 (0x28B6)
        XCTAssertEqual(OEMCode.clayPackyAxcorBeam300, 0x28B6)
        XCTAssertEqual(OEMCode.clayPackyAxcorBeam300.description, "OemClayPackyAxcorBeam300")
        XCTAssertEqual(OEMCode.clayPackyAxcorBeam300.mnemonic, "OemClayPackyAxcorBeam300")
        XCTAssertEqual(OEMCode.clayPackyAxcorBeam300.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPackyAxcorBeam300.product, "AXCOR BEAM 300")
        XCTAssertEqual(OEMCode.clayPackyAxcorBeam300.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPackyAxcorBeam300.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPackyAxcorBeam300.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPackyAxcorBeam300.isRDMSupported, true)

        // OemClayPackyAxcorProfile9003k1 (0x28B9)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9003k1, 0x28B9)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9003k1.description, "OemClayPackyAxcorProfile9003k1")
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9003k1.mnemonic, "OemClayPackyAxcorProfile9003k1")
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9003k1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9003k1.product, "AXCOR PROFILE 900-3K")
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9003k1.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9003k1.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9003k1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9003k1.isRDMSupported, true)

        // OemClayPackyAxcorProfile9006k1 (0x28BA)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9006k1, 0x28BA)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9006k1.description, "OemClayPackyAxcorProfile9006k1")
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9006k1.mnemonic, "OemClayPackyAxcorProfile9006k1")
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9006k1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9006k1.product, "AXCOR PROFILE 900-6K")
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9006k1.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9006k1.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9006k1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9006k1.isRDMSupported, true)

        // OemClayPackyAxcorProfile9008k1 (0x28BB)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9008k1, 0x28BB)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9008k1.description, "OemClayPackyAxcorProfile9008k1")
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9008k1.mnemonic, "OemClayPackyAxcorProfile9008k1")
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9008k1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9008k1.product, "AXCOR PROFILE 900-8K")
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9008k1.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9008k1.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9008k1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPackyAxcorProfile9008k1.isRDMSupported, true)

        // OemClayPackyAxcorWash300 (0x28B5)
        XCTAssertEqual(OEMCode.clayPackyAxcorWash300, 0x28B5)
        XCTAssertEqual(OEMCode.clayPackyAxcorWash300.description, "OemClayPackyAxcorWash300")
        XCTAssertEqual(OEMCode.clayPackyAxcorWash300.mnemonic, "OemClayPackyAxcorWash300")
        XCTAssertEqual(OEMCode.clayPackyAxcorWash300.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPackyAxcorWash300.product, "AXCOR WASH 300")
        XCTAssertEqual(OEMCode.clayPackyAxcorWash300.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPackyAxcorWash300.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPackyAxcorWash300.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPackyAxcorWash300.isRDMSupported, true)

        // OemClayPackySpotHpe3001 (0x28B3)
        XCTAssertEqual(OEMCode.clayPackySpotHpe3001, 0x28B3)
        XCTAssertEqual(OEMCode.clayPackySpotHpe3001.description, "OemClayPackySpotHpe3001")
        XCTAssertEqual(OEMCode.clayPackySpotHpe3001.mnemonic, "OemClayPackySpotHpe3001")
        XCTAssertEqual(OEMCode.clayPackySpotHpe3001.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPackySpotHpe3001.product, "AXCOR SPOT HPE 300")
        XCTAssertEqual(OEMCode.clayPackySpotHpe3001.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPackySpotHpe3001.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPackySpotHpe3001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPackySpotHpe3001.isRDMSupported, true)

        // OemClayPakyAledaK10 (0xA8F)
        XCTAssertEqual(OEMCode.clayPakyAledaK10, 0xA8F)
        XCTAssertEqual(OEMCode.clayPakyAledaK10.description, "OemClayPakyAledaK10")
        XCTAssertEqual(OEMCode.clayPakyAledaK10.mnemonic, "OemClayPakyAledaK10")
        XCTAssertEqual(OEMCode.clayPakyAledaK10.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAledaK10.product, "Aleda K10")
        XCTAssertEqual(OEMCode.clayPakyAledaK10.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPakyAledaK10.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPakyAledaK10.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAledaK10.isRDMSupported, true)

        // OemClayPakyAledaK10BEye (0xA94)
        XCTAssertEqual(OEMCode.clayPakyAledaK10BEye, 0xA94)
        XCTAssertEqual(OEMCode.clayPakyAledaK10BEye.description, "OemClayPakyAledaK10BEye")
        XCTAssertEqual(OEMCode.clayPakyAledaK10BEye.mnemonic, "OemClayPakyAledaK10BEye")
        XCTAssertEqual(OEMCode.clayPakyAledaK10BEye.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAledaK10BEye.product, "Aleda K10 B-Eye")
        XCTAssertEqual(OEMCode.clayPakyAledaK10BEye.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPakyAledaK10BEye.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPakyAledaK10BEye.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAledaK10BEye.isRDMSupported, true)

        // OemClayPakyAledaK20 (0xA90)
        XCTAssertEqual(OEMCode.clayPakyAledaK20, 0xA90)
        XCTAssertEqual(OEMCode.clayPakyAledaK20.description, "OemClayPakyAledaK20")
        XCTAssertEqual(OEMCode.clayPakyAledaK20.mnemonic, "OemClayPakyAledaK20")
        XCTAssertEqual(OEMCode.clayPakyAledaK20.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAledaK20.product, "Aleda K20")
        XCTAssertEqual(OEMCode.clayPakyAledaK20.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPakyAledaK20.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPakyAledaK20.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAledaK20.isRDMSupported, true)

        // OemClayPakyAledaK20BEye (0xA93)
        XCTAssertEqual(OEMCode.clayPakyAledaK20BEye, 0xA93)
        XCTAssertEqual(OEMCode.clayPakyAledaK20BEye.description, "OemClayPakyAledaK20BEye")
        XCTAssertEqual(OEMCode.clayPakyAledaK20BEye.mnemonic, "OemClayPakyAledaK20BEye")
        XCTAssertEqual(OEMCode.clayPakyAledaK20BEye.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAledaK20BEye.product, "Aleda K20 B-Eye")
        XCTAssertEqual(OEMCode.clayPakyAledaK20BEye.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPakyAledaK20BEye.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPakyAledaK20BEye.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAledaK20BEye.isRDMSupported, true)

        // OemClayPakyAledaK5 (0xA8E)
        XCTAssertEqual(OEMCode.clayPakyAledaK5, 0xA8E)
        XCTAssertEqual(OEMCode.clayPakyAledaK5.description, "OemClayPakyAledaK5")
        XCTAssertEqual(OEMCode.clayPakyAledaK5.mnemonic, "OemClayPakyAledaK5")
        XCTAssertEqual(OEMCode.clayPakyAledaK5.manufacturer, "Clay Paky S.p.A.")
        XCTAssertNil(OEMCode.clayPakyAledaK5.product)
        XCTAssertEqual(OEMCode.clayPakyAledaK5.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPakyAledaK5.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPakyAledaK5.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyAledaK5.isRDMSupported, true)

        // OemClayPakyAlphaBeam1500 (0xA84)
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam1500, 0xA84)
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam1500.description, "OemClayPakyAlphaBeam1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam1500.mnemonic, "OemClayPakyAlphaBeam1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam1500.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam1500.product, "Alpha Beam 1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam1500.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam1500.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam1500.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam1500.isRDMSupported, true)

        // OemClayPakyAlphaBeam700 (0xA81)
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam700, 0xA81)
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam700.description, "OemClayPakyAlphaBeam700")
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam700.mnemonic, "OemClayPakyAlphaBeam700")
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam700.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam700.product, "Alpha Beam 700")
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam700.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam700.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam700.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyAlphaBeam700.isRDMSupported, true)

        // OemClayPakyAlphaProfile1500 (0xA87)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500, 0xA87)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500.description, "OemClayPakyAlphaProfile1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500.mnemonic, "OemClayPakyAlphaProfile1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500.product, "Alpha Profile 1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500.isRDMSupported, true)

        // OemClayPakyAlphaProfile1500Q (0xA8C)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500Q, 0xA8C)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500Q.description, "OemClayPakyAlphaProfile1500Q")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500Q.mnemonic, "OemClayPakyAlphaProfile1500Q")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500Q.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500Q.product, "Alpha Profile 1500Q")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500Q.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500Q.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500Q.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile1500Q.isRDMSupported, true)

        // OemClayPakyAlphaProfile700 (0xA83)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile700, 0xA83)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile700.description, "OemClayPakyAlphaProfile700")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile700.mnemonic, "OemClayPakyAlphaProfile700")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile700.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile700.product, "Alpha Profile 700")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile700.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile700.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile700.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile700.isRDMSupported, true)

        // OemClayPakyAlphaProfile800 (0xA8D)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile800, 0xA8D)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile800.description, "OemClayPakyAlphaProfile800")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile800.mnemonic, "OemClayPakyAlphaProfile800")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile800.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile800.product, "Alpha Profile 800")
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile800.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile800.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile800.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyAlphaProfile800.isRDMSupported, true)

        // OemClayPakyAlphaSpotHPE1500 (0xA86)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE1500, 0xA86)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE1500.description, "OemClayPakyAlphaSpotHPE1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE1500.mnemonic, "OemClayPakyAlphaSpotHPE1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE1500.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE1500.product, "Alpha Spot HPE 1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE1500.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE1500.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE1500.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE1500.isRDMSupported, true)

        // OemClayPakyAlphaSpotHPE700 (0xA80)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE700, 0xA80)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE700.description, "OemClayPakyAlphaSpotHPE700")
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE700.mnemonic, "OemClayPakyAlphaSpotHPE700")
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE700.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE700.product, "Alpha Spot HPE 700")
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE700.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE700.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE700.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotHPE700.isRDMSupported, true)

        // OemClayPakyAlphaSpotQwo800 (0xA8B)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotQwo800, 0xA8B)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotQwo800.description, "OemClayPakyAlphaSpotQwo800")
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotQwo800.mnemonic, "OemClayPakyAlphaSpotQwo800")
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotQwo800.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotQwo800.product, "Alpha Spot QWO800")
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotQwo800.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotQwo800.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotQwo800.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyAlphaSpotQwo800.isRDMSupported, true)

        // OemClayPakyAlphaWash1500 (0xA88)
        XCTAssertEqual(OEMCode.clayPakyAlphaWash1500, 0xA88)
        XCTAssertEqual(OEMCode.clayPakyAlphaWash1500.description, "OemClayPakyAlphaWash1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaWash1500.mnemonic, "OemClayPakyAlphaWash1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaWash1500.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAlphaWash1500.product, "Alpha Wash 1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaWash1500.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlphaWash1500.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyAlphaWash1500.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyAlphaWash1500.isRDMSupported, true)

        // OemClayPakyAlphaWash700 (0xA82)
        XCTAssertEqual(OEMCode.clayPakyAlphaWash700, 0xA82)
        XCTAssertEqual(OEMCode.clayPakyAlphaWash700.description, "OemClayPakyAlphaWash700")
        XCTAssertEqual(OEMCode.clayPakyAlphaWash700.mnemonic, "OemClayPakyAlphaWash700")
        XCTAssertEqual(OEMCode.clayPakyAlphaWash700.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAlphaWash700.product, "Alpha Wash 700")
        XCTAssertEqual(OEMCode.clayPakyAlphaWash700.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlphaWash700.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyAlphaWash700.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyAlphaWash700.isRDMSupported, true)

        // OemClayPakyAlphaWashLT1500 (0xA85)
        XCTAssertEqual(OEMCode.clayPakyAlphaWashLT1500, 0xA85)
        XCTAssertEqual(OEMCode.clayPakyAlphaWashLT1500.description, "OemClayPakyAlphaWashLT1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaWashLT1500.mnemonic, "OemClayPakyAlphaWashLT1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaWashLT1500.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyAlphaWashLT1500.product, "Alpha Wash LT1500")
        XCTAssertEqual(OEMCode.clayPakyAlphaWashLT1500.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyAlphaWashLT1500.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyAlphaWashLT1500.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyAlphaWashLT1500.isRDMSupported, true)

        // OemClayPakyHepikos (0xA9C)
        XCTAssertEqual(OEMCode.clayPakyHepikos, 0xA9C)
        XCTAssertEqual(OEMCode.clayPakyHepikos.description, "OemClayPakyHepikos")
        XCTAssertEqual(OEMCode.clayPakyHepikos.mnemonic, "OemClayPakyHepikos")
        XCTAssertEqual(OEMCode.clayPakyHepikos.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyHepikos.product, "HEPIKOS")
        XCTAssertEqual(OEMCode.clayPakyHepikos.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyHepikos.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyHepikos.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyHepikos.isRDMSupported, true)

        // OemClayPakyKEYES10HCR1 (0x28D1)
        XCTAssertEqual(OEMCode.clayPakyKEYES10HCR1, 0x28D1)
        XCTAssertEqual(OEMCode.clayPakyKEYES10HCR1.description, "OemClayPakyKEYES10HCR1")
        XCTAssertEqual(OEMCode.clayPakyKEYES10HCR1.mnemonic, "OemClayPakyKEYES10HCR1")
        XCTAssertEqual(OEMCode.clayPakyKEYES10HCR1.manufacturer, "CLAYPAKY")
        XCTAssertEqual(OEMCode.clayPakyKEYES10HCR1.product, "K-EYE S10 HCR")
        XCTAssertEqual(OEMCode.clayPakyKEYES10HCR1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyKEYES10HCR1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyKEYES10HCR1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyKEYES10HCR1.isRDMSupported, false)

        // OemClayPakyKEYES20HCR1 (0x28D2)
        XCTAssertEqual(OEMCode.clayPakyKEYES20HCR1, 0x28D2)
        XCTAssertEqual(OEMCode.clayPakyKEYES20HCR1.description, "OemClayPakyKEYES20HCR1")
        XCTAssertEqual(OEMCode.clayPakyKEYES20HCR1.mnemonic, "OemClayPakyKEYES20HCR1")
        XCTAssertEqual(OEMCode.clayPakyKEYES20HCR1.manufacturer, "CLAYPAKY")
        XCTAssertEqual(OEMCode.clayPakyKEYES20HCR1.product, "K-EYE S20 HCR")
        XCTAssertEqual(OEMCode.clayPakyKEYES20HCR1.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyKEYES20HCR1.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyKEYES20HCR1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyKEYES20HCR1.isRDMSupported, false)

        // OemClayPakyMythos (0xA96)
        XCTAssertEqual(OEMCode.clayPakyMythos, 0xA96)
        XCTAssertEqual(OEMCode.clayPakyMythos.description, "OemClayPakyMythos")
        XCTAssertEqual(OEMCode.clayPakyMythos.mnemonic, "OemClayPakyMythos")
        XCTAssertEqual(OEMCode.clayPakyMythos.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyMythos.product, "Mythos")
        XCTAssertEqual(OEMCode.clayPakyMythos.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPakyMythos.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPakyMythos.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyMythos.isRDMSupported, true)

        // OemClayPakyMythos2 (0xA9F)
        XCTAssertEqual(OEMCode.clayPakyMythos2, 0xA9F)
        XCTAssertEqual(OEMCode.clayPakyMythos2.description, "OemClayPakyMythos2")
        XCTAssertEqual(OEMCode.clayPakyMythos2.mnemonic, "OemClayPakyMythos2")
        XCTAssertEqual(OEMCode.clayPakyMythos2.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyMythos2.product, "MYTHOS2")
        XCTAssertEqual(OEMCode.clayPakyMythos2.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyMythos2.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyMythos2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyMythos2.isRDMSupported, true)

        // OemClayPakySceniusProfile (0xA98)
        XCTAssertEqual(OEMCode.clayPakySceniusProfile, 0xA98)
        XCTAssertEqual(OEMCode.clayPakySceniusProfile.description, "OemClayPakySceniusProfile")
        XCTAssertEqual(OEMCode.clayPakySceniusProfile.mnemonic, "OemClayPakySceniusProfile")
        XCTAssertEqual(OEMCode.clayPakySceniusProfile.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakySceniusProfile.product, "SCENIUS PROFILE")
        XCTAssertEqual(OEMCode.clayPakySceniusProfile.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPakySceniusProfile.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPakySceniusProfile.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakySceniusProfile.isRDMSupported, true)

        // OemClayPakySceniusSpot (0xA99)
        XCTAssertEqual(OEMCode.clayPakySceniusSpot, 0xA99)
        XCTAssertEqual(OEMCode.clayPakySceniusSpot.description, "OemClayPakySceniusSpot")
        XCTAssertEqual(OEMCode.clayPakySceniusSpot.mnemonic, "OemClayPakySceniusSpot")
        XCTAssertEqual(OEMCode.clayPakySceniusSpot.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakySceniusSpot.product, "SCENIUS SPOT")
        XCTAssertEqual(OEMCode.clayPakySceniusSpot.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPakySceniusSpot.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPakySceniusSpot.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakySceniusSpot.isRDMSupported, true)

        // OemClayPakySceniusUnico1 (0x28A3)
        XCTAssertEqual(OEMCode.clayPakySceniusUnico1, 0x28A3)
        XCTAssertEqual(OEMCode.clayPakySceniusUnico1.description, "OemClayPakySceniusUnico1")
        XCTAssertEqual(OEMCode.clayPakySceniusUnico1.mnemonic, "OemClayPakySceniusUnico1")
        XCTAssertEqual(OEMCode.clayPakySceniusUnico1.manufacturer, "CLAY PAKY")
        XCTAssertEqual(OEMCode.clayPakySceniusUnico1.product, "SCENIUS UNICO")
        XCTAssertEqual(OEMCode.clayPakySceniusUnico1.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPakySceniusUnico1.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPakySceniusUnico1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakySceniusUnico1.isRDMSupported, true)

        // OemClayPakySharbar (0xA9E)
        XCTAssertEqual(OEMCode.clayPakySharbar, 0xA9E)
        XCTAssertEqual(OEMCode.clayPakySharbar.description, "OemClayPakySharbar")
        XCTAssertEqual(OEMCode.clayPakySharbar.mnemonic, "OemClayPakySharbar")
        XCTAssertEqual(OEMCode.clayPakySharbar.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakySharbar.product, "SHAR-BAR")
        XCTAssertEqual(OEMCode.clayPakySharbar.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakySharbar.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakySharbar.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakySharbar.isRDMSupported, true)

        // OemClayPakySharpy (0xA89)
        XCTAssertEqual(OEMCode.clayPakySharpy, 0xA89)
        XCTAssertEqual(OEMCode.clayPakySharpy.description, "OemClayPakySharpy")
        XCTAssertEqual(OEMCode.clayPakySharpy.mnemonic, "OemClayPakySharpy")
        XCTAssertEqual(OEMCode.clayPakySharpy.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakySharpy.product, "Sharpy")
        XCTAssertEqual(OEMCode.clayPakySharpy.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakySharpy.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakySharpy.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakySharpy.isRDMSupported, true)

        // OemClayPakySharpyWash (0xA91)
        XCTAssertEqual(OEMCode.clayPakySharpyWash, 0xA91)
        XCTAssertEqual(OEMCode.clayPakySharpyWash.description, "OemClayPakySharpyWash")
        XCTAssertEqual(OEMCode.clayPakySharpyWash.mnemonic, "OemClayPakySharpyWash")
        XCTAssertEqual(OEMCode.clayPakySharpyWash.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakySharpyWash.product, "Sharpy Wash")
        XCTAssertEqual(OEMCode.clayPakySharpyWash.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPakySharpyWash.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPakySharpyWash.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakySharpyWash.isRDMSupported, true)

        // OemClayPakyShotLightWash (0xA8A)
        XCTAssertEqual(OEMCode.clayPakyShotLightWash, 0xA8A)
        XCTAssertEqual(OEMCode.clayPakyShotLightWash.description, "OemClayPakyShotLightWash")
        XCTAssertEqual(OEMCode.clayPakyShotLightWash.mnemonic, "OemClayPakyShotLightWash")
        XCTAssertEqual(OEMCode.clayPakyShotLightWash.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyShotLightWash.product, "Shot Light Wash")
        XCTAssertEqual(OEMCode.clayPakyShotLightWash.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyShotLightWash.dmxOut, 0)
        XCTAssertEqual(OEMCode.clayPakyShotLightWash.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.clayPakyShotLightWash.isRDMSupported, true)

        // OemClayPakyShowBatten (0xA9D)
        XCTAssertEqual(OEMCode.clayPakyShowBatten, 0xA9D)
        XCTAssertEqual(OEMCode.clayPakyShowBatten.description, "OemClayPakyShowBatten")
        XCTAssertEqual(OEMCode.clayPakyShowBatten.mnemonic, "OemClayPakyShowBatten")
        XCTAssertEqual(OEMCode.clayPakyShowBatten.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakyShowBatten.product, "SHOWBATTEN")
        XCTAssertEqual(OEMCode.clayPakyShowBatten.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakyShowBatten.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakyShowBatten.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakyShowBatten.isRDMSupported, true)

        // OemClayPakySpheriscan (0xA9A)
        XCTAssertEqual(OEMCode.clayPakySpheriscan, 0xA9A)
        XCTAssertEqual(OEMCode.clayPakySpheriscan.description, "OemClayPakySpheriscan")
        XCTAssertEqual(OEMCode.clayPakySpheriscan.mnemonic, "OemClayPakySpheriscan")
        XCTAssertEqual(OEMCode.clayPakySpheriscan.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakySpheriscan.product, "SPHERISCAN")
        XCTAssertEqual(OEMCode.clayPakySpheriscan.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakySpheriscan.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakySpheriscan.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakySpheriscan.isRDMSupported, true)

        // OemClayPakySpherlight (0xA9B)
        XCTAssertEqual(OEMCode.clayPakySpherlight, 0xA9B)
        XCTAssertEqual(OEMCode.clayPakySpherlight.description, "OemClayPakySpherlight")
        XCTAssertEqual(OEMCode.clayPakySpherlight.mnemonic, "OemClayPakySpherlight")
        XCTAssertEqual(OEMCode.clayPakySpherlight.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakySpherlight.product, "SPHERLIGHT")
        XCTAssertEqual(OEMCode.clayPakySpherlight.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakySpherlight.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakySpherlight.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakySpherlight.isRDMSupported, true)

        // OemClayPakySuperSharpy (0xA95)
        XCTAssertEqual(OEMCode.clayPakySuperSharpy, 0xA95)
        XCTAssertEqual(OEMCode.clayPakySuperSharpy.description, "OemClayPakySuperSharpy")
        XCTAssertEqual(OEMCode.clayPakySuperSharpy.mnemonic, "OemClayPakySuperSharpy")
        XCTAssertEqual(OEMCode.clayPakySuperSharpy.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakySuperSharpy.product, "SuperSharpy")
        XCTAssertEqual(OEMCode.clayPakySuperSharpy.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPakySuperSharpy.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPakySuperSharpy.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakySuperSharpy.isRDMSupported, true)

        // OemClayPakySuperSharpy2 (0x2806)
        XCTAssertEqual(OEMCode.clayPakySuperSharpy2, 0x2806)
        XCTAssertEqual(OEMCode.clayPakySuperSharpy2.description, "OemClayPakySuperSharpy2")
        XCTAssertEqual(OEMCode.clayPakySuperSharpy2.mnemonic, "OemClayPakySuperSharpy2")
        XCTAssertEqual(OEMCode.clayPakySuperSharpy2.manufacturer, "Clay Paky S.p.A.")
        XCTAssertNil(OEMCode.clayPakySuperSharpy2.product)
        XCTAssertEqual(OEMCode.clayPakySuperSharpy2.dmxIn, 1)
        XCTAssertEqual(OEMCode.clayPakySuperSharpy2.dmxOut, 1)
        XCTAssertEqual(OEMCode.clayPakySuperSharpy2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakySuperSharpy2.isRDMSupported, true)

        // OemClayPakySuperSharpyPc (0xA97)
        XCTAssertEqual(OEMCode.clayPakySuperSharpyPc, 0xA97)
        XCTAssertEqual(OEMCode.clayPakySuperSharpyPc.description, "OemClayPakySuperSharpyPc")
        XCTAssertEqual(OEMCode.clayPakySuperSharpyPc.mnemonic, "OemClayPakySuperSharpyPc")
        XCTAssertEqual(OEMCode.clayPakySuperSharpyPc.manufacturer, "Clay Paky S.p.A.")
        XCTAssertEqual(OEMCode.clayPakySuperSharpyPc.product, "Sharpy Wash PC")
        XCTAssertEqual(OEMCode.clayPakySuperSharpyPc.dmxIn, 2)
        XCTAssertEqual(OEMCode.clayPakySuperSharpyPc.dmxOut, 2)
        XCTAssertEqual(OEMCode.clayPakySuperSharpyPc.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.clayPakySuperSharpyPc.isRDMSupported, true)

        // OemCoemDR1p (0x8A5)
        XCTAssertEqual(OEMCode.coemDR1p, 0x8A5)
        XCTAssertEqual(OEMCode.coemDR1p.description, "OemCoemDR1p")
        XCTAssertEqual(OEMCode.coemDR1p.mnemonic, "OemCoemDR1p")
        XCTAssertEqual(OEMCode.coemDR1p.manufacturer, "COEMAR")
        XCTAssertEqual(OEMCode.coemDR1p.product, "DR1+")
        XCTAssertEqual(OEMCode.coemDR1p.dmxIn, 2)
        XCTAssertEqual(OEMCode.coemDR1p.dmxOut, 2)
        XCTAssertEqual(OEMCode.coemDR1p.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.coemDR1p.isRDMSupported, false)

        // OemCoemInfAclM (0x8A8)
        XCTAssertEqual(OEMCode.coemInfAclM, 0x8A8)
        XCTAssertEqual(OEMCode.coemInfAclM.description, "OemCoemInfAclM")
        XCTAssertEqual(OEMCode.coemInfAclM.mnemonic, "OemCoemInfAclM")
        XCTAssertEqual(OEMCode.coemInfAclM.manufacturer, "COEMAR")
        XCTAssertEqual(OEMCode.coemInfAclM.product, "Infinity ACL M")
        XCTAssertEqual(OEMCode.coemInfAclM.dmxIn, 1)
        XCTAssertEqual(OEMCode.coemInfAclM.dmxOut, 1)
        XCTAssertEqual(OEMCode.coemInfAclM.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.coemInfAclM.isRDMSupported, false)

        // OemCoemInfAclS (0x8A2)
        XCTAssertEqual(OEMCode.coemInfAclS, 0x8A2)
        XCTAssertEqual(OEMCode.coemInfAclS.description, "OemCoemInfAclS")
        XCTAssertEqual(OEMCode.coemInfAclS.mnemonic, "OemCoemInfAclS")
        XCTAssertEqual(OEMCode.coemInfAclS.manufacturer, "COEMAR")
        XCTAssertEqual(OEMCode.coemInfAclS.product, "Infinity ACL S")
        XCTAssertEqual(OEMCode.coemInfAclS.dmxIn, 1)
        XCTAssertEqual(OEMCode.coemInfAclS.dmxOut, 1)
        XCTAssertEqual(OEMCode.coemInfAclS.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.coemInfAclS.isRDMSupported, false)

        // OemCoemInfSpotM (0x8A6)
        XCTAssertEqual(OEMCode.coemInfSpotM, 0x8A6)
        XCTAssertEqual(OEMCode.coemInfSpotM.description, "OemCoemInfSpotM")
        XCTAssertEqual(OEMCode.coemInfSpotM.mnemonic, "OemCoemInfSpotM")
        XCTAssertEqual(OEMCode.coemInfSpotM.manufacturer, "COEMAR")
        XCTAssertEqual(OEMCode.coemInfSpotM.product, "Infinity Spot M")
        XCTAssertEqual(OEMCode.coemInfSpotM.dmxIn, 1)
        XCTAssertEqual(OEMCode.coemInfSpotM.dmxOut, 1)
        XCTAssertEqual(OEMCode.coemInfSpotM.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.coemInfSpotM.isRDMSupported, false)

        // OemCoemInfSpotS (0x8A0)
        XCTAssertEqual(OEMCode.coemInfSpotS, 0x8A0)
        XCTAssertEqual(OEMCode.coemInfSpotS.description, "OemCoemInfSpotS")
        XCTAssertEqual(OEMCode.coemInfSpotS.mnemonic, "OemCoemInfSpotS")
        XCTAssertEqual(OEMCode.coemInfSpotS.manufacturer, "COEMAR")
        XCTAssertEqual(OEMCode.coemInfSpotS.product, "Infinity Spot S")
        XCTAssertEqual(OEMCode.coemInfSpotS.dmxIn, 1)
        XCTAssertEqual(OEMCode.coemInfSpotS.dmxOut, 1)
        XCTAssertEqual(OEMCode.coemInfSpotS.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.coemInfSpotS.isRDMSupported, false)

        // OemCoemInfSptXL (0x8A3)
        XCTAssertEqual(OEMCode.coemInfSptXL, 0x8A3)
        XCTAssertEqual(OEMCode.coemInfSptXL.description, "OemCoemInfSptXL")
        XCTAssertEqual(OEMCode.coemInfSptXL.mnemonic, "OemCoemInfSptXL")
        XCTAssertEqual(OEMCode.coemInfSptXL.manufacturer, "COEMAR")
        XCTAssertEqual(OEMCode.coemInfSptXL.product, "Infinity Spot XL")
        XCTAssertEqual(OEMCode.coemInfSptXL.dmxIn, 1)
        XCTAssertEqual(OEMCode.coemInfSptXL.dmxOut, 1)
        XCTAssertEqual(OEMCode.coemInfSptXL.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.coemInfSptXL.isRDMSupported, false)

        // OemCoemInfWashM (0x8A7)
        XCTAssertEqual(OEMCode.coemInfWashM, 0x8A7)
        XCTAssertEqual(OEMCode.coemInfWashM.description, "OemCoemInfWashM")
        XCTAssertEqual(OEMCode.coemInfWashM.mnemonic, "OemCoemInfWashM")
        XCTAssertEqual(OEMCode.coemInfWashM.manufacturer, "COEMAR")
        XCTAssertEqual(OEMCode.coemInfWashM.product, "Infinity Wash M")
        XCTAssertEqual(OEMCode.coemInfWashM.dmxIn, 1)
        XCTAssertEqual(OEMCode.coemInfWashM.dmxOut, 1)
        XCTAssertEqual(OEMCode.coemInfWashM.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.coemInfWashM.isRDMSupported, false)

        // OemCoemInfWashS (0x8A1)
        XCTAssertEqual(OEMCode.coemInfWashS, 0x8A1)
        XCTAssertEqual(OEMCode.coemInfWashS.description, "OemCoemInfWashS")
        XCTAssertEqual(OEMCode.coemInfWashS.mnemonic, "OemCoemInfWashS")
        XCTAssertEqual(OEMCode.coemInfWashS.manufacturer, "COEMAR")
        XCTAssertEqual(OEMCode.coemInfWashS.product, "Infinity Wash S")
        XCTAssertEqual(OEMCode.coemInfWashS.dmxIn, 1)
        XCTAssertEqual(OEMCode.coemInfWashS.dmxOut, 1)
        XCTAssertEqual(OEMCode.coemInfWashS.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.coemInfWashS.isRDMSupported, false)

        // OemCoemInfWshXL (0x8A4)
        XCTAssertEqual(OEMCode.coemInfWshXL, 0x8A4)
        XCTAssertEqual(OEMCode.coemInfWshXL.description, "OemCoemInfWshXL")
        XCTAssertEqual(OEMCode.coemInfWshXL.mnemonic, "OemCoemInfWshXL")
        XCTAssertEqual(OEMCode.coemInfWshXL.manufacturer, "COEMAR")
        XCTAssertEqual(OEMCode.coemInfWshXL.product, "Infinity Wash XL")
        XCTAssertEqual(OEMCode.coemInfWshXL.dmxIn, 1)
        XCTAssertEqual(OEMCode.coemInfWshXL.dmxOut, 1)
        XCTAssertEqual(OEMCode.coemInfWshXL.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.coemInfWshXL.isRDMSupported, false)

        // OemColDrTitA16 (0x281C)
        XCTAssertEqual(OEMCode.colDrTitA16, 0x281C)
        XCTAssertEqual(OEMCode.colDrTitA16.description, "OemColDrTitA16")
        XCTAssertEqual(OEMCode.colDrTitA16.mnemonic, "OemColDrTitA16")
        XCTAssertEqual(OEMCode.colDrTitA16.manufacturer, "Colordreamer Technology Co.,Limited")
        XCTAssertEqual(OEMCode.colDrTitA16.product, "Titan A16")
        XCTAssertEqual(OEMCode.colDrTitA16.dmxIn, 0)
        XCTAssertEqual(OEMCode.colDrTitA16.dmxOut, 16)
        XCTAssertEqual(OEMCode.colDrTitA16.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.colDrTitA16.isRDMSupported, false)

        // OemColorDreamerTitanA2 (0x2837)
        XCTAssertEqual(OEMCode.colorDreamerTitanA2, 0x2837)
        XCTAssertEqual(OEMCode.colorDreamerTitanA2.description, "OemColorDreamerTitanA2")
        XCTAssertEqual(OEMCode.colorDreamerTitanA2.mnemonic, "OemColorDreamerTitanA2")
        XCTAssertEqual(OEMCode.colorDreamerTitanA2.manufacturer, "Colordreamer Technology Co.,Limited")
        XCTAssertEqual(OEMCode.colorDreamerTitanA2.product, "Titan A2")
        XCTAssertEqual(OEMCode.colorDreamerTitanA2.dmxIn, 0)
        XCTAssertEqual(OEMCode.colorDreamerTitanA2.dmxOut, 2)
        XCTAssertEqual(OEMCode.colorDreamerTitanA2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.colorDreamerTitanA2.isRDMSupported, false)

        // OemColorDreamerTitanA4 (0x2838)
        XCTAssertEqual(OEMCode.colorDreamerTitanA4, 0x2838)
        XCTAssertEqual(OEMCode.colorDreamerTitanA4.description, "OemColorDreamerTitanA4")
        XCTAssertEqual(OEMCode.colorDreamerTitanA4.mnemonic, "OemColorDreamerTitanA4")
        XCTAssertEqual(OEMCode.colorDreamerTitanA4.manufacturer, "Colordreamer Technology Co.,Limited")
        XCTAssertEqual(OEMCode.colorDreamerTitanA4.product, "Titan A4")
        XCTAssertEqual(OEMCode.colorDreamerTitanA4.dmxIn, 0)
        XCTAssertEqual(OEMCode.colorDreamerTitanA4.dmxOut, 4)
        XCTAssertEqual(OEMCode.colorDreamerTitanA4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.colorDreamerTitanA4.isRDMSupported, false)

        // OemColorDreamerTitanA8 (0x2839)
        XCTAssertEqual(OEMCode.colorDreamerTitanA8, 0x2839)
        XCTAssertEqual(OEMCode.colorDreamerTitanA8.description, "OemColorDreamerTitanA8")
        XCTAssertEqual(OEMCode.colorDreamerTitanA8.mnemonic, "OemColorDreamerTitanA8")
        XCTAssertEqual(OEMCode.colorDreamerTitanA8.manufacturer, "Colordreamer Technology Co.,Limited")
        XCTAssertEqual(OEMCode.colorDreamerTitanA8.product, "Titan A8")
        XCTAssertEqual(OEMCode.colorDreamerTitanA8.dmxIn, 0)
        XCTAssertEqual(OEMCode.colorDreamerTitanA8.dmxOut, 8)
        XCTAssertEqual(OEMCode.colorDreamerTitanA8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.colorDreamerTitanA8.isRDMSupported, false)

        // OemColorDreamerTitanAS4 (0x2836)
        XCTAssertEqual(OEMCode.colorDreamerTitanAS4, 0x2836)
        XCTAssertEqual(OEMCode.colorDreamerTitanAS4.description, "OemColorDreamerTitanAS4")
        XCTAssertEqual(OEMCode.colorDreamerTitanAS4.mnemonic, "OemColorDreamerTitanAS4")
        XCTAssertEqual(OEMCode.colorDreamerTitanAS4.manufacturer, "Colordreamer Technology Co.,Limited")
        XCTAssertEqual(OEMCode.colorDreamerTitanAS4.product, "Titan AS4")
        XCTAssertEqual(OEMCode.colorDreamerTitanAS4.dmxIn, 1)
        XCTAssertEqual(OEMCode.colorDreamerTitanAS4.dmxOut, 4)
        XCTAssertEqual(OEMCode.colorDreamerTitanAS4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.colorDreamerTitanAS4.isRDMSupported, false)

        // OemColorDrTitanA8Pro (0x283E)
        XCTAssertEqual(OEMCode.colorDrTitanA8Pro, 0x283E)
        XCTAssertEqual(OEMCode.colorDrTitanA8Pro.description, "OemColorDrTitanA8Pro")
        XCTAssertEqual(OEMCode.colorDrTitanA8Pro.mnemonic, "OemColorDrTitanA8Pro")
        XCTAssertEqual(OEMCode.colorDrTitanA8Pro.manufacturer, "Colordreamer Technology Co.,Limited")
        XCTAssertEqual(OEMCode.colorDrTitanA8Pro.product, "Titan A8 Pro")
        XCTAssertEqual(OEMCode.colorDrTitanA8Pro.dmxIn, 0)
        XCTAssertEqual(OEMCode.colorDrTitanA8Pro.dmxOut, 8)
        XCTAssertEqual(OEMCode.colorDrTitanA8Pro.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.colorDrTitanA8Pro.isRDMSupported, false)

        // OemColorDrUpBox1 (0x283C)
        XCTAssertEqual(OEMCode.colorDrUpBox1, 0x283C)
        XCTAssertEqual(OEMCode.colorDrUpBox1.description, "OemColorDrUpBox1")
        XCTAssertEqual(OEMCode.colorDrUpBox1.mnemonic, "OemColorDrUpBox1")
        XCTAssertEqual(OEMCode.colorDrUpBox1.manufacturer, "colordreamer")
        XCTAssertEqual(OEMCode.colorDrUpBox1.product, "Colordreamer Update Boot")
        XCTAssertEqual(OEMCode.colorDrUpBox1.dmxIn, 0)
        XCTAssertEqual(OEMCode.colorDrUpBox1.dmxOut, 0)
        XCTAssertEqual(OEMCode.colorDrUpBox1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.colorDrUpBox1.isRDMSupported, false)

        // OemCoNaDnm1 (0x13DD)
        XCTAssertEqual(OEMCode.coNaDnm1, 0x13DD)
        XCTAssertEqual(OEMCode.coNaDnm1.description, "OemCoNaDnm1")
        XCTAssertEqual(OEMCode.coNaDnm1.mnemonic, "OemCoNaDnm1")
        XCTAssertEqual(OEMCode.coNaDnm1.manufacturer, "Company NA")
        XCTAssertEqual(OEMCode.coNaDnm1.product, "DigiNet Manager")
        XCTAssertEqual(OEMCode.coNaDnm1.dmxIn, 0)
        XCTAssertEqual(OEMCode.coNaDnm1.dmxOut, 0)
        XCTAssertEqual(OEMCode.coNaDnm1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.coNaDnm1.isRDMSupported, true)

        // OemConTechConCTCMUFIC1 (0x28D9)
        XCTAssertEqual(OEMCode.conTechConCTCMUFIC1, 0x28D9)
        XCTAssertEqual(OEMCode.conTechConCTCMUFIC1.description, "OemConTechConCTCMUFIC1")
        XCTAssertEqual(OEMCode.conTechConCTCMUFIC1.mnemonic, "OemConTechConCTCMUFIC1")
        XCTAssertEqual(OEMCode.conTechConCTCMUFIC1.manufacturer, "Conceptinetics Technologies and Consultancy Limited")
        XCTAssertEqual(OEMCode.conTechConCTCMUFIC1.product, "CTC-MUFIC")
        XCTAssertEqual(OEMCode.conTechConCTCMUFIC1.dmxIn, 0)
        XCTAssertEqual(OEMCode.conTechConCTCMUFIC1.dmxOut, 3)
        XCTAssertEqual(OEMCode.conTechConCTCMUFIC1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.conTechConCTCMUFIC1.isRDMSupported, false)

        // OemConTechConCTCNEXT1 (0x28D8)
        XCTAssertEqual(OEMCode.conTechConCTCNEXT1, 0x28D8)
        XCTAssertEqual(OEMCode.conTechConCTCNEXT1.description, "OemConTechConCTCNEXT1")
        XCTAssertEqual(OEMCode.conTechConCTCNEXT1.mnemonic, "OemConTechConCTCNEXT1")
        XCTAssertEqual(OEMCode.conTechConCTCNEXT1.manufacturer, "Conceptinectics Technologies and Consultancy Limited")
        XCTAssertEqual(OEMCode.conTechConCTCNEXT1.product, "CTC-NEXT")
        XCTAssertEqual(OEMCode.conTechConCTCNEXT1.dmxIn, 2)
        XCTAssertEqual(OEMCode.conTechConCTCNEXT1.dmxOut, 6)
        XCTAssertEqual(OEMCode.conTechConCTCNEXT1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.conTechConCTCNEXT1.isRDMSupported, false)

        // OemControLiteVIGORDINRailSwitch1 (0x2885)
        XCTAssertEqual(OEMCode.controLiteVIGORDINRailSwitch1, 0x2885)
        XCTAssertEqual(OEMCode.controLiteVIGORDINRailSwitch1.description, "OemControLiteVIGORDINRailSwitch1")
        XCTAssertEqual(OEMCode.controLiteVIGORDINRailSwitch1.mnemonic, "OemControLiteVIGORDINRailSwitch1")
        XCTAssertEqual(OEMCode.controLiteVIGORDINRailSwitch1.manufacturer, "Amptown System Company")
        XCTAssertEqual(OEMCode.controLiteVIGORDINRailSwitch1.product, "ControLite VIGOR DINRail-Switch")
        XCTAssertEqual(OEMCode.controLiteVIGORDINRailSwitch1.dmxIn, 0)
        XCTAssertEqual(OEMCode.controLiteVIGORDINRailSwitch1.dmxOut, 1)
        XCTAssertEqual(OEMCode.controLiteVIGORDINRailSwitch1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.controLiteVIGORDINRailSwitch1.isRDMSupported, false)

        // OemCoolPand1 (0xE20)
        XCTAssertEqual(OEMCode.coolPand1, 0xE20)
        XCTAssertEqual(OEMCode.coolPand1.description, "OemCoolPand1")
        XCTAssertEqual(OEMCode.coolPand1.mnemonic, "OemCoolPand1")
        XCTAssertEqual(OEMCode.coolPand1.manufacturer, "coolux GmbH")
        XCTAssertEqual(OEMCode.coolPand1.product, "Pandoras Box Mediaserver")
        XCTAssertEqual(OEMCode.coolPand1.dmxIn, 0)
        XCTAssertEqual(OEMCode.coolPand1.dmxOut, 4)
        XCTAssertEqual(OEMCode.coolPand1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.coolPand1.isRDMSupported, false)

        // OemCoolWidg1 (0xE21)
        XCTAssertEqual(OEMCode.coolWidg1, 0xE21)
        XCTAssertEqual(OEMCode.coolWidg1.description, "OemCoolWidg1")
        XCTAssertEqual(OEMCode.coolWidg1.mnemonic, "OemCoolWidg1")
        XCTAssertEqual(OEMCode.coolWidg1.manufacturer, "coolux GmbH")
        XCTAssertEqual(OEMCode.coolWidg1.product, "Widget Designer")
        XCTAssertEqual(OEMCode.coolWidg1.dmxIn, 0)
        XCTAssertEqual(OEMCode.coolWidg1.dmxOut, 4)
        XCTAssertEqual(OEMCode.coolWidg1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.coolWidg1.isRDMSupported, false)

        // OemCooperEn2Rdm (0x925)
        XCTAssertEqual(OEMCode.cooperEn2Rdm, 0x925)
        XCTAssertEqual(OEMCode.cooperEn2Rdm.description, "OemCooperEn2Rdm")
        XCTAssertEqual(OEMCode.cooperEn2Rdm.mnemonic, "OemCooperEn2Rdm")
        XCTAssertEqual(OEMCode.cooperEn2Rdm.manufacturer, "Cooper Controls t/a Zero 88")
        XCTAssertEqual(OEMCode.cooperEn2Rdm.product, "EtherN.2 RDM")
        XCTAssertEqual(OEMCode.cooperEn2Rdm.dmxIn, 0)
        XCTAssertEqual(OEMCode.cooperEn2Rdm.dmxOut, 2)
        XCTAssertEqual(OEMCode.cooperEn2Rdm.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cooperEn2Rdm.isRDMSupported, true)

        // OemCooperEn8Rdm (0x926)
        XCTAssertEqual(OEMCode.cooperEn8Rdm, 0x926)
        XCTAssertEqual(OEMCode.cooperEn8Rdm.description, "OemCooperEn8Rdm")
        XCTAssertEqual(OEMCode.cooperEn8Rdm.mnemonic, "OemCooperEn8Rdm")
        XCTAssertEqual(OEMCode.cooperEn8Rdm.manufacturer, "Cooper Controls t/a Zero 88")
        XCTAssertEqual(OEMCode.cooperEn8Rdm.product, "EtherN.8 RDM")
        XCTAssertEqual(OEMCode.cooperEn8Rdm.dmxIn, 0)
        XCTAssertEqual(OEMCode.cooperEn8Rdm.dmxOut, 2)
        XCTAssertEqual(OEMCode.cooperEn8Rdm.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cooperEn8Rdm.isRDMSupported, true)

        // OemCooperOrb (0x920)
        XCTAssertEqual(OEMCode.cooperOrb, 0x920)
        XCTAssertEqual(OEMCode.cooperOrb.description, "OemCooperOrb")
        XCTAssertEqual(OEMCode.cooperOrb.mnemonic, "OemCooperOrb")
        XCTAssertEqual(OEMCode.cooperOrb.manufacturer, "Cooper Controls t/a Zero 88")
        XCTAssertEqual(OEMCode.cooperOrb.product, "ORB,")
        XCTAssertEqual(OEMCode.cooperOrb.dmxIn, 1)
        XCTAssertEqual(OEMCode.cooperOrb.dmxOut, 4)
        XCTAssertEqual(OEMCode.cooperOrb.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cooperOrb.isRDMSupported, false)

        // OemCooperOrbXf (0x921)
        XCTAssertEqual(OEMCode.cooperOrbXf, 0x921)
        XCTAssertEqual(OEMCode.cooperOrbXf.description, "OemCooperOrbXf")
        XCTAssertEqual(OEMCode.cooperOrbXf.mnemonic, "OemCooperOrbXf")
        XCTAssertEqual(OEMCode.cooperOrbXf.manufacturer, "Cooper Controls t/a Zero 88")
        XCTAssertEqual(OEMCode.cooperOrbXf.product, "ORBxf")
        XCTAssertEqual(OEMCode.cooperOrbXf.dmxIn, 1)
        XCTAssertEqual(OEMCode.cooperOrbXf.dmxOut, 4)
        XCTAssertEqual(OEMCode.cooperOrbXf.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cooperOrbXf.isRDMSupported, false)

        // OemCooperSoln (0x923)
        XCTAssertEqual(OEMCode.cooperSoln, 0x923)
        XCTAssertEqual(OEMCode.cooperSoln.description, "OemCooperSoln")
        XCTAssertEqual(OEMCode.cooperSoln.mnemonic, "OemCooperSoln")
        XCTAssertEqual(OEMCode.cooperSoln.manufacturer, "Cooper Controls t/a Zero 88")
        XCTAssertEqual(OEMCode.cooperSoln.product, "Solution")
        XCTAssertEqual(OEMCode.cooperSoln.dmxIn, 1)
        XCTAssertEqual(OEMCode.cooperSoln.dmxOut, 4)
        XCTAssertEqual(OEMCode.cooperSoln.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cooperSoln.isRDMSupported, false)

        // OemCooperSolnXl (0x924)
        XCTAssertEqual(OEMCode.cooperSolnXl, 0x924)
        XCTAssertEqual(OEMCode.cooperSolnXl.description, "OemCooperSolnXl")
        XCTAssertEqual(OEMCode.cooperSolnXl.mnemonic, "OemCooperSolnXl")
        XCTAssertEqual(OEMCode.cooperSolnXl.manufacturer, "Cooper Controls t/a Zero 88")
        XCTAssertEqual(OEMCode.cooperSolnXl.product, "Solution XL")
        XCTAssertEqual(OEMCode.cooperSolnXl.dmxIn, 1)
        XCTAssertEqual(OEMCode.cooperSolnXl.dmxOut, 4)
        XCTAssertEqual(OEMCode.cooperSolnXl.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cooperSolnXl.isRDMSupported, false)

        // OemCooperZeroW1 (0x922)
        XCTAssertEqual(OEMCode.cooperZeroW1, 0x922)
        XCTAssertEqual(OEMCode.cooperZeroW1.description, "OemCooperZeroW1")
        XCTAssertEqual(OEMCode.cooperZeroW1.mnemonic, "OemCooperZeroW1")
        XCTAssertEqual(OEMCode.cooperZeroW1.manufacturer, "Cooper Controls t/a Zero 88")
        XCTAssertEqual(OEMCode.cooperZeroW1.product, "Zero-Wire CRMX TX RDM")
        XCTAssertEqual(OEMCode.cooperZeroW1.dmxIn, 0)
        XCTAssertEqual(OEMCode.cooperZeroW1.dmxOut, 1)
        XCTAssertEqual(OEMCode.cooperZeroW1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.cooperZeroW1.isRDMSupported, false)

        // OemCreatTechEthShow2 (0xEF0)
        XCTAssertEqual(OEMCode.creatTechEthShow2, 0xEF0)
        XCTAssertEqual(OEMCode.creatTechEthShow2.description, "OemCreatTechEthShow2")
        XCTAssertEqual(OEMCode.creatTechEthShow2.mnemonic, "OemCreatTechEthShow2")
        XCTAssertEqual(OEMCode.creatTechEthShow2.manufacturer, "eIdea - Creative Technology")
        XCTAssertEqual(OEMCode.creatTechEthShow2.product, "EtherShow 2")
        XCTAssertEqual(OEMCode.creatTechEthShow2.dmxIn, 2)
        XCTAssertEqual(OEMCode.creatTechEthShow2.dmxOut, 2)
        XCTAssertEqual(OEMCode.creatTechEthShow2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.creatTechEthShow2.isRDMSupported, false)

        // OemD3PPr1 (0x13D8)
        XCTAssertEqual(OEMCode.d3PPr1, 0x13D8)
        XCTAssertEqual(OEMCode.d3PPr1.description, "OemD3PPr1")
        XCTAssertEqual(OEMCode.d3PPr1.mnemonic, "OemD3PPr1")
        XCTAssertEqual(OEMCode.d3PPr1.manufacturer, "d3 Technologies Ltd")
        XCTAssertEqual(OEMCode.d3PPr1.product, "Pro Plus range")
        XCTAssertEqual(OEMCode.d3PPr1.dmxIn, 1)
        XCTAssertEqual(OEMCode.d3PPr1.dmxOut, 1)
        XCTAssertEqual(OEMCode.d3PPr1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.d3PPr1.isRDMSupported, false)

        // OemD4aArtDmxSp (0xB91)
        XCTAssertEqual(OEMCode.d4aArtDmxSp, 0xB91)
        XCTAssertEqual(OEMCode.d4aArtDmxSp.description, "OemD4aArtDmxSp")
        XCTAssertEqual(OEMCode.d4aArtDmxSp.mnemonic, "OemD4aArtDmxSp")
        XCTAssertEqual(OEMCode.d4aArtDmxSp.manufacturer, "DMX4ALL GmbH")
        XCTAssertEqual(OEMCode.d4aArtDmxSp.product, "ArtNet-DMX STAGE-PROFI 1.1")
        XCTAssertEqual(OEMCode.d4aArtDmxSp.dmxIn, 1)
        XCTAssertEqual(OEMCode.d4aArtDmxSp.dmxOut, 1)
        XCTAssertEqual(OEMCode.d4aArtDmxSp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.d4aArtDmxSp.isRDMSupported, false)

        // OemD4aArtDmxUni41 (0xB90)
        XCTAssertEqual(OEMCode.d4aArtDmxUni41, 0xB90)
        XCTAssertEqual(OEMCode.d4aArtDmxUni41.description, "OemD4aArtDmxUni41")
        XCTAssertEqual(OEMCode.d4aArtDmxUni41.mnemonic, "OemD4aArtDmxUni41")
        XCTAssertEqual(OEMCode.d4aArtDmxUni41.manufacturer, "DMX4ALL GmbH")
        XCTAssertEqual(OEMCode.d4aArtDmxUni41.product, "ArtNet-DMX-UNIVERSE 4.1")
        XCTAssertEqual(OEMCode.d4aArtDmxUni41.dmxIn, 1)
        XCTAssertEqual(OEMCode.d4aArtDmxUni41.dmxOut, 4)
        XCTAssertEqual(OEMCode.d4aArtDmxUni41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.d4aArtDmxUni41.isRDMSupported, false)

        // OemD4aMagLedFpc (0xB92)
        XCTAssertEqual(OEMCode.d4aMagLedFpc, 0xB92)
        XCTAssertEqual(OEMCode.d4aMagLedFpc.description, "OemD4aMagLedFpc")
        XCTAssertEqual(OEMCode.d4aMagLedFpc.mnemonic, "OemD4aMagLedFpc")
        XCTAssertEqual(OEMCode.d4aMagLedFpc.manufacturer, "DMX4ALL GmbH")
        XCTAssertEqual(OEMCode.d4aMagLedFpc.product, "MagiarLED II flex PixxControl")
        XCTAssertEqual(OEMCode.d4aMagLedFpc.dmxIn, 0)
        XCTAssertEqual(OEMCode.d4aMagLedFpc.dmxOut, 8)
        XCTAssertEqual(OEMCode.d4aMagLedFpc.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.d4aMagLedFpc.isRDMSupported, false)

        // OemDataLynxIp (0x2060)
        XCTAssertEqual(OEMCode.dataLynxIp, 0x2060)
        XCTAssertEqual(OEMCode.dataLynxIp.description, "OemDataLynxIp")
        XCTAssertEqual(OEMCode.dataLynxIp.mnemonic, "OemDataLynxIp")
        XCTAssertEqual(OEMCode.dataLynxIp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.dataLynxIp.product, "Data-Lynx IP")
        XCTAssertEqual(OEMCode.dataLynxIp.dmxIn, 2)
        XCTAssertEqual(OEMCode.dataLynxIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.dataLynxIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dataLynxIp.isRDMSupported, false)

        // OemDataLynxOp (0x2010)
        XCTAssertEqual(OEMCode.dataLynxOp, 0x2010)
        XCTAssertEqual(OEMCode.dataLynxOp.description, "OemDataLynxOp")
        XCTAssertEqual(OEMCode.dataLynxOp.mnemonic, "OemDataLynxOp")
        XCTAssertEqual(OEMCode.dataLynxOp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.dataLynxOp.product, "Data-Lynx OP")
        XCTAssertEqual(OEMCode.dataLynxOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.dataLynxOp.dmxOut, 4)
        XCTAssertEqual(OEMCode.dataLynxOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dataLynxOp.isRDMSupported, true)

        // OemDatatonWatch (0x810)
        XCTAssertEqual(OEMCode.datatonWatch, 0x810)
        XCTAssertEqual(OEMCode.datatonWatch.description, "OemDatatonWatch")
        XCTAssertEqual(OEMCode.datatonWatch.mnemonic, "OemDatatonWatch")
        XCTAssertEqual(OEMCode.datatonWatch.manufacturer, "Dataton")
        XCTAssertEqual(OEMCode.datatonWatch.product, "Watchout")
        XCTAssertEqual(OEMCode.datatonWatch.dmxIn, 1)
        XCTAssertEqual(OEMCode.datatonWatch.dmxOut, 1)
        XCTAssertEqual(OEMCode.datatonWatch.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.datatonWatch.isRDMSupported, false)

        // OemDeShowGate (0x390)
        XCTAssertEqual(OEMCode.deShowGate, 0x390)
        XCTAssertEqual(OEMCode.deShowGate.description, "OemDeShowGate")
        XCTAssertEqual(OEMCode.deShowGate.mnemonic, "OemDeShowGate")
        XCTAssertEqual(OEMCode.deShowGate.manufacturer, "Digital Enlightenment")
        XCTAssertEqual(OEMCode.deShowGate.product, "ShowGate")
        XCTAssertEqual(OEMCode.deShowGate.dmxIn, 4)
        XCTAssertEqual(OEMCode.deShowGate.dmxOut, 4)
        XCTAssertEqual(OEMCode.deShowGate.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.deShowGate.isRDMSupported, false)

        // OemDeskC1 (0x1330)
        XCTAssertEqual(OEMCode.deskC1, 0x1330)
        XCTAssertEqual(OEMCode.deskC1.description, "OemDeskC1")
        XCTAssertEqual(OEMCode.deskC1.mnemonic, "OemDeskC1")
        XCTAssertEqual(OEMCode.deskC1.manufacturer, "deskontrol electronics")
        XCTAssertEqual(OEMCode.deskC1.product, "deskontroller")
        XCTAssertEqual(OEMCode.deskC1.dmxIn, 0)
        XCTAssertEqual(OEMCode.deskC1.dmxOut, 4)
        XCTAssertEqual(OEMCode.deskC1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.deskC1.isRDMSupported, false)

        // OemDeskC2 (0x1331)
        XCTAssertEqual(OEMCode.deskC2, 0x1331)
        XCTAssertEqual(OEMCode.deskC2.description, "OemDeskC2")
        XCTAssertEqual(OEMCode.deskC2.mnemonic, "OemDeskC2")
        XCTAssertEqual(OEMCode.deskC2.manufacturer, "deskontrol electronics")
        XCTAssertEqual(OEMCode.deskC2.product, "deskontroller pro")
        XCTAssertEqual(OEMCode.deskC2.dmxIn, 0)
        XCTAssertEqual(OEMCode.deskC2.dmxOut, 4)
        XCTAssertEqual(OEMCode.deskC2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.deskC2.isRDMSupported, false)

        // OemDeskConPix2 (0xF10)
        XCTAssertEqual(OEMCode.deskConPix2, 0xF10)
        XCTAssertEqual(OEMCode.deskConPix2.description, "OemDeskConPix2")
        XCTAssertEqual(OEMCode.deskConPix2.mnemonic, "OemDeskConPix2")
        XCTAssertEqual(OEMCode.deskConPix2.manufacturer, "deskontrol electronics")
        XCTAssertEqual(OEMCode.deskConPix2.product, "Pixel controller II")
        XCTAssertEqual(OEMCode.deskConPix2.dmxIn, 0)
        XCTAssertEqual(OEMCode.deskConPix2.dmxOut, 4)
        XCTAssertEqual(OEMCode.deskConPix2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.deskConPix2.isRDMSupported, false)

        // OemDeskConPix3 (0xF11)
        XCTAssertEqual(OEMCode.deskConPix3, 0xF11)
        XCTAssertEqual(OEMCode.deskConPix3.description, "OemDeskConPix3")
        XCTAssertEqual(OEMCode.deskConPix3.mnemonic, "OemDeskConPix3")
        XCTAssertEqual(OEMCode.deskConPix3.manufacturer, "deskontrol electronics")
        XCTAssertEqual(OEMCode.deskConPix3.product, "Pixel controller III")
        XCTAssertEqual(OEMCode.deskConPix3.dmxIn, 0)
        XCTAssertEqual(OEMCode.deskConPix3.dmxOut, 4)
        XCTAssertEqual(OEMCode.deskConPix3.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.deskConPix3.isRDMSupported, false)

        // OemDeskConPixCon (0xF12)
        XCTAssertEqual(OEMCode.deskConPixCon, 0xF12)
        XCTAssertEqual(OEMCode.deskConPixCon.description, "OemDeskConPixCon")
        XCTAssertEqual(OEMCode.deskConPixCon.mnemonic, "OemDeskConPixCon")
        XCTAssertEqual(OEMCode.deskConPixCon.manufacturer, "deskontrol electronics")
        XCTAssertEqual(OEMCode.deskConPixCon.product, "DMX controller")
        XCTAssertEqual(OEMCode.deskConPixCon.dmxIn, 4)
        XCTAssertEqual(OEMCode.deskConPixCon.dmxOut, 4)
        XCTAssertEqual(OEMCode.deskConPixCon.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.deskConPixCon.isRDMSupported, false)

        // OemDesNeli (0x3A0)
        XCTAssertEqual(OEMCode.desNeli, 0x3A0)
        XCTAssertEqual(OEMCode.desNeli.description, "OemDesNeli")
        XCTAssertEqual(OEMCode.desNeli.mnemonic, "OemDesNeli")
        XCTAssertEqual(OEMCode.desNeli.manufacturer, "DES")
        XCTAssertEqual(OEMCode.desNeli.product, "NELI")
        XCTAssertEqual(OEMCode.desNeli.dmxIn, 1)
        XCTAssertEqual(OEMCode.desNeli.dmxOut, 1)
        XCTAssertEqual(OEMCode.desNeli.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.desNeli.isRDMSupported, false)

        // OemDfdDownLink (0x30)
        XCTAssertEqual(OEMCode.dfdDownLink, 0x30)
        XCTAssertEqual(OEMCode.dfdDownLink.description, "OemDfdDownLink")
        XCTAssertEqual(OEMCode.dfdDownLink.mnemonic, "OemDfdDownLink")
        XCTAssertEqual(OEMCode.dfdDownLink.manufacturer, "Doug Fleenor Design Inc")
        XCTAssertEqual(OEMCode.dfdDownLink.product, "DFD DL")
        XCTAssertEqual(OEMCode.dfdDownLink.dmxIn, 0)
        XCTAssertEqual(OEMCode.dfdDownLink.dmxOut, 2)
        XCTAssertEqual(OEMCode.dfdDownLink.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dfdDownLink.isRDMSupported, false)

        // OemDfdDownLynx2 (0x230)
        XCTAssertEqual(OEMCode.dfdDownLynx2, 0x230)
        XCTAssertEqual(OEMCode.dfdDownLynx2.description, "OemDfdDownLynx2")
        XCTAssertEqual(OEMCode.dfdDownLynx2.mnemonic, "OemDfdDownLynx2")
        XCTAssertEqual(OEMCode.dfdDownLynx2.manufacturer, "Doug Fleenor Design Inc")
        XCTAssertEqual(OEMCode.dfdDownLynx2.product, "DFD Dlynx 2")
        XCTAssertEqual(OEMCode.dfdDownLynx2.dmxIn, 0)
        XCTAssertEqual(OEMCode.dfdDownLynx2.dmxOut, 2)
        XCTAssertEqual(OEMCode.dfdDownLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dfdDownLynx2.isRDMSupported, true)

        // OemDfdNode4 (0xD90)
        XCTAssertEqual(OEMCode.dfdNode4, 0xD90)
        XCTAssertEqual(OEMCode.dfdNode4.description, "OemDfdNode4")
        XCTAssertEqual(OEMCode.dfdNode4.mnemonic, "OemDfdNode4")
        XCTAssertEqual(OEMCode.dfdNode4.manufacturer, "Doug Fleenor Design Inc.")
        XCTAssertEqual(OEMCode.dfdNode4.product, "Node4")
        XCTAssertEqual(OEMCode.dfdNode4.dmxIn, 4)
        XCTAssertEqual(OEMCode.dfdNode4.dmxOut, 4)
        XCTAssertEqual(OEMCode.dfdNode4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dfdNode4.isRDMSupported, true)

        // OemDfdUpLink (0x31)
        XCTAssertEqual(OEMCode.dfdUpLink, 0x31)
        XCTAssertEqual(OEMCode.dfdUpLink.description, "OemDfdUpLink")
        XCTAssertEqual(OEMCode.dfdUpLink.mnemonic, "OemDfdUpLink")
        XCTAssertEqual(OEMCode.dfdUpLink.manufacturer, "Doug Fleenor Design Inc")
        XCTAssertEqual(OEMCode.dfdUpLink.product, "DFD UL")
        XCTAssertEqual(OEMCode.dfdUpLink.dmxIn, 2)
        XCTAssertEqual(OEMCode.dfdUpLink.dmxOut, 0)
        XCTAssertEqual(OEMCode.dfdUpLink.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dfdUpLink.isRDMSupported, false)

        // OemDfdUpLynx2 (0x231)
        XCTAssertEqual(OEMCode.dfdUpLynx2, 0x231)
        XCTAssertEqual(OEMCode.dfdUpLynx2.description, "OemDfdUpLynx2")
        XCTAssertEqual(OEMCode.dfdUpLynx2.mnemonic, "OemDfdUpLynx2")
        XCTAssertEqual(OEMCode.dfdUpLynx2.manufacturer, "Doug Fleenor Design Inc")
        XCTAssertEqual(OEMCode.dfdUpLynx2.product, "DFD Ulynx 2")
        XCTAssertEqual(OEMCode.dfdUpLynx2.dmxIn, 2)
        XCTAssertEqual(OEMCode.dfdUpLynx2.dmxOut, 0)
        XCTAssertEqual(OEMCode.dfdUpLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dfdUpLynx2.isRDMSupported, false)

        // OemDiamLxDxNetOut (0xFA0)
        XCTAssertEqual(OEMCode.diamLxDxNetOut, 0xFA0)
        XCTAssertEqual(OEMCode.diamLxDxNetOut.description, "OemDiamLxDxNetOut")
        XCTAssertEqual(OEMCode.diamLxDxNetOut.mnemonic, "OemDiamLxDxNetOut")
        XCTAssertEqual(OEMCode.diamLxDxNetOut.manufacturer, "Diamante Lighting")
        XCTAssertEqual(OEMCode.diamLxDxNetOut.product, "DMNet Out")
        XCTAssertEqual(OEMCode.diamLxDxNetOut.dmxIn, 0)
        XCTAssertEqual(OEMCode.diamLxDxNetOut.dmxOut, 2)
        XCTAssertEqual(OEMCode.diamLxDxNetOut.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.diamLxDxNetOut.isRDMSupported, false)

        // OemDigSpDsl2a (0x2860)
        XCTAssertEqual(OEMCode.digSpDsl2a, 0x2860)
        XCTAssertEqual(OEMCode.digSpDsl2a.description, "OemDigSpDsl2a")
        XCTAssertEqual(OEMCode.digSpDsl2a.mnemonic, "OemDigSpDsl2a")
        XCTAssertNil(OEMCode.digSpDsl2a.manufacturer)
        XCTAssertEqual(OEMCode.digSpDsl2a.product, "DSL2")
        XCTAssertEqual(OEMCode.digSpDsl2a.dmxIn, 1)
        XCTAssertEqual(OEMCode.digSpDsl2a.dmxOut, 1)
        XCTAssertEqual(OEMCode.digSpDsl2a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.digSpDsl2a.isRDMSupported, true)

        // OemDigSpDsl3a (0x285F)
        XCTAssertEqual(OEMCode.digSpDsl3a, 0x285F)
        XCTAssertEqual(OEMCode.digSpDsl3a.description, "OemDigSpDsl3a")
        XCTAssertEqual(OEMCode.digSpDsl3a.mnemonic, "OemDigSpDsl3a")
        XCTAssertNil(OEMCode.digSpDsl3a.manufacturer)
        XCTAssertEqual(OEMCode.digSpDsl3a.product, "DSL3")
        XCTAssertEqual(OEMCode.digSpDsl3a.dmxIn, 1)
        XCTAssertEqual(OEMCode.digSpDsl3a.dmxOut, 1)
        XCTAssertEqual(OEMCode.digSpDsl3a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.digSpDsl3a.isRDMSupported, true)

        // OemDigSputDsCon1 (0x283D)
        XCTAssertEqual(OEMCode.digSputDsCon1, 0x283D)
        XCTAssertEqual(OEMCode.digSputDsCon1.description, "OemDigSputDsCon1")
        XCTAssertEqual(OEMCode.digSputDsCon1.mnemonic, "OemDigSputDsCon1")
        XCTAssertEqual(OEMCode.digSputDsCon1.manufacturer, "Digital Sputnik Lighting OÜ")
        XCTAssertEqual(OEMCode.digSputDsCon1.product, "DS Control DMX")
        XCTAssertEqual(OEMCode.digSputDsCon1.dmxIn, 0)
        XCTAssertEqual(OEMCode.digSputDsCon1.dmxOut, 0)
        XCTAssertEqual(OEMCode.digSputDsCon1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.digSputDsCon1.isRDMSupported, false)

        // OemDmgUbb1 (0x13C3)
        XCTAssertEqual(OEMCode.dmgUbb1, 0x13C3)
        XCTAssertEqual(OEMCode.dmgUbb1.description, "OemDmgUbb1")
        XCTAssertEqual(OEMCode.dmgUbb1.mnemonic, "OemDmgUbb1")
        XCTAssertEqual(OEMCode.dmgUbb1.manufacturer, "DMG Technologies DMG Lumiere")
        XCTAssertEqual(OEMCode.dmgUbb1.product, "Universal battery box")
        XCTAssertEqual(OEMCode.dmgUbb1.dmxIn, 4)
        XCTAssertEqual(OEMCode.dmgUbb1.dmxOut, 4)
        XCTAssertEqual(OEMCode.dmgUbb1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dmgUbb1.isRDMSupported, true)

        // OemDmliteSol1 (0x284B)
        XCTAssertEqual(OEMCode.dmliteSol1, 0x284B)
        XCTAssertEqual(OEMCode.dmliteSol1.description, "OemDmliteSol1")
        XCTAssertEqual(OEMCode.dmliteSol1.mnemonic, "OemDmliteSol1")
        XCTAssertEqual(OEMCode.dmliteSol1.manufacturer, "DMLITE")
        XCTAssertEqual(OEMCode.dmliteSol1.product, "SOLEIL")
        XCTAssertEqual(OEMCode.dmliteSol1.dmxIn, 1)
        XCTAssertEqual(OEMCode.dmliteSol1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dmliteSol1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dmliteSol1.isRDMSupported, false)

        // OemDmtPb252 (0x2820)
        XCTAssertEqual(OEMCode.dmtPb252, 0x2820)
        XCTAssertEqual(OEMCode.dmtPb252.description, "OemDmtPb252")
        XCTAssertEqual(OEMCode.dmtPb252.mnemonic, "OemDmtPb252")
        XCTAssertEqual(OEMCode.dmtPb252.manufacturer, "DMT")
        XCTAssertEqual(OEMCode.dmtPb252.product, "PixelBatten P25 MKII")
        XCTAssertEqual(OEMCode.dmtPb252.dmxIn, 1)
        XCTAssertEqual(OEMCode.dmtPb252.dmxOut, 0)
        XCTAssertEqual(OEMCode.dmtPb252.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dmtPb252.isRDMSupported, false)

        // OemDmtPt252 (0x281F)
        XCTAssertEqual(OEMCode.dmtPt252, 0x281F)
        XCTAssertEqual(OEMCode.dmtPt252.description, "OemDmtPt252")
        XCTAssertEqual(OEMCode.dmtPt252.mnemonic, "OemDmtPt252")
        XCTAssertEqual(OEMCode.dmtPt252.manufacturer, "DMT")
        XCTAssertEqual(OEMCode.dmtPt252.product, "Pixel Tile P25 MKII")
        XCTAssertEqual(OEMCode.dmtPt252.dmxIn, 1)
        XCTAssertEqual(OEMCode.dmtPt252.dmxOut, 0)
        XCTAssertEqual(OEMCode.dmtPt252.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dmtPt252.isRDMSupported, false)

        // OemDmx4AllDmxDev1 (0x282B)
        XCTAssertEqual(OEMCode.dmx4AllDmxDev1, 0x282B)
        XCTAssertEqual(OEMCode.dmx4AllDmxDev1.description, "OemDmx4AllDmxDev1")
        XCTAssertEqual(OEMCode.dmx4AllDmxDev1.mnemonic, "OemDmx4AllDmxDev1")
        XCTAssertEqual(OEMCode.dmx4AllDmxDev1.manufacturer, "DMX4ALL GmbH")
        XCTAssertEqual(OEMCode.dmx4AllDmxDev1.product, "DMX4ALL DMXDevice")
        XCTAssertEqual(OEMCode.dmx4AllDmxDev1.dmxIn, 4)
        XCTAssertEqual(OEMCode.dmx4AllDmxDev1.dmxOut, 4)
        XCTAssertEqual(OEMCode.dmx4AllDmxDev1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.dmx4AllDmxDev1.isRDMSupported, false)

        // OemDmx4AlllPd1 (0x280C)
        XCTAssertEqual(OEMCode.dmx4AlllPd1, 0x280C)
        XCTAssertEqual(OEMCode.dmx4AlllPd1.description, "OemDmx4AlllPd1")
        XCTAssertEqual(OEMCode.dmx4AlllPd1.mnemonic, "OemDmx4AlllPd1")
        XCTAssertEqual(OEMCode.dmx4AlllPd1.manufacturer, "DMX4ALL GmbH")
        XCTAssertEqual(OEMCode.dmx4AlllPd1.product, "DMX4ALL PlayerDevice")
        XCTAssertEqual(OEMCode.dmx4AlllPd1.dmxIn, 0)
        XCTAssertEqual(OEMCode.dmx4AlllPd1.dmxOut, 16)
        XCTAssertEqual(OEMCode.dmx4AlllPd1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.dmx4AlllPd1.isRDMSupported, false)

        // OemDmx4AllMud1 (0x280D)
        XCTAssertEqual(OEMCode.dmx4AllMud1, 0x280D)
        XCTAssertEqual(OEMCode.dmx4AllMud1.description, "OemDmx4AllMud1")
        XCTAssertEqual(OEMCode.dmx4AllMud1.mnemonic, "OemDmx4AllMud1")
        XCTAssertEqual(OEMCode.dmx4AllMud1.manufacturer, "DMX4ALL GmbH")
        XCTAssertEqual(OEMCode.dmx4AllMud1.product, "DMX4ALL MuxDevice")
        XCTAssertEqual(OEMCode.dmx4AllMud1.dmxIn, 1)
        XCTAssertEqual(OEMCode.dmx4AllMud1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dmx4AllMud1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.dmx4AllMud1.isRDMSupported, false)

        // OemDmx4AllPxd1 (0x280B)
        XCTAssertEqual(OEMCode.dmx4AllPxd1, 0x280B)
        XCTAssertEqual(OEMCode.dmx4AllPxd1.description, "OemDmx4AllPxd1")
        XCTAssertEqual(OEMCode.dmx4AllPxd1.mnemonic, "OemDmx4AllPxd1")
        XCTAssertEqual(OEMCode.dmx4AllPxd1.manufacturer, "DMX4ALL GmbH")
        XCTAssertEqual(OEMCode.dmx4AllPxd1.product, "DMX4ALL PixxDevice")
        XCTAssertEqual(OEMCode.dmx4AllPxd1.dmxIn, 0)
        XCTAssertEqual(OEMCode.dmx4AllPxd1.dmxOut, 16)
        XCTAssertEqual(OEMCode.dmx4AllPxd1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.dmx4AllPxd1.isRDMSupported, false)

        // OemDmx4AllSwDev1 (0x282D)
        XCTAssertEqual(OEMCode.dmx4AllSwDev1, 0x282D)
        XCTAssertEqual(OEMCode.dmx4AllSwDev1.description, "OemDmx4AllSwDev1")
        XCTAssertEqual(OEMCode.dmx4AllSwDev1.mnemonic, "OemDmx4AllSwDev1")
        XCTAssertEqual(OEMCode.dmx4AllSwDev1.manufacturer, "DMX4ALL GmbH")
        XCTAssertEqual(OEMCode.dmx4AllSwDev1.product, "DMX4ALL SoftwareDevice")
        XCTAssertEqual(OEMCode.dmx4AllSwDev1.dmxIn, 64)
        XCTAssertEqual(OEMCode.dmx4AllSwDev1.dmxOut, 64)
        XCTAssertEqual(OEMCode.dmx4AllSwDev1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.dmx4AllSwDev1.isRDMSupported, false)

        // OemDmx4AllWdd1 (0x280A)
        XCTAssertEqual(OEMCode.dmx4AllWdd1, 0x280A)
        XCTAssertEqual(OEMCode.dmx4AllWdd1.description, "OemDmx4AllWdd1")
        XCTAssertEqual(OEMCode.dmx4AllWdd1.mnemonic, "OemDmx4AllWdd1")
        XCTAssertEqual(OEMCode.dmx4AllWdd1.manufacturer, "DMX4ALL GmbH")
        XCTAssertEqual(OEMCode.dmx4AllWdd1.product, "Wireless DMX4ALL Device")
        XCTAssertEqual(OEMCode.dmx4AllWdd1.dmxIn, 1)
        XCTAssertEqual(OEMCode.dmx4AllWdd1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dmx4AllWdd1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.dmx4AllWdd1.isRDMSupported, false)

        // OemDmx4AllWdd2 (0x280E)
        XCTAssertEqual(OEMCode.dmx4AllWdd2, 0x280E)
        XCTAssertEqual(OEMCode.dmx4AllWdd2.description, "OemDmx4AllWdd2")
        XCTAssertEqual(OEMCode.dmx4AllWdd2.mnemonic, "OemDmx4AllWdd2")
        XCTAssertEqual(OEMCode.dmx4AllWdd2.manufacturer, "DMX4ALL GmbH")
        XCTAssertEqual(OEMCode.dmx4AllWdd2.product, "DMX4ALL WirelessDevice")
        XCTAssertEqual(OEMCode.dmx4AllWdd2.dmxIn, 1)
        XCTAssertEqual(OEMCode.dmx4AllWdd2.dmxOut, 1)
        XCTAssertEqual(OEMCode.dmx4AllWdd2.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.dmx4AllWdd2.isRDMSupported, false)

        // OemDmx4AllWpd1 (0x280F)
        XCTAssertEqual(OEMCode.dmx4AllWpd1, 0x280F)
        XCTAssertEqual(OEMCode.dmx4AllWpd1.description, "OemDmx4AllWpd1")
        XCTAssertEqual(OEMCode.dmx4AllWpd1.mnemonic, "OemDmx4AllWpd1")
        XCTAssertEqual(OEMCode.dmx4AllWpd1.manufacturer, "DMX4ALL GmbH")
        XCTAssertEqual(OEMCode.dmx4AllWpd1.product, "DMX4ALL WirelessPixxDevice")
        XCTAssertEqual(OEMCode.dmx4AllWpd1.dmxIn, 0)
        XCTAssertEqual(OEMCode.dmx4AllWpd1.dmxOut, 16)
        XCTAssertEqual(OEMCode.dmx4AllWpd1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.dmx4AllWpd1.isRDMSupported, false)

        // OemDmx4AnLedDim (0xE91)
        XCTAssertEqual(OEMCode.dmx4AnLedDim, 0xE91)
        XCTAssertEqual(OEMCode.dmx4AnLedDim.description, "OemDmx4AnLedDim")
        XCTAssertEqual(OEMCode.dmx4AnLedDim.mnemonic, "OemDmx4AnLedDim")
        XCTAssertEqual(OEMCode.dmx4AnLedDim.manufacturer, "Dmx4All")
        XCTAssertEqual(OEMCode.dmx4AnLedDim.product, "AN-Led-Dimmer AN")
        XCTAssertEqual(OEMCode.dmx4AnLedDim.dmxIn, 0)
        XCTAssertEqual(OEMCode.dmx4AnLedDim.dmxOut, 1)
        XCTAssertEqual(OEMCode.dmx4AnLedDim.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dmx4AnLedDim.isRDMSupported, false)

        // OemDmx4PlayerAn (0xE90)
        XCTAssertEqual(OEMCode.dmx4PlayerAn, 0xE90)
        XCTAssertEqual(OEMCode.dmx4PlayerAn.description, "OemDmx4PlayerAn")
        XCTAssertEqual(OEMCode.dmx4PlayerAn.mnemonic, "OemDmx4PlayerAn")
        XCTAssertEqual(OEMCode.dmx4PlayerAn.manufacturer, "Dmx4All")
        XCTAssertEqual(OEMCode.dmx4PlayerAn.product, "Player AN")
        XCTAssertEqual(OEMCode.dmx4PlayerAn.dmxIn, 1)
        XCTAssertEqual(OEMCode.dmx4PlayerAn.dmxOut, 1)
        XCTAssertEqual(OEMCode.dmx4PlayerAn.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dmx4PlayerAn.isRDMSupported, false)

        // OemDmxCtrl1 (0x8B0)
        XCTAssertEqual(OEMCode.dmxCtrl1, 0x8B0)
        XCTAssertEqual(OEMCode.dmxCtrl1.description, "OemDmxCtrl1")
        XCTAssertEqual(OEMCode.dmxCtrl1.mnemonic, "OemDmxCtrl1")
        XCTAssertEqual(OEMCode.dmxCtrl1.manufacturer, "DMXControl")
        XCTAssertEqual(OEMCode.dmxCtrl1.product, "DMXControl")
        XCTAssertEqual(OEMCode.dmxCtrl1.dmxIn, 1)
        XCTAssertEqual(OEMCode.dmxCtrl1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dmxCtrl1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dmxCtrl1.isRDMSupported, false)

        // OemDmxCtrl2Avr (0x8B1)
        XCTAssertEqual(OEMCode.dmxCtrl2Avr, 0x8B1)
        XCTAssertEqual(OEMCode.dmxCtrl2Avr.description, "OemDmxCtrl2Avr")
        XCTAssertEqual(OEMCode.dmxCtrl2Avr.mnemonic, "OemDmxCtrl2Avr")
        XCTAssertEqual(OEMCode.dmxCtrl2Avr.manufacturer, "DMXControl")
        XCTAssertEqual(OEMCode.dmxCtrl2Avr.product, "AvrArtNode")
        XCTAssertEqual(OEMCode.dmxCtrl2Avr.dmxIn, 1)
        XCTAssertEqual(OEMCode.dmxCtrl2Avr.dmxOut, 1)
        XCTAssertEqual(OEMCode.dmxCtrl2Avr.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dmxCtrl2Avr.isRDMSupported, false)

        // OemDMXHub (0x0)
        XCTAssertEqual(OEMCode.dMXHub, 0x0)
        XCTAssertEqual(OEMCode.dMXHub.description, "OemDMXHub")
        XCTAssertEqual(OEMCode.dMXHub.mnemonic, "OemDMXHub")
        XCTAssertEqual(OEMCode.dMXHub.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.dMXHub.product, "Dmx-Hub")
        XCTAssertEqual(OEMCode.dMXHub.dmxIn, 4)
        XCTAssertEqual(OEMCode.dMXHub.dmxOut, 4)
        XCTAssertEqual(OEMCode.dMXHub.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dMXHub.isRDMSupported, false)

        // OemDMXHubXT (0x8002)
        XCTAssertEqual(OEMCode.dMXHubXT, 0x8002)
        XCTAssertEqual(OEMCode.dMXHubXT.description, "OemDMXHubXT")
        XCTAssertEqual(OEMCode.dMXHubXT.mnemonic, "OemDMXHubXT")
        XCTAssertEqual(OEMCode.dMXHubXT.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.dMXHubXT.product, "DMX-Hub XT")
        XCTAssertEqual(OEMCode.dMXHubXT.dmxIn, 4)
        XCTAssertEqual(OEMCode.dMXHubXT.dmxOut, 4)
        XCTAssertEqual(OEMCode.dMXHubXT.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.dMXHubXT.isRDMSupported, false)

        // OemDomDvNetDmx (0x460)
        XCTAssertEqual(OEMCode.domDvNetDmx, 0x460)
        XCTAssertEqual(OEMCode.domDvNetDmx.description, "OemDomDvNetDmx")
        XCTAssertEqual(OEMCode.domDvNetDmx.mnemonic, "OemDomDvNetDmx")
        XCTAssertEqual(OEMCode.domDvNetDmx.manufacturer, "Dom Dv")
        XCTAssertEqual(OEMCode.domDvNetDmx.product, "NetDmx")
        XCTAssertEqual(OEMCode.domDvNetDmx.dmxIn, 1)
        XCTAssertEqual(OEMCode.domDvNetDmx.dmxOut, 1)
        XCTAssertEqual(OEMCode.domDvNetDmx.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.domDvNetDmx.isRDMSupported, false)

        // OemDownLink (0x10)
        XCTAssertEqual(OEMCode.downLink, 0x10)
        XCTAssertEqual(OEMCode.downLink.description, "OemDownLink")
        XCTAssertEqual(OEMCode.downLink.mnemonic, "OemDownLink")
        XCTAssertEqual(OEMCode.downLink.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.downLink.product, "Down-Link")
        XCTAssertEqual(OEMCode.downLink.dmxIn, 0)
        XCTAssertEqual(OEMCode.downLink.dmxOut, 2)
        XCTAssertEqual(OEMCode.downLink.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.downLink.isRDMSupported, false)

        // OemDownLynx2 (0x210)
        XCTAssertEqual(OEMCode.downLynx2, 0x210)
        XCTAssertEqual(OEMCode.downLynx2.description, "OemDownLynx2")
        XCTAssertEqual(OEMCode.downLynx2.mnemonic, "OemDownLynx2")
        XCTAssertEqual(OEMCode.downLynx2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.downLynx2.product, "Down-Lynx 2")
        XCTAssertEqual(OEMCode.downLynx2.dmxIn, 0)
        XCTAssertEqual(OEMCode.downLynx2.dmxOut, 2)
        XCTAssertEqual(OEMCode.downLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.downLynx2.isRDMSupported, true)

        // OemDownLynx4 (0x2030)
        XCTAssertEqual(OEMCode.downLynx4, 0x2030)
        XCTAssertEqual(OEMCode.downLynx4.description, "OemDownLynx4")
        XCTAssertEqual(OEMCode.downLynx4.mnemonic, "OemDownLynx4")
        XCTAssertEqual(OEMCode.downLynx4.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.downLynx4.product, "Down-Lynx (G4)")
        XCTAssertEqual(OEMCode.downLynx4.dmxIn, 0)
        XCTAssertEqual(OEMCode.downLynx4.dmxOut, 2)
        XCTAssertEqual(OEMCode.downLynx4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.downLynx4.isRDMSupported, true)

        // OemDpihuvJCD1 (0x28D7)
        XCTAssertEqual(OEMCode.dpihuvJCD1, 0x28D7)
        XCTAssertEqual(OEMCode.dpihuvJCD1.description, "OemDpihuvJCD1")
        XCTAssertEqual(OEMCode.dpihuvJCD1.mnemonic, "OemDpihuvJCD1")
        XCTAssertEqual(OEMCode.dpihuvJCD1.manufacturer, "Dynamic Projection Institute Herstellungs und Vertriebs GmbH")
        XCTAssertEqual(OEMCode.dpihuvJCD1.product, "JCD")
        XCTAssertEqual(OEMCode.dpihuvJCD1.dmxIn, 1)
        XCTAssertEqual(OEMCode.dpihuvJCD1.dmxOut, 0)
        XCTAssertEqual(OEMCode.dpihuvJCD1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.dpihuvJCD1.isRDMSupported, false)

        // OemDPIHVMirror1 (0x1140)
        XCTAssertEqual(OEMCode.dPIHVMirror1, 0x1140)
        XCTAssertEqual(OEMCode.dPIHVMirror1.description, "OemDPIHVMirror1")
        XCTAssertEqual(OEMCode.dPIHVMirror1.mnemonic, "OemDPIHVMirror1")
        XCTAssertEqual(OEMCode.dPIHVMirror1.manufacturer, "Dynamic Projection Institute Herstellungs und Vertriebs GmbH")
        XCTAssertEqual(OEMCode.dPIHVMirror1.product, "Mirror Head")
        XCTAssertEqual(OEMCode.dPIHVMirror1.dmxIn, 0)
        XCTAssertEqual(OEMCode.dPIHVMirror1.dmxOut, 1)
        XCTAssertEqual(OEMCode.dPIHVMirror1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.dPIHVMirror1.isRDMSupported, false)

        // OemE16Nd1 (0x9B1)
        XCTAssertEqual(OEMCode.e16Nd1, 0x9B1)
        XCTAssertEqual(OEMCode.e16Nd1.description, "OemE16Nd1")
        XCTAssertEqual(OEMCode.e16Nd1.mnemonic, "OemE16Nd1")
        XCTAssertEqual(OEMCode.e16Nd1.manufacturer, "Engineering Solutions Inc.")
        XCTAssertEqual(OEMCode.e16Nd1.product, "E16 RGB Node Driver")
        XCTAssertEqual(OEMCode.e16Nd1.dmxIn, 0)
        XCTAssertEqual(OEMCode.e16Nd1.dmxOut, 4)
        XCTAssertEqual(OEMCode.e16Nd1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.e16Nd1.isRDMSupported, false)

        // OemE4Nd1 (0x9B3)
        XCTAssertEqual(OEMCode.e4Nd1, 0x9B3)
        XCTAssertEqual(OEMCode.e4Nd1.description, "OemE4Nd1")
        XCTAssertEqual(OEMCode.e4Nd1.mnemonic, "OemE4Nd1")
        XCTAssertEqual(OEMCode.e4Nd1.manufacturer, "Engineering Solutions Inc.")
        XCTAssertEqual(OEMCode.e4Nd1.product, "E4 RGB Node Driver")
        XCTAssertEqual(OEMCode.e4Nd1.dmxIn, 0)
        XCTAssertEqual(OEMCode.e4Nd1.dmxOut, 1)
        XCTAssertEqual(OEMCode.e4Nd1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.e4Nd1.isRDMSupported, false)

        // OemE8Nd1 (0x9B2)
        XCTAssertEqual(OEMCode.e8Nd1, 0x9B2)
        XCTAssertEqual(OEMCode.e8Nd1.description, "OemE8Nd1")
        XCTAssertEqual(OEMCode.e8Nd1.mnemonic, "OemE8Nd1")
        XCTAssertEqual(OEMCode.e8Nd1.manufacturer, "Engineering Solutions Inc.")
        XCTAssertEqual(OEMCode.e8Nd1.product, "E8 RGB Node Driver")
        XCTAssertEqual(OEMCode.e8Nd1.dmxIn, 0)
        XCTAssertEqual(OEMCode.e8Nd1.dmxOut, 2)
        XCTAssertEqual(OEMCode.e8Nd1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.e8Nd1.isRDMSupported, false)

        // OemEastSunNET1D01 (0x2884)
        XCTAssertEqual(OEMCode.eastSunNET1D01, 0x2884)
        XCTAssertEqual(OEMCode.eastSunNET1D01.description, "OemEastSunNET1D01")
        XCTAssertEqual(OEMCode.eastSunNET1D01.mnemonic, "OemEastSunNET1D01")
        XCTAssertEqual(OEMCode.eastSunNET1D01.manufacturer, "EastSun Technology CO., Ltd")
        XCTAssertEqual(OEMCode.eastSunNET1D01.product, "NET1D01")
        XCTAssertEqual(OEMCode.eastSunNET1D01.dmxIn, 1)
        XCTAssertEqual(OEMCode.eastSunNET1D01.dmxOut, 1)
        XCTAssertEqual(OEMCode.eastSunNET1D01.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.eastSunNET1D01.isRDMSupported, true)

        // OemEastSunNET4D01 (0x2883)
        XCTAssertEqual(OEMCode.eastSunNET4D01, 0x2883)
        XCTAssertEqual(OEMCode.eastSunNET4D01.description, "OemEastSunNET4D01")
        XCTAssertEqual(OEMCode.eastSunNET4D01.mnemonic, "OemEastSunNET4D01")
        XCTAssertEqual(OEMCode.eastSunNET4D01.manufacturer, "EastSun Technology CO., Ltd")
        XCTAssertEqual(OEMCode.eastSunNET4D01.product, "NET4D01")
        XCTAssertEqual(OEMCode.eastSunNET4D01.dmxIn, 1)
        XCTAssertEqual(OEMCode.eastSunNET4D01.dmxOut, 1)
        XCTAssertEqual(OEMCode.eastSunNET4D01.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.eastSunNET4D01.isRDMSupported, true)

        // OemEdiEdig (0x1B0)
        XCTAssertEqual(OEMCode.ediEdig, 0x1B0)
        XCTAssertEqual(OEMCode.ediEdig.description, "OemEdiEdig")
        XCTAssertEqual(OEMCode.ediEdig.mnemonic, "OemEdiEdig")
        XCTAssertEqual(OEMCode.ediEdig.manufacturer, "EDI")
        XCTAssertEqual(OEMCode.ediEdig.product, "Edig")
        XCTAssertEqual(OEMCode.ediEdig.dmxIn, 4)
        XCTAssertEqual(OEMCode.ediEdig.dmxOut, 4)
        XCTAssertEqual(OEMCode.ediEdig.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ediEdig.isRDMSupported, false)

        // OemEdKeeDesAlr1 (0x1230)
        XCTAssertEqual(OEMCode.edKeeDesAlr1, 0x1230)
        XCTAssertEqual(OEMCode.edKeeDesAlr1.description, "OemEdKeeDesAlr1")
        XCTAssertEqual(OEMCode.edKeeDesAlr1.mnemonic, "OemEdKeeDesAlr1")
        XCTAssertEqual(OEMCode.edKeeDesAlr1.manufacturer, "Ed Keefe Design")
        XCTAssertEqual(OEMCode.edKeeDesAlr1.product, "Advanced Laser Router")
        XCTAssertEqual(OEMCode.edKeeDesAlr1.dmxIn, 1)
        XCTAssertEqual(OEMCode.edKeeDesAlr1.dmxOut, 0)
        XCTAssertEqual(OEMCode.edKeeDesAlr1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.edKeeDesAlr1.isRDMSupported, true)

        // OemElatEpoe2 (0x2811)
        XCTAssertEqual(OEMCode.elatEpoe2, 0x2811)
        XCTAssertEqual(OEMCode.elatEpoe2.description, "OemElatEpoe2")
        XCTAssertEqual(OEMCode.elatEpoe2.mnemonic, "OemElatEpoe2")
        XCTAssertEqual(OEMCode.elatEpoe2.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elatEpoe2.product, "eNode 2POE")
        XCTAssertEqual(OEMCode.elatEpoe2.dmxIn, 0)
        XCTAssertEqual(OEMCode.elatEpoe2.dmxOut, 2)
        XCTAssertEqual(OEMCode.elatEpoe2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elatEpoe2.isRDMSupported, false)

        // OemElation4CastDMXBridge (0x2886)
        XCTAssertEqual(OEMCode.elation4CastDMXBridge, 0x2886)
        XCTAssertEqual(OEMCode.elation4CastDMXBridge.description, "OemElation4CastDMXBridge")
        XCTAssertEqual(OEMCode.elation4CastDMXBridge.mnemonic, "OemElation4CastDMXBridge")
        XCTAssertEqual(OEMCode.elation4CastDMXBridge.manufacturer, "Elation Professional")
        XCTAssertEqual(OEMCode.elation4CastDMXBridge.product, "4 Cast DMX Bridge")
        XCTAssertEqual(OEMCode.elation4CastDMXBridge.dmxIn, 0)
        XCTAssertEqual(OEMCode.elation4CastDMXBridge.dmxOut, 4)
        XCTAssertEqual(OEMCode.elation4CastDMXBridge.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elation4CastDMXBridge.isRDMSupported, false)

        // OemElationEclipse1 (0x28DA)
        XCTAssertEqual(OEMCode.elationEclipse1, 0x28DA)
        XCTAssertEqual(OEMCode.elationEclipse1.description, "OemElationEclipse1")
        XCTAssertEqual(OEMCode.elationEclipse1.mnemonic, "OemElationEclipse1")
        XCTAssertEqual(OEMCode.elationEclipse1.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elationEclipse1.product, "Eclipse")
        XCTAssertEqual(OEMCode.elationEclipse1.dmxIn, 2)
        XCTAssertEqual(OEMCode.elationEclipse1.dmxOut, 2)
        XCTAssertEqual(OEMCode.elationEclipse1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationEclipse1.isRDMSupported, true)

        // OemElationLightingeNode2Poe (0x289E)
        XCTAssertEqual(OEMCode.elationLightingeNode2Poe, 0x289E)
        XCTAssertEqual(OEMCode.elationLightingeNode2Poe.description, "OemElationLightingeNode2Poe")
        XCTAssertEqual(OEMCode.elationLightingeNode2Poe.mnemonic, "OemElationLightingeNode2Poe")
        XCTAssertEqual(OEMCode.elationLightingeNode2Poe.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elationLightingeNode2Poe.product, "eNode 2 POE")
        XCTAssertEqual(OEMCode.elationLightingeNode2Poe.dmxIn, 2)
        XCTAssertEqual(OEMCode.elationLightingeNode2Poe.dmxOut, 2)
        XCTAssertEqual(OEMCode.elationLightingeNode2Poe.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationLightingeNode2Poe.isRDMSupported, true)

        // OemElationShowDes1 (0x28A8)
        XCTAssertEqual(OEMCode.elationShowDes1, 0x28A8)
        XCTAssertEqual(OEMCode.elationShowDes1.description, "OemElationShowDes1")
        XCTAssertEqual(OEMCode.elationShowDes1.mnemonic, "OemElationShowDes1")
        XCTAssertEqual(OEMCode.elationShowDes1.manufacturer, "Elation Professional")
        XCTAssertEqual(OEMCode.elationShowDes1.product, "Show Designer")
        XCTAssertEqual(OEMCode.elationShowDes1.dmxIn, 0)
        XCTAssertEqual(OEMCode.elationShowDes1.dmxOut, 24)
        XCTAssertEqual(OEMCode.elationShowDes1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.elationShowDes1.isRDMSupported, true)

        // OemElationTvlSoft1 (0x2804)
        XCTAssertEqual(OEMCode.elationTvlSoft1, 0x2804)
        XCTAssertEqual(OEMCode.elationTvlSoft1.description, "OemElationTvlSoft1")
        XCTAssertEqual(OEMCode.elationTvlSoft1.mnemonic, "OemElationTvlSoft1")
        XCTAssertEqual(OEMCode.elationTvlSoft1.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elationTvlSoft1.product, "TVL Softlight DW")
        XCTAssertEqual(OEMCode.elationTvlSoft1.dmxIn, 1)
        XCTAssertEqual(OEMCode.elationTvlSoft1.dmxOut, 1)
        XCTAssertEqual(OEMCode.elationTvlSoft1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elationTvlSoft1.isRDMSupported, false)

        // OemElatPixelDriver40001 (0x28BE)
        XCTAssertEqual(OEMCode.elatPixelDriver40001, 0x28BE)
        XCTAssertEqual(OEMCode.elatPixelDriver40001.description, "OemElatPixelDriver40001")
        XCTAssertEqual(OEMCode.elatPixelDriver40001.mnemonic, "OemElatPixelDriver40001")
        XCTAssertEqual(OEMCode.elatPixelDriver40001.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elatPixelDriver40001.product, "Pixel Driver 4000")
        XCTAssertEqual(OEMCode.elatPixelDriver40001.dmxIn, 0)
        XCTAssertEqual(OEMCode.elatPixelDriver40001.dmxOut, 4)
        XCTAssertEqual(OEMCode.elatPixelDriver40001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elatPixelDriver40001.isRDMSupported, false)

        // OemElatTvl1 (0x2812)
        XCTAssertEqual(OEMCode.elatTvl1, 0x2812)
        XCTAssertEqual(OEMCode.elatTvl1.description, "OemElatTvl1")
        XCTAssertEqual(OEMCode.elatTvl1.mnemonic, "OemElatTvl1")
        XCTAssertEqual(OEMCode.elatTvl1.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elatTvl1.product, "TVL Panel DW")
        XCTAssertEqual(OEMCode.elatTvl1.dmxIn, 1)
        XCTAssertEqual(OEMCode.elatTvl1.dmxOut, 1)
        XCTAssertEqual(OEMCode.elatTvl1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elatTvl1.isRDMSupported, false)

        // OemElatTvl2 (0x2814)
        XCTAssertEqual(OEMCode.elatTvl2, 0x2814)
        XCTAssertEqual(OEMCode.elatTvl2.description, "OemElatTvl2")
        XCTAssertEqual(OEMCode.elatTvl2.mnemonic, "OemElatTvl2")
        XCTAssertEqual(OEMCode.elatTvl2.manufacturer, "Elation Lighting")
        XCTAssertEqual(OEMCode.elatTvl2.product, "TVL Softlight DW")
        XCTAssertEqual(OEMCode.elatTvl2.dmxIn, 1)
        XCTAssertEqual(OEMCode.elatTvl2.dmxOut, 1)
        XCTAssertEqual(OEMCode.elatTvl2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elatTvl2.isRDMSupported, false)

        // OemElcNode2 (0x90)
        XCTAssertEqual(OEMCode.elcNode2, 0x90)
        XCTAssertEqual(OEMCode.elcNode2.description, "OemElcNode2")
        XCTAssertEqual(OEMCode.elcNode2.mnemonic, "OemElcNode2")
        XCTAssertEqual(OEMCode.elcNode2.manufacturer, "ELC")
        XCTAssertEqual(OEMCode.elcNode2.product, "Two Port Node")
        XCTAssertEqual(OEMCode.elcNode2.dmxIn, 0)
        XCTAssertEqual(OEMCode.elcNode2.dmxOut, 2)
        XCTAssertEqual(OEMCode.elcNode2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elcNode2.isRDMSupported, false)

        // OemElcNode4 (0x91)
        XCTAssertEqual(OEMCode.elcNode4, 0x91)
        XCTAssertEqual(OEMCode.elcNode4.description, "OemElcNode4")
        XCTAssertEqual(OEMCode.elcNode4.mnemonic, "OemElcNode4")
        XCTAssertEqual(OEMCode.elcNode4.manufacturer, "ELC")
        XCTAssertEqual(OEMCode.elcNode4.product, "Four Port Node")
        XCTAssertEqual(OEMCode.elcNode4.dmxIn, 4)
        XCTAssertEqual(OEMCode.elcNode4.dmxOut, 4)
        XCTAssertEqual(OEMCode.elcNode4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elcNode4.isRDMSupported, false)

        // OemEldeaAuNode1 (0x283A)
        XCTAssertEqual(OEMCode.eldeaAuNode1, 0x283A)
        XCTAssertEqual(OEMCode.eldeaAuNode1.description, "OemEldeaAuNode1")
        XCTAssertEqual(OEMCode.eldeaAuNode1.mnemonic, "OemEldeaAuNode1")
        XCTAssertEqual(OEMCode.eldeaAuNode1.manufacturer, "eIdea - Creative Technology")
        XCTAssertEqual(OEMCode.eldeaAuNode1.product, "AuNode")
        XCTAssertEqual(OEMCode.eldeaAuNode1.dmxIn, 0)
        XCTAssertEqual(OEMCode.eldeaAuNode1.dmxOut, 1)
        XCTAssertEqual(OEMCode.eldeaAuNode1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.eldeaAuNode1.isRDMSupported, false)

        // OemEldoPowerBox (0xE10)
        XCTAssertEqual(OEMCode.eldoPowerBox, 0xE10)
        XCTAssertEqual(OEMCode.eldoPowerBox.description, "OemEldoPowerBox")
        XCTAssertEqual(OEMCode.eldoPowerBox.mnemonic, "OemEldoPowerBox")
        XCTAssertEqual(OEMCode.eldoPowerBox.manufacturer, "eldoLED")
        XCTAssertEqual(OEMCode.eldoPowerBox.product, "PowerBOX Addresser")
        XCTAssertEqual(OEMCode.eldoPowerBox.dmxIn, 0)
        XCTAssertEqual(OEMCode.eldoPowerBox.dmxOut, 4)
        XCTAssertEqual(OEMCode.eldoPowerBox.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.eldoPowerBox.isRDMSupported, true)

        // OemElecSpVp40 (0x8E0)
        XCTAssertEqual(OEMCode.elecSpVp40, 0x8E0)
        XCTAssertEqual(OEMCode.elecSpVp40.description, "OemElecSpVp40")
        XCTAssertEqual(OEMCode.elecSpVp40.mnemonic, "OemElecSpVp40")
        XCTAssertEqual(OEMCode.elecSpVp40.manufacturer, "Electric Spark")
        XCTAssertEqual(OEMCode.elecSpVp40.product, "VPIX40")
        XCTAssertEqual(OEMCode.elecSpVp40.dmxIn, 1)
        XCTAssertEqual(OEMCode.elecSpVp40.dmxOut, 3)
        XCTAssertEqual(OEMCode.elecSpVp40.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elecSpVp40.isRDMSupported, true)

        // OemElectroLabAvvio4 (0xED0)
        XCTAssertEqual(OEMCode.electroLabAvvio4, 0xED0)
        XCTAssertEqual(OEMCode.electroLabAvvio4.description, "OemElectroLabAvvio4")
        XCTAssertEqual(OEMCode.electroLabAvvio4.mnemonic, "OemElectroLabAvvio4")
        XCTAssertEqual(OEMCode.electroLabAvvio4.manufacturer, "ELETTROLAB Srl")
        XCTAssertEqual(OEMCode.electroLabAvvio4.product, "Avvio 04")
        XCTAssertEqual(OEMCode.electroLabAvvio4.dmxIn, 0)
        XCTAssertEqual(OEMCode.electroLabAvvio4.dmxOut, 0)
        XCTAssertEqual(OEMCode.electroLabAvvio4.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.electroLabAvvio4.isRDMSupported, true)

        // OemElectroLabRemoto (0xED1)
        XCTAssertEqual(OEMCode.electroLabRemoto, 0xED1)
        XCTAssertEqual(OEMCode.electroLabRemoto.description, "OemElectroLabRemoto")
        XCTAssertEqual(OEMCode.electroLabRemoto.mnemonic, "OemElectroLabRemoto")
        XCTAssertEqual(OEMCode.electroLabRemoto.manufacturer, "ELETTROLAB Srl")
        XCTAssertEqual(OEMCode.electroLabRemoto.product, "Remoto")
        XCTAssertEqual(OEMCode.electroLabRemoto.dmxIn, 2)
        XCTAssertEqual(OEMCode.electroLabRemoto.dmxOut, 2)
        XCTAssertEqual(OEMCode.electroLabRemoto.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.electroLabRemoto.isRDMSupported, true)

        // OemElectroTasth1U (0x2897)
        XCTAssertEqual(OEMCode.electroTasth1U, 0x2897)
        XCTAssertEqual(OEMCode.electroTasth1U.description, "OemElectroTasth1U")
        XCTAssertEqual(OEMCode.electroTasth1U.mnemonic, "OemElectroTasth1U")
        XCTAssertEqual(OEMCode.electroTasth1U.manufacturer, "ElectroTAS")
        XCTAssertEqual(OEMCode.electroTasth1U.product, "TH-1U")
        XCTAssertEqual(OEMCode.electroTasth1U.dmxIn, 1)
        XCTAssertEqual(OEMCode.electroTasth1U.dmxOut, 1)
        XCTAssertEqual(OEMCode.electroTasth1U.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.electroTasth1U.isRDMSupported, false)

        // OemElectroTasth2U (0x2896)
        XCTAssertEqual(OEMCode.electroTasth2U, 0x2896)
        XCTAssertEqual(OEMCode.electroTasth2U.description, "OemElectroTasth2U")
        XCTAssertEqual(OEMCode.electroTasth2U.mnemonic, "OemElectroTasth2U")
        XCTAssertEqual(OEMCode.electroTasth2U.manufacturer, "ElectroTAS")
        XCTAssertEqual(OEMCode.electroTasth2U.product, "TH-2U")
        XCTAssertEqual(OEMCode.electroTasth2U.dmxIn, 2)
        XCTAssertEqual(OEMCode.electroTasth2U.dmxOut, 2)
        XCTAssertEqual(OEMCode.electroTasth2U.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.electroTasth2U.isRDMSupported, false)

        // OemelectroTasth4U (0x2895)
        XCTAssertEqual(OEMCode.electroTasth4U, 0x2895)
        XCTAssertEqual(OEMCode.electroTasth4U.description, "OemelectroTasth4U")
        XCTAssertEqual(OEMCode.electroTasth4U.mnemonic, "OemelectroTasth4U")
        XCTAssertEqual(OEMCode.electroTasth4U.manufacturer, "electroTAS")
        XCTAssertEqual(OEMCode.electroTasth4U.product, "TH-4U")
        XCTAssertEqual(OEMCode.electroTasth4U.dmxIn, 4)
        XCTAssertEqual(OEMCode.electroTasth4U.dmxOut, 4)
        XCTAssertEqual(OEMCode.electroTasth4U.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.electroTasth4U.isRDMSupported, false)

        // OemElectroTasth6U (0x2894)
        XCTAssertEqual(OEMCode.electroTasth6U, 0x2894)
        XCTAssertEqual(OEMCode.electroTasth6U.description, "OemElectroTasth6U")
        XCTAssertEqual(OEMCode.electroTasth6U.mnemonic, "OemElectroTasth6U")
        XCTAssertEqual(OEMCode.electroTasth6U.manufacturer, "ElectroTAS")
        XCTAssertEqual(OEMCode.electroTasth6U.product, "TH-6U")
        XCTAssertEqual(OEMCode.electroTasth6U.dmxIn, 6)
        XCTAssertEqual(OEMCode.electroTasth6U.dmxOut, 6)
        XCTAssertEqual(OEMCode.electroTasth6U.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.electroTasth6U.isRDMSupported, false)

        // OemElectroTasth8U (0x2893)
        XCTAssertEqual(OEMCode.electroTasth8U, 0x2893)
        XCTAssertEqual(OEMCode.electroTasth8U.description, "OemElectroTasth8U")
        XCTAssertEqual(OEMCode.electroTasth8U.mnemonic, "OemElectroTasth8U")
        XCTAssertEqual(OEMCode.electroTasth8U.manufacturer, "ElectroTAS")
        XCTAssertEqual(OEMCode.electroTasth8U.product, "TH-8U")
        XCTAssertEqual(OEMCode.electroTasth8U.dmxIn, 8)
        XCTAssertEqual(OEMCode.electroTasth8U.dmxOut, 8)
        XCTAssertEqual(OEMCode.electroTasth8U.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.electroTasth8U.isRDMSupported, false)

        // OemElectroTasThAio1 (0x28A0)
        XCTAssertEqual(OEMCode.electroTasThAio1, 0x28A0)
        XCTAssertEqual(OEMCode.electroTasThAio1.description, "OemElectroTasThAio1")
        XCTAssertEqual(OEMCode.electroTasThAio1.mnemonic, "OemElectroTasThAio1")
        XCTAssertEqual(OEMCode.electroTasThAio1.manufacturer, "ElectroTAS")
        XCTAssertEqual(OEMCode.electroTasThAio1.product, "TH-AIO")
        XCTAssertEqual(OEMCode.electroTasThAio1.dmxIn, 2)
        XCTAssertEqual(OEMCode.electroTasThAio1.dmxOut, 2)
        XCTAssertEqual(OEMCode.electroTasThAio1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.electroTasThAio1.isRDMSupported, false)

        // OemElementViz (0x800)
        XCTAssertEqual(OEMCode.elementViz, 0x800)
        XCTAssertEqual(OEMCode.elementViz.description, "OemElementViz")
        XCTAssertEqual(OEMCode.elementViz.mnemonic, "OemElementViz")
        XCTAssertEqual(OEMCode.elementViz.manufacturer, "Element Labs")
        XCTAssertEqual(OEMCode.elementViz.product, "Vizomo")
        XCTAssertEqual(OEMCode.elementViz.dmxIn, 1)
        XCTAssertEqual(OEMCode.elementViz.dmxOut, 1)
        XCTAssertEqual(OEMCode.elementViz.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.elementViz.isRDMSupported, false)

        // OemElettrolabAccendoSlp (0xE30)
        XCTAssertEqual(OEMCode.elettrolabAccendoSlp, 0xE30)
        XCTAssertEqual(OEMCode.elettrolabAccendoSlp.description, "OemElettrolabAccendoSlp")
        XCTAssertEqual(OEMCode.elettrolabAccendoSlp.mnemonic, "OemElettrolabAccendoSlp")
        XCTAssertEqual(OEMCode.elettrolabAccendoSlp.manufacturer, "ELETTROLAB Srl")
        XCTAssertEqual(OEMCode.elettrolabAccendoSlp.product, "Accendo Smart Light Power")
        XCTAssertEqual(OEMCode.elettrolabAccendoSlp.dmxIn, 1)
        XCTAssertEqual(OEMCode.elettrolabAccendoSlp.dmxOut, 1)
        XCTAssertEqual(OEMCode.elettrolabAccendoSlp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elettrolabAccendoSlp.isRDMSupported, true)

        // OemElettrolabAvvivoMw1 (0x2805)
        XCTAssertEqual(OEMCode.elettrolabAvvivoMw1, 0x2805)
        XCTAssertEqual(OEMCode.elettrolabAvvivoMw1.description, "OemElettrolabAvvivoMw1")
        XCTAssertEqual(OEMCode.elettrolabAvvivoMw1.mnemonic, "OemElettrolabAvvivoMw1")
        XCTAssertEqual(OEMCode.elettrolabAvvivoMw1.manufacturer, "ELETTROLAB Srl")
        XCTAssertEqual(OEMCode.elettrolabAvvivoMw1.product, "Avvio Mini WiFi")
        XCTAssertEqual(OEMCode.elettrolabAvvivoMw1.dmxIn, 0)
        XCTAssertEqual(OEMCode.elettrolabAvvivoMw1.dmxOut, 1)
        XCTAssertEqual(OEMCode.elettrolabAvvivoMw1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elettrolabAvvivoMw1.isRDMSupported, true)

        // OemElink1024 (0x361)
        XCTAssertEqual(OEMCode.elink1024, 0x361)
        XCTAssertEqual(OEMCode.elink1024.description, "OemElink1024")
        XCTAssertEqual(OEMCode.elink1024.mnemonic, "OemElink1024")
        XCTAssertEqual(OEMCode.elink1024.manufacturer, "Ecue")
        XCTAssertEqual(OEMCode.elink1024.product, "Ecue 1024")
        XCTAssertEqual(OEMCode.elink1024.dmxIn, 0)
        XCTAssertEqual(OEMCode.elink1024.dmxOut, 2)
        XCTAssertEqual(OEMCode.elink1024.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elink1024.isRDMSupported, false)

        // OemElink2048 (0x362)
        XCTAssertEqual(OEMCode.elink2048, 0x362)
        XCTAssertEqual(OEMCode.elink2048.description, "OemElink2048")
        XCTAssertEqual(OEMCode.elink2048.mnemonic, "OemElink2048")
        XCTAssertEqual(OEMCode.elink2048.manufacturer, "Ecue")
        XCTAssertEqual(OEMCode.elink2048.product, "Ecue 2048")
        XCTAssertEqual(OEMCode.elink2048.dmxIn, 0)
        XCTAssertEqual(OEMCode.elink2048.dmxOut, 4)
        XCTAssertEqual(OEMCode.elink2048.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elink2048.isRDMSupported, false)

        // OemElink512 (0x360)
        XCTAssertEqual(OEMCode.elink512, 0x360)
        XCTAssertEqual(OEMCode.elink512.description, "OemElink512")
        XCTAssertEqual(OEMCode.elink512.mnemonic, "OemElink512")
        XCTAssertEqual(OEMCode.elink512.manufacturer, "Ecue")
        XCTAssertEqual(OEMCode.elink512.product, "Ecue 512")
        XCTAssertEqual(OEMCode.elink512.dmxIn, 0)
        XCTAssertEqual(OEMCode.elink512.dmxOut, 1)
        XCTAssertEqual(OEMCode.elink512.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.elink512.isRDMSupported, false)

        // OemEnttec0 (0x190)
        XCTAssertEqual(OEMCode.enttec0, 0x190)
        XCTAssertEqual(OEMCode.enttec0.description, "OemEnttec0")
        XCTAssertEqual(OEMCode.enttec0.mnemonic, "OemEnttec0")
        XCTAssertEqual(OEMCode.enttec0.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttec0.product, "Enttec 0")
        XCTAssertEqual(OEMCode.enttec0.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttec0.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttec0.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttec0.isRDMSupported, false)

        // OemEnttec1 (0x191)
        XCTAssertEqual(OEMCode.enttec1, 0x191)
        XCTAssertEqual(OEMCode.enttec1.description, "OemEnttec1")
        XCTAssertEqual(OEMCode.enttec1.mnemonic, "OemEnttec1")
        XCTAssertEqual(OEMCode.enttec1.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttec1.product, "Enttec 1")
        XCTAssertEqual(OEMCode.enttec1.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttec1.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttec1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttec1.isRDMSupported, false)

        // OemEnttec2 (0x192)
        XCTAssertEqual(OEMCode.enttec2, 0x192)
        XCTAssertEqual(OEMCode.enttec2.description, "OemEnttec2")
        XCTAssertEqual(OEMCode.enttec2.mnemonic, "OemEnttec2")
        XCTAssertEqual(OEMCode.enttec2.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttec2.product, "Enttec 2")
        XCTAssertEqual(OEMCode.enttec2.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttec2.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttec2.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttec2.isRDMSupported, false)

        // OemEnttec3 (0x193)
        XCTAssertEqual(OEMCode.enttec3, 0x193)
        XCTAssertEqual(OEMCode.enttec3.description, "OemEnttec3")
        XCTAssertEqual(OEMCode.enttec3.mnemonic, "OemEnttec3")
        XCTAssertEqual(OEMCode.enttec3.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttec3.product, "Enttec 3")
        XCTAssertEqual(OEMCode.enttec3.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttec3.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttec3.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttec3.isRDMSupported, false)

        // OemEnttec4 (0x194)
        XCTAssertEqual(OEMCode.enttec4, 0x194)
        XCTAssertEqual(OEMCode.enttec4.description, "OemEnttec4")
        XCTAssertEqual(OEMCode.enttec4.mnemonic, "OemEnttec4")
        XCTAssertEqual(OEMCode.enttec4.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttec4.product, "Enttec 4")
        XCTAssertEqual(OEMCode.enttec4.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttec4.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttec4.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttec4.isRDMSupported, false)

        // OemEnttec5 (0x195)
        XCTAssertEqual(OEMCode.enttec5, 0x195)
        XCTAssertEqual(OEMCode.enttec5.description, "OemEnttec5")
        XCTAssertEqual(OEMCode.enttec5.mnemonic, "OemEnttec5")
        XCTAssertEqual(OEMCode.enttec5.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttec5.product, "Enttec 5")
        XCTAssertEqual(OEMCode.enttec5.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttec5.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttec5.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttec5.isRDMSupported, false)

        // OemEnttec6 (0x196)
        XCTAssertEqual(OEMCode.enttec6, 0x196)
        XCTAssertEqual(OEMCode.enttec6.description, "OemEnttec6")
        XCTAssertEqual(OEMCode.enttec6.mnemonic, "OemEnttec6")
        XCTAssertEqual(OEMCode.enttec6.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttec6.product, "Enttec 6")
        XCTAssertEqual(OEMCode.enttec6.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttec6.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttec6.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttec6.isRDMSupported, false)

        // OemEnttec7 (0x197)
        XCTAssertEqual(OEMCode.enttec7, 0x197)
        XCTAssertEqual(OEMCode.enttec7.description, "OemEnttec7")
        XCTAssertEqual(OEMCode.enttec7.mnemonic, "OemEnttec7")
        XCTAssertEqual(OEMCode.enttec7.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttec7.product, "Enttec 7")
        XCTAssertEqual(OEMCode.enttec7.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttec7.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttec7.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttec7.isRDMSupported, false)

        // OemEnttec8 (0x198)
        XCTAssertEqual(OEMCode.enttec8, 0x198)
        XCTAssertEqual(OEMCode.enttec8.description, "OemEnttec8")
        XCTAssertEqual(OEMCode.enttec8.mnemonic, "OemEnttec8")
        XCTAssertEqual(OEMCode.enttec8.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttec8.product, "Enttec 8")
        XCTAssertEqual(OEMCode.enttec8.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttec8.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttec8.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttec8.isRDMSupported, false)

        // OemEnttec9 (0x199)
        XCTAssertEqual(OEMCode.enttec9, 0x199)
        XCTAssertEqual(OEMCode.enttec9.description, "OemEnttec9")
        XCTAssertEqual(OEMCode.enttec9.mnemonic, "OemEnttec9")
        XCTAssertEqual(OEMCode.enttec9.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttec9.product, "Enttec 9")
        XCTAssertEqual(OEMCode.enttec9.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttec9.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttec9.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttec9.isRDMSupported, false)

        // OemEntteca (0x19A)
        XCTAssertEqual(OEMCode.entteca, 0x19A)
        XCTAssertEqual(OEMCode.entteca.description, "OemEntteca")
        XCTAssertEqual(OEMCode.entteca.mnemonic, "OemEntteca")
        XCTAssertEqual(OEMCode.entteca.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.entteca.product, "Enttec a")
        XCTAssertEqual(OEMCode.entteca.dmxIn, 0)
        XCTAssertEqual(OEMCode.entteca.dmxOut, 0)
        XCTAssertEqual(OEMCode.entteca.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.entteca.isRDMSupported, false)

        // OemEnttecb (0x19B)
        XCTAssertEqual(OEMCode.enttecb, 0x19B)
        XCTAssertEqual(OEMCode.enttecb.description, "OemEnttecb")
        XCTAssertEqual(OEMCode.enttecb.mnemonic, "OemEnttecb")
        XCTAssertEqual(OEMCode.enttecb.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttecb.product, "Enttec b")
        XCTAssertEqual(OEMCode.enttecb.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttecb.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttecb.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttecb.isRDMSupported, false)

        // OemEnttecc (0x19C)
        XCTAssertEqual(OEMCode.enttecc, 0x19C)
        XCTAssertEqual(OEMCode.enttecc.description, "OemEnttecc")
        XCTAssertEqual(OEMCode.enttecc.mnemonic, "OemEnttecc")
        XCTAssertEqual(OEMCode.enttecc.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttecc.product, "Enttec c")
        XCTAssertEqual(OEMCode.enttecc.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttecc.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttecc.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttecc.isRDMSupported, false)

        // OemEnttecd (0x19D)
        XCTAssertEqual(OEMCode.enttecd, 0x19D)
        XCTAssertEqual(OEMCode.enttecd.description, "OemEnttecd")
        XCTAssertEqual(OEMCode.enttecd.mnemonic, "OemEnttecd")
        XCTAssertEqual(OEMCode.enttecd.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttecd.product, "Enttec d")
        XCTAssertEqual(OEMCode.enttecd.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttecd.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttecd.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttecd.isRDMSupported, false)

        // OemEnttece (0x19E)
        XCTAssertEqual(OEMCode.enttece, 0x19E)
        XCTAssertEqual(OEMCode.enttece.description, "OemEnttece")
        XCTAssertEqual(OEMCode.enttece.mnemonic, "OemEnttece")
        XCTAssertEqual(OEMCode.enttece.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttece.product, "Enttec e")
        XCTAssertEqual(OEMCode.enttece.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttece.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttece.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttece.isRDMSupported, false)

        // OemEnttecf (0x19F)
        XCTAssertEqual(OEMCode.enttecf, 0x19F)
        XCTAssertEqual(OEMCode.enttecf.description, "OemEnttecf")
        XCTAssertEqual(OEMCode.enttecf.mnemonic, "OemEnttecf")
        XCTAssertEqual(OEMCode.enttecf.manufacturer, "Enttec")
        XCTAssertEqual(OEMCode.enttecf.product, "Enttec f")
        XCTAssertEqual(OEMCode.enttecf.dmxIn, 0)
        XCTAssertEqual(OEMCode.enttecf.dmxOut, 0)
        XCTAssertEqual(OEMCode.enttecf.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.enttecf.isRDMSupported, false)

        // OemEquipLsCore1 (0x28B2)
        XCTAssertEqual(OEMCode.equipLsCore1, 0x28B2)
        XCTAssertEqual(OEMCode.equipLsCore1.description, "OemEquipLsCore1")
        XCTAssertEqual(OEMCode.equipLsCore1.mnemonic, "OemEquipLsCore1")
        XCTAssertEqual(OEMCode.equipLsCore1.manufacturer, "EQUIPSON S.A.")
        XCTAssertEqual(OEMCode.equipLsCore1.product, "LS-Core")
        XCTAssertEqual(OEMCode.equipLsCore1.dmxIn, 0)
        XCTAssertEqual(OEMCode.equipLsCore1.dmxOut, 8)
        XCTAssertEqual(OEMCode.equipLsCore1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equipLsCore1.isRDMSupported, false)

        // OemEquipsWkDmxNet4 (0xEA3)
        XCTAssertEqual(OEMCode.equipsWkDmxNet4, 0xEA3)
        XCTAssertEqual(OEMCode.equipsWkDmxNet4.description, "OemEquipsWkDmxNet4")
        XCTAssertEqual(OEMCode.equipsWkDmxNet4.mnemonic, "OemEquipsWkDmxNet4")
        XCTAssertEqual(OEMCode.equipsWkDmxNet4.manufacturer, "EQUIPSON S.A.")
        XCTAssertEqual(OEMCode.equipsWkDmxNet4.product, "WORK DMXNET 4")
        XCTAssertEqual(OEMCode.equipsWkDmxNet4.dmxIn, 0)
        XCTAssertEqual(OEMCode.equipsWkDmxNet4.dmxOut, 4)
        XCTAssertEqual(OEMCode.equipsWkDmxNet4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equipsWkDmxNet4.isRDMSupported, false)

        // OemEquipsWkDmxNet8 (0xEA4)
        XCTAssertEqual(OEMCode.equipsWkDmxNet8, 0xEA4)
        XCTAssertEqual(OEMCode.equipsWkDmxNet8.description, "OemEquipsWkDmxNet8")
        XCTAssertEqual(OEMCode.equipsWkDmxNet8.mnemonic, "OemEquipsWkDmxNet8")
        XCTAssertEqual(OEMCode.equipsWkDmxNet8.manufacturer, "EQUIPSON S.A.")
        XCTAssertEqual(OEMCode.equipsWkDmxNet8.product, "WORK DMXNET 8")
        XCTAssertEqual(OEMCode.equipsWkDmxNet8.dmxIn, 0)
        XCTAssertEqual(OEMCode.equipsWkDmxNet8.dmxOut, 4)
        XCTAssertEqual(OEMCode.equipsWkDmxNet8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equipsWkDmxNet8.isRDMSupported, false)

        // OemEquipsWkLm3r3 (0xEA1)
        XCTAssertEqual(OEMCode.equipsWkLm3r3, 0xEA1)
        XCTAssertEqual(OEMCode.equipsWkLm3r3.description, "OemEquipsWkLm3r3")
        XCTAssertEqual(OEMCode.equipsWkLm3r3.mnemonic, "OemEquipsWkLm3r3")
        XCTAssertEqual(OEMCode.equipsWkLm3r3.manufacturer, "EQUIPSON S.A.")
        XCTAssertEqual(OEMCode.equipsWkLm3r3.product, "WORK LM 3R2")
        XCTAssertEqual(OEMCode.equipsWkLm3r3.dmxIn, 0)
        XCTAssertEqual(OEMCode.equipsWkLm3r3.dmxOut, 2)
        XCTAssertEqual(OEMCode.equipsWkLm3r3.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equipsWkLm3r3.isRDMSupported, false)

        // OemEquipsWkLm5 (0xEA0)
        XCTAssertEqual(OEMCode.equipsWkLm5, 0xEA0)
        XCTAssertEqual(OEMCode.equipsWkLm5.description, "OemEquipsWkLm5")
        XCTAssertEqual(OEMCode.equipsWkLm5.mnemonic, "OemEquipsWkLm5")
        XCTAssertEqual(OEMCode.equipsWkLm5.manufacturer, "EQUIPSON S.A.")
        XCTAssertEqual(OEMCode.equipsWkLm5.product, "WORK LM 5")
        XCTAssertEqual(OEMCode.equipsWkLm5.dmxIn, 0)
        XCTAssertEqual(OEMCode.equipsWkLm5.dmxOut, 1)
        XCTAssertEqual(OEMCode.equipsWkLm5.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equipsWkLm5.isRDMSupported, false)

        // OemEquipsWkLm5w (0xEA2)
        XCTAssertEqual(OEMCode.equipsWkLm5w, 0xEA2)
        XCTAssertEqual(OEMCode.equipsWkLm5w.description, "OemEquipsWkLm5w")
        XCTAssertEqual(OEMCode.equipsWkLm5w.mnemonic, "OemEquipsWkLm5w")
        XCTAssertEqual(OEMCode.equipsWkLm5w.manufacturer, "EQUIPSON S.A.")
        XCTAssertEqual(OEMCode.equipsWkLm5w.product, "WORK LM 5W")
        XCTAssertEqual(OEMCode.equipsWkLm5w.dmxIn, 0)
        XCTAssertEqual(OEMCode.equipsWkLm5w.dmxOut, 1)
        XCTAssertEqual(OEMCode.equipsWkLm5w.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equipsWkLm5w.isRDMSupported, false)

        // OemEquipWorkLm4 (0x930)
        XCTAssertEqual(OEMCode.equipWorkLm4, 0x930)
        XCTAssertEqual(OEMCode.equipWorkLm4.description, "OemEquipWorkLm4")
        XCTAssertEqual(OEMCode.equipWorkLm4.mnemonic, "OemEquipWorkLm4")
        XCTAssertEqual(OEMCode.equipWorkLm4.manufacturer, "EQUIPSON S.A.")
        XCTAssertEqual(OEMCode.equipWorkLm4.product, "WORK LM-4")
        XCTAssertEqual(OEMCode.equipWorkLm4.dmxIn, 0)
        XCTAssertEqual(OEMCode.equipWorkLm4.dmxOut, 1)
        XCTAssertEqual(OEMCode.equipWorkLm4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equipWorkLm4.isRDMSupported, false)

        // OemEquipWorkLsCore1 (0x28B4)
        XCTAssertEqual(OEMCode.equipWorkLsCore1, 0x28B4)
        XCTAssertEqual(OEMCode.equipWorkLsCore1.description, "OemEquipWorkLsCore1")
        XCTAssertEqual(OEMCode.equipWorkLsCore1.mnemonic, "OemEquipWorkLsCore1")
        XCTAssertEqual(OEMCode.equipWorkLsCore1.manufacturer, "EQUIPSON S.A.")
        XCTAssertEqual(OEMCode.equipWorkLsCore1.product, "WORK LS-1")
        XCTAssertEqual(OEMCode.equipWorkLsCore1.dmxIn, 0)
        XCTAssertEqual(OEMCode.equipWorkLsCore1.dmxOut, 8)
        XCTAssertEqual(OEMCode.equipWorkLsCore1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.equipWorkLsCore1.isRDMSupported, false)

        // OemEralPaseoPixelBoxController1 (0x28D4)
        XCTAssertEqual(OEMCode.eralPaseoPixelBoxController1, 0x28D4)
        XCTAssertEqual(OEMCode.eralPaseoPixelBoxController1.description, "OemEralPaseoPixelBoxController1")
        XCTAssertEqual(OEMCode.eralPaseoPixelBoxController1.mnemonic, "OemEralPaseoPixelBoxController1")
        XCTAssertEqual(OEMCode.eralPaseoPixelBoxController1.manufacturer, "ERAL s.r.l.")
        XCTAssertEqual(OEMCode.eralPaseoPixelBoxController1.product, "Paseo Pixel Box Controller")
        XCTAssertEqual(OEMCode.eralPaseoPixelBoxController1.dmxIn, 0)
        XCTAssertEqual(OEMCode.eralPaseoPixelBoxController1.dmxOut, 0)
        XCTAssertEqual(OEMCode.eralPaseoPixelBoxController1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.eralPaseoPixelBoxController1.isRDMSupported, true)

        // OemEsiTr1 (0x9B0)
        XCTAssertEqual(OEMCode.esiTr1, 0x9B0)
        XCTAssertEqual(OEMCode.esiTr1.description, "OemEsiTr1")
        XCTAssertEqual(OEMCode.esiTr1.mnemonic, "OemEsiTr1")
        XCTAssertEqual(OEMCode.esiTr1.manufacturer, "Engineering Solutions Inc.")
        XCTAssertEqual(OEMCode.esiTr1.product, "Tripix controller")
        XCTAssertEqual(OEMCode.esiTr1.dmxIn, 0)
        XCTAssertEqual(OEMCode.esiTr1.dmxOut, 2)
        XCTAssertEqual(OEMCode.esiTr1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.esiTr1.isRDMSupported, false)

        // OemEthDec2 (0x610)
        XCTAssertEqual(OEMCode.ethDec2, 0x610)
        XCTAssertEqual(OEMCode.ethDec2.description, "OemEthDec2")
        XCTAssertEqual(OEMCode.ethDec2.mnemonic, "OemEthDec2")
        XCTAssertEqual(OEMCode.ethDec2.manufacturer, "DmxDesign")
        XCTAssertEqual(OEMCode.ethDec2.product, "EthDec2")
        XCTAssertEqual(OEMCode.ethDec2.dmxIn, 0)
        XCTAssertEqual(OEMCode.ethDec2.dmxOut, 2)
        XCTAssertEqual(OEMCode.ethDec2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ethDec2.isRDMSupported, false)

        // OemEthDmx2 (0x321)
        XCTAssertEqual(OEMCode.ethDmx2, 0x321)
        XCTAssertEqual(OEMCode.ethDmx2.description, "OemEthDmx2")
        XCTAssertEqual(OEMCode.ethDmx2.mnemonic, "OemEthDmx2")
        XCTAssertEqual(OEMCode.ethDmx2.manufacturer, "Luminex LCE")
        XCTAssertEqual(OEMCode.ethDmx2.product, "Ethernet-DMX2")
        XCTAssertEqual(OEMCode.ethDmx2.dmxIn, 2)
        XCTAssertEqual(OEMCode.ethDmx2.dmxOut, 2)
        XCTAssertEqual(OEMCode.ethDmx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ethDmx2.isRDMSupported, false)

        // OemEthDmx4 (0x322)
        XCTAssertEqual(OEMCode.ethDmx4, 0x322)
        XCTAssertEqual(OEMCode.ethDmx4.description, "OemEthDmx4")
        XCTAssertEqual(OEMCode.ethDmx4.mnemonic, "OemEthDmx4")
        XCTAssertEqual(OEMCode.ethDmx4.manufacturer, "Luminex LCE")
        XCTAssertEqual(OEMCode.ethDmx4.product, "Ethernet-DMX4")
        XCTAssertEqual(OEMCode.ethDmx4.dmxIn, 4)
        XCTAssertEqual(OEMCode.ethDmx4.dmxOut, 4)
        XCTAssertEqual(OEMCode.ethDmx4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ethDmx4.isRDMSupported, false)

        // OemEthDmx8 (0x320)
        XCTAssertEqual(OEMCode.ethDmx8, 0x320)
        XCTAssertEqual(OEMCode.ethDmx8.description, "OemEthDmx8")
        XCTAssertEqual(OEMCode.ethDmx8.mnemonic, "OemEthDmx8")
        XCTAssertEqual(OEMCode.ethDmx8.manufacturer, "Luminex LCE")
        XCTAssertEqual(OEMCode.ethDmx8.product, "Ethernet-DMX8")
        XCTAssertEqual(OEMCode.ethDmx8.dmxIn, 4)
        XCTAssertEqual(OEMCode.ethDmx8.dmxOut, 4)
        XCTAssertEqual(OEMCode.ethDmx8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ethDmx8.isRDMSupported, false)

        // OemEtherLynx (0x3)
        XCTAssertEqual(OEMCode.etherLynx, 0x3)
        XCTAssertEqual(OEMCode.etherLynx.description, "OemEtherLynx")
        XCTAssertEqual(OEMCode.etherLynx.mnemonic, "OemEtherLynx")
        XCTAssertEqual(OEMCode.etherLynx.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynx.product, "Ether-Lynx I")
        XCTAssertEqual(OEMCode.etherLynx.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynx.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynx.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynx.isRDMSupported, true)

        // OemEtherLynx0 (0x100)
        XCTAssertEqual(OEMCode.etherLynx0, 0x100)
        XCTAssertEqual(OEMCode.etherLynx0.description, "OemEtherLynx0")
        XCTAssertEqual(OEMCode.etherLynx0.mnemonic, "OemEtherLynx0")
        XCTAssertEqual(OEMCode.etherLynx0.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynx0.product, "Ether-Lynx Exp 0")
        XCTAssertEqual(OEMCode.etherLynx0.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynx0.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynx0.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynx0.isRDMSupported, true)

        // OemEtherLynx1 (0x101)
        XCTAssertEqual(OEMCode.etherLynx1, 0x101)
        XCTAssertEqual(OEMCode.etherLynx1.description, "OemEtherLynx1")
        XCTAssertEqual(OEMCode.etherLynx1.mnemonic, "OemEtherLynx1")
        XCTAssertEqual(OEMCode.etherLynx1.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynx1.product, "Ether-Lynx Exp 1")
        XCTAssertEqual(OEMCode.etherLynx1.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynx1.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynx1.isRDMSupported, true)

        // OemEtherLynx2 (0x102)
        XCTAssertEqual(OEMCode.etherLynx2, 0x102)
        XCTAssertEqual(OEMCode.etherLynx2.description, "OemEtherLynx2")
        XCTAssertEqual(OEMCode.etherLynx2.mnemonic, "OemEtherLynx2")
        XCTAssertEqual(OEMCode.etherLynx2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynx2.product, "Ether-Lynx Exp 2")
        XCTAssertEqual(OEMCode.etherLynx2.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynx2.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynx2.isRDMSupported, true)

        // OemEtherLynx3 (0x103)
        XCTAssertEqual(OEMCode.etherLynx3, 0x103)
        XCTAssertEqual(OEMCode.etherLynx3.description, "OemEtherLynx3")
        XCTAssertEqual(OEMCode.etherLynx3.mnemonic, "OemEtherLynx3")
        XCTAssertEqual(OEMCode.etherLynx3.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynx3.product, "Ether-Lynx Exp 3")
        XCTAssertEqual(OEMCode.etherLynx3.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynx3.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynx3.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynx3.isRDMSupported, true)

        // OemEtherLynx4 (0x104)
        XCTAssertEqual(OEMCode.etherLynx4, 0x104)
        XCTAssertEqual(OEMCode.etherLynx4.description, "OemEtherLynx4")
        XCTAssertEqual(OEMCode.etherLynx4.mnemonic, "OemEtherLynx4")
        XCTAssertEqual(OEMCode.etherLynx4.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynx4.product, "Ether-Lynx Exp 4")
        XCTAssertEqual(OEMCode.etherLynx4.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynx4.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynx4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynx4.isRDMSupported, true)

        // OemEtherLynx5 (0x105)
        XCTAssertEqual(OEMCode.etherLynx5, 0x105)
        XCTAssertEqual(OEMCode.etherLynx5.description, "OemEtherLynx5")
        XCTAssertEqual(OEMCode.etherLynx5.mnemonic, "OemEtherLynx5")
        XCTAssertEqual(OEMCode.etherLynx5.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynx5.product, "Ether-Lynx Exp 5")
        XCTAssertEqual(OEMCode.etherLynx5.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynx5.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynx5.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynx5.isRDMSupported, true)

        // OemEtherLynx6 (0x106)
        XCTAssertEqual(OEMCode.etherLynx6, 0x106)
        XCTAssertEqual(OEMCode.etherLynx6.description, "OemEtherLynx6")
        XCTAssertEqual(OEMCode.etherLynx6.mnemonic, "OemEtherLynx6")
        XCTAssertEqual(OEMCode.etherLynx6.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynx6.product, "Ether-Lynx Exp 6")
        XCTAssertEqual(OEMCode.etherLynx6.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynx6.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynx6.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynx6.isRDMSupported, true)

        // OemEtherLynx7 (0x107)
        XCTAssertEqual(OEMCode.etherLynx7, 0x107)
        XCTAssertEqual(OEMCode.etherLynx7.description, "OemEtherLynx7")
        XCTAssertEqual(OEMCode.etherLynx7.mnemonic, "OemEtherLynx7")
        XCTAssertEqual(OEMCode.etherLynx7.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynx7.product, "Ether-Lynx Exp 7")
        XCTAssertEqual(OEMCode.etherLynx7.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynx7.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynx7.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynx7.isRDMSupported, true)

        // OemEtherLynx8 (0x108)
        XCTAssertEqual(OEMCode.etherLynx8, 0x108)
        XCTAssertEqual(OEMCode.etherLynx8.description, "OemEtherLynx8")
        XCTAssertEqual(OEMCode.etherLynx8.mnemonic, "OemEtherLynx8")
        XCTAssertEqual(OEMCode.etherLynx8.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynx8.product, "Ether-Lynx Exp 8")
        XCTAssertEqual(OEMCode.etherLynx8.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynx8.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynx8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynx8.isRDMSupported, true)

        // OemEtherLynx9 (0x109)
        XCTAssertEqual(OEMCode.etherLynx9, 0x109)
        XCTAssertEqual(OEMCode.etherLynx9.description, "OemEtherLynx9")
        XCTAssertEqual(OEMCode.etherLynx9.mnemonic, "OemEtherLynx9")
        XCTAssertEqual(OEMCode.etherLynx9.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynx9.product, "Ether-Lynx Exp 9")
        XCTAssertEqual(OEMCode.etherLynx9.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynx9.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynx9.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynx9.isRDMSupported, true)

        // OemEtherLynxa (0x10A)
        XCTAssertEqual(OEMCode.etherLynxa, 0x10A)
        XCTAssertEqual(OEMCode.etherLynxa.description, "OemEtherLynxa")
        XCTAssertEqual(OEMCode.etherLynxa.mnemonic, "OemEtherLynxa")
        XCTAssertEqual(OEMCode.etherLynxa.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynxa.product, "Ether-Lynx Exp a")
        XCTAssertEqual(OEMCode.etherLynxa.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynxa.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynxa.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynxa.isRDMSupported, true)

        // OemEtherLynxb (0x10B)
        XCTAssertEqual(OEMCode.etherLynxb, 0x10B)
        XCTAssertEqual(OEMCode.etherLynxb.description, "OemEtherLynxb")
        XCTAssertEqual(OEMCode.etherLynxb.mnemonic, "OemEtherLynxb")
        XCTAssertEqual(OEMCode.etherLynxb.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynxb.product, "Ether-Lynx Exp b")
        XCTAssertEqual(OEMCode.etherLynxb.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynxb.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynxb.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynxb.isRDMSupported, true)

        // OemEtherLynxc (0x10C)
        XCTAssertEqual(OEMCode.etherLynxc, 0x10C)
        XCTAssertEqual(OEMCode.etherLynxc.description, "OemEtherLynxc")
        XCTAssertEqual(OEMCode.etherLynxc.mnemonic, "OemEtherLynxc")
        XCTAssertEqual(OEMCode.etherLynxc.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynxc.product, "Ether-Lynx Exp c")
        XCTAssertEqual(OEMCode.etherLynxc.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynxc.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynxc.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynxc.isRDMSupported, true)

        // OemEtherLynxd (0x10D)
        XCTAssertEqual(OEMCode.etherLynxd, 0x10D)
        XCTAssertEqual(OEMCode.etherLynxd.description, "OemEtherLynxd")
        XCTAssertEqual(OEMCode.etherLynxd.mnemonic, "OemEtherLynxd")
        XCTAssertEqual(OEMCode.etherLynxd.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynxd.product, "Ether-Lynx Exp d")
        XCTAssertEqual(OEMCode.etherLynxd.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynxd.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynxd.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynxd.isRDMSupported, true)

        // OemEtherLynxe (0x10E)
        XCTAssertEqual(OEMCode.etherLynxe, 0x10E)
        XCTAssertEqual(OEMCode.etherLynxe.description, "OemEtherLynxe")
        XCTAssertEqual(OEMCode.etherLynxe.mnemonic, "OemEtherLynxe")
        XCTAssertEqual(OEMCode.etherLynxe.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynxe.product, "Ether-Lynx Exp e")
        XCTAssertEqual(OEMCode.etherLynxe.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynxe.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynxe.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynxe.isRDMSupported, true)

        // OemEtherLynxf (0x10F)
        XCTAssertEqual(OEMCode.etherLynxf, 0x10F)
        XCTAssertEqual(OEMCode.etherLynxf.description, "OemEtherLynxf")
        XCTAssertEqual(OEMCode.etherLynxf.mnemonic, "OemEtherLynxf")
        XCTAssertEqual(OEMCode.etherLynxf.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynxf.product, "Ether-Lynx Exp f")
        XCTAssertEqual(OEMCode.etherLynxf.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynxf.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynxf.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynxf.isRDMSupported, true)

        // OemEtherLynxII (0x2140)
        XCTAssertEqual(OEMCode.etherLynxII, 0x2140)
        XCTAssertEqual(OEMCode.etherLynxII.description, "OemEtherLynxII")
        XCTAssertEqual(OEMCode.etherLynxII.mnemonic, "OemEtherLynxII")
        XCTAssertEqual(OEMCode.etherLynxII.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.etherLynxII.product, "Ether-Lynx II")
        XCTAssertEqual(OEMCode.etherLynxII.dmxIn, 2)
        XCTAssertEqual(OEMCode.etherLynxII.dmxOut, 4)
        XCTAssertEqual(OEMCode.etherLynxII.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.etherLynxII.isRDMSupported, true)

        // OemEthLumiMon (0x323)
        XCTAssertEqual(OEMCode.ethLumiMon, 0x323)
        XCTAssertEqual(OEMCode.ethLumiMon.description, "OemEthLumiMon")
        XCTAssertEqual(OEMCode.ethLumiMon.mnemonic, "OemEthLumiMon")
        XCTAssertEqual(OEMCode.ethLumiMon.manufacturer, "Luminex LCE")
        XCTAssertEqual(OEMCode.ethLumiMon.product, "LumiNet Monitor")
        XCTAssertEqual(OEMCode.ethLumiMon.dmxIn, 0)
        XCTAssertEqual(OEMCode.ethLumiMon.dmxOut, 0)
        XCTAssertEqual(OEMCode.ethLumiMon.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ethLumiMon.isRDMSupported, true)

        // OemEurolumenS100a (0x2858)
        XCTAssertEqual(OEMCode.eurolumenS100a, 0x2858)
        XCTAssertEqual(OEMCode.eurolumenS100a.description, "OemEurolumenS100a")
        XCTAssertEqual(OEMCode.eurolumenS100a.mnemonic, "OemEurolumenS100a")
        XCTAssertEqual(OEMCode.eurolumenS100a.manufacturer, "Eurolumen(shanghai)Lighting Co.,LTD")
        XCTAssertEqual(OEMCode.eurolumenS100a.product, "s100")
        XCTAssertEqual(OEMCode.eurolumenS100a.dmxIn, 8)
        XCTAssertEqual(OEMCode.eurolumenS100a.dmxOut, 8)
        XCTAssertEqual(OEMCode.eurolumenS100a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.eurolumenS100a.isRDMSupported, true)

        // OemEuroNode8 (0xB20)
        XCTAssertEqual(OEMCode.euroNode8, 0xB20)
        XCTAssertEqual(OEMCode.euroNode8.description, "OemEuroNode8")
        XCTAssertEqual(OEMCode.euroNode8.mnemonic, "OemEuroNode8")
        XCTAssertEqual(OEMCode.euroNode8.manufacturer, "EUROLITE")
        XCTAssertEqual(OEMCode.euroNode8.product, "Node 8 Artnet/DMX")
        XCTAssertEqual(OEMCode.euroNode8.dmxIn, 0)
        XCTAssertEqual(OEMCode.euroNode8.dmxOut, 4)
        XCTAssertEqual(OEMCode.euroNode8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.euroNode8.isRDMSupported, false)

        // OemExalCo1 (0x13DF)
        XCTAssertEqual(OEMCode.exalCo1, 0x13DF)
        XCTAssertEqual(OEMCode.exalCo1.description, "OemExalCo1")
        XCTAssertEqual(OEMCode.exalCo1.mnemonic, "OemExalCo1")
        XCTAssertEqual(OEMCode.exalCo1.manufacturer, "Exalux")
        XCTAssertEqual(OEMCode.exalCo1.product, "Connect-One")
        XCTAssertEqual(OEMCode.exalCo1.dmxIn, 0)
        XCTAssertEqual(OEMCode.exalCo1.dmxOut, 1)
        XCTAssertEqual(OEMCode.exalCo1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.exalCo1.isRDMSupported, false)

        // OemExMachWinDyn1 (0x2832)
        XCTAssertEqual(OEMCode.exMachWinDyn1, 0x2832)
        XCTAssertEqual(OEMCode.exMachWinDyn1.description, "OemExMachWinDyn1")
        XCTAssertEqual(OEMCode.exMachWinDyn1.mnemonic, "OemExMachWinDyn1")
        XCTAssertEqual(OEMCode.exMachWinDyn1.manufacturer, "ExMachina")
        XCTAssertEqual(OEMCode.exMachWinDyn1.product, "Winch Dynamic")
        XCTAssertEqual(OEMCode.exMachWinDyn1.dmxIn, 1)
        XCTAssertEqual(OEMCode.exMachWinDyn1.dmxOut, 0)
        XCTAssertEqual(OEMCode.exMachWinDyn1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.exMachWinDyn1.isRDMSupported, true)

        // OemFineline1 (0x1171)
        XCTAssertEqual(OEMCode.fineline1, 0x1171)
        XCTAssertEqual(OEMCode.fineline1.description, "OemFineline1")
        XCTAssertEqual(OEMCode.fineline1.mnemonic, "OemFineline1")
        XCTAssertEqual(OEMCode.fineline1.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline1.product, "Fineline product 1")
        XCTAssertEqual(OEMCode.fineline1.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline1.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline1.isRDMSupported, false)

        // OemFineline10 (0x117A)
        XCTAssertEqual(OEMCode.fineline10, 0x117A)
        XCTAssertEqual(OEMCode.fineline10.description, "OemFineline10")
        XCTAssertEqual(OEMCode.fineline10.mnemonic, "OemFineline10")
        XCTAssertEqual(OEMCode.fineline10.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline10.product, "Fineline product 10")
        XCTAssertEqual(OEMCode.fineline10.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline10.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline10.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline10.isRDMSupported, false)

        // OemFineline11 (0x117B)
        XCTAssertEqual(OEMCode.fineline11, 0x117B)
        XCTAssertEqual(OEMCode.fineline11.description, "OemFineline11")
        XCTAssertEqual(OEMCode.fineline11.mnemonic, "OemFineline11")
        XCTAssertEqual(OEMCode.fineline11.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline11.product, "Fineline product 11")
        XCTAssertEqual(OEMCode.fineline11.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline11.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline11.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline11.isRDMSupported, false)

        // OemFineline12 (0x117C)
        XCTAssertEqual(OEMCode.fineline12, 0x117C)
        XCTAssertEqual(OEMCode.fineline12.description, "OemFineline12")
        XCTAssertEqual(OEMCode.fineline12.mnemonic, "OemFineline12")
        XCTAssertEqual(OEMCode.fineline12.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline12.product, "Fineline product 12")
        XCTAssertEqual(OEMCode.fineline12.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline12.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline12.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline12.isRDMSupported, false)

        // OemFineline13 (0x117D)
        XCTAssertEqual(OEMCode.fineline13, 0x117D)
        XCTAssertEqual(OEMCode.fineline13.description, "OemFineline13")
        XCTAssertEqual(OEMCode.fineline13.mnemonic, "OemFineline13")
        XCTAssertEqual(OEMCode.fineline13.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline13.product, "Fineline product 13")
        XCTAssertEqual(OEMCode.fineline13.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline13.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline13.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline13.isRDMSupported, false)

        // OemFineline14 (0x117E)
        XCTAssertEqual(OEMCode.fineline14, 0x117E)
        XCTAssertEqual(OEMCode.fineline14.description, "OemFineline14")
        XCTAssertEqual(OEMCode.fineline14.mnemonic, "OemFineline14")
        XCTAssertEqual(OEMCode.fineline14.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline14.product, "Fineline product 14")
        XCTAssertEqual(OEMCode.fineline14.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline14.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline14.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline14.isRDMSupported, false)

        // OemFineline15 (0x117F)
        XCTAssertEqual(OEMCode.fineline15, 0x117F)
        XCTAssertEqual(OEMCode.fineline15.description, "OemFineline15")
        XCTAssertEqual(OEMCode.fineline15.mnemonic, "OemFineline15")
        XCTAssertEqual(OEMCode.fineline15.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline15.product, "Fineline product 15")
        XCTAssertEqual(OEMCode.fineline15.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline15.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline15.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline15.isRDMSupported, false)

        // OemFineline2 (0x1172)
        XCTAssertEqual(OEMCode.fineline2, 0x1172)
        XCTAssertEqual(OEMCode.fineline2.description, "OemFineline2")
        XCTAssertEqual(OEMCode.fineline2.mnemonic, "OemFineline2")
        XCTAssertEqual(OEMCode.fineline2.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline2.product, "Fineline product 2")
        XCTAssertEqual(OEMCode.fineline2.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline2.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline2.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline2.isRDMSupported, false)

        // OemFineline3 (0x1173)
        XCTAssertEqual(OEMCode.fineline3, 0x1173)
        XCTAssertEqual(OEMCode.fineline3.description, "OemFineline3")
        XCTAssertEqual(OEMCode.fineline3.mnemonic, "OemFineline3")
        XCTAssertEqual(OEMCode.fineline3.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline3.product, "Fineline product 3")
        XCTAssertEqual(OEMCode.fineline3.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline3.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline3.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline3.isRDMSupported, false)

        // OemFineline4 (0x1174)
        XCTAssertEqual(OEMCode.fineline4, 0x1174)
        XCTAssertEqual(OEMCode.fineline4.description, "OemFineline4")
        XCTAssertEqual(OEMCode.fineline4.mnemonic, "OemFineline4")
        XCTAssertEqual(OEMCode.fineline4.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline4.product, "Fineline product 4")
        XCTAssertEqual(OEMCode.fineline4.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline4.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline4.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline4.isRDMSupported, false)

        // OemFineline5 (0x1175)
        XCTAssertEqual(OEMCode.fineline5, 0x1175)
        XCTAssertEqual(OEMCode.fineline5.description, "OemFineline5")
        XCTAssertEqual(OEMCode.fineline5.mnemonic, "OemFineline5")
        XCTAssertEqual(OEMCode.fineline5.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline5.product, "Fineline product 5")
        XCTAssertEqual(OEMCode.fineline5.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline5.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline5.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline5.isRDMSupported, false)

        // OemFineline6 (0x1176)
        XCTAssertEqual(OEMCode.fineline6, 0x1176)
        XCTAssertEqual(OEMCode.fineline6.description, "OemFineline6")
        XCTAssertEqual(OEMCode.fineline6.mnemonic, "OemFineline6")
        XCTAssertEqual(OEMCode.fineline6.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline6.product, "Fineline product 6")
        XCTAssertEqual(OEMCode.fineline6.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline6.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline6.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline6.isRDMSupported, false)

        // OemFineline7 (0x1177)
        XCTAssertEqual(OEMCode.fineline7, 0x1177)
        XCTAssertEqual(OEMCode.fineline7.description, "OemFineline7")
        XCTAssertEqual(OEMCode.fineline7.mnemonic, "OemFineline7")
        XCTAssertEqual(OEMCode.fineline7.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline7.product, "Fineline product 7")
        XCTAssertEqual(OEMCode.fineline7.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline7.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline7.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline7.isRDMSupported, false)

        // OemFineline8 (0x1178)
        XCTAssertEqual(OEMCode.fineline8, 0x1178)
        XCTAssertEqual(OEMCode.fineline8.description, "OemFineline8")
        XCTAssertEqual(OEMCode.fineline8.mnemonic, "OemFineline8")
        XCTAssertEqual(OEMCode.fineline8.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline8.product, "Fineline product 8")
        XCTAssertEqual(OEMCode.fineline8.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline8.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline8.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline8.isRDMSupported, false)

        // OemFineline9 (0x1179)
        XCTAssertEqual(OEMCode.fineline9, 0x1179)
        XCTAssertEqual(OEMCode.fineline9.description, "OemFineline9")
        XCTAssertEqual(OEMCode.fineline9.mnemonic, "OemFineline9")
        XCTAssertEqual(OEMCode.fineline9.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.fineline9.product, "Fineline product 9")
        XCTAssertEqual(OEMCode.fineline9.dmxIn, 0)
        XCTAssertEqual(OEMCode.fineline9.dmxOut, 0)
        XCTAssertEqual(OEMCode.fineline9.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fineline9.isRDMSupported, false)

        // OemFinelineStepper16 (0x1170)
        XCTAssertEqual(OEMCode.finelineStepper16, 0x1170)
        XCTAssertEqual(OEMCode.finelineStepper16.description, "OemFinelineStepper16")
        XCTAssertEqual(OEMCode.finelineStepper16.mnemonic, "OemFinelineStepper16")
        XCTAssertEqual(OEMCode.finelineStepper16.manufacturer, "Fineline Solutions Ltd")
        XCTAssertEqual(OEMCode.finelineStepper16.product, "16 Channel Stepper Controller")
        XCTAssertEqual(OEMCode.finelineStepper16.dmxIn, 0)
        XCTAssertEqual(OEMCode.finelineStepper16.dmxOut, 1)
        XCTAssertEqual(OEMCode.finelineStepper16.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.finelineStepper16.isRDMSupported, false)

        // OemFishNavAut (0x8D0)
        XCTAssertEqual(OEMCode.fishNavAut, 0x8D0)
        XCTAssertEqual(OEMCode.fishNavAut.description, "OemFishNavAut")
        XCTAssertEqual(OEMCode.fishNavAut.mnemonic, "OemFishNavAut")
        XCTAssertEqual(OEMCode.fishNavAut.manufacturer, "Fisher Technical Services Inc")
        XCTAssertEqual(OEMCode.fishNavAut.product, "Navigator Automation System")
        XCTAssertEqual(OEMCode.fishNavAut.dmxIn, 4)
        XCTAssertEqual(OEMCode.fishNavAut.dmxOut, 4)
        XCTAssertEqual(OEMCode.fishNavAut.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.fishNavAut.isRDMSupported, true)

        // OemFlexVisFlexNode1 (0xB70)
        XCTAssertEqual(OEMCode.flexVisFlexNode1, 0xB70)
        XCTAssertEqual(OEMCode.flexVisFlexNode1.description, "OemFlexVisFlexNode1")
        XCTAssertEqual(OEMCode.flexVisFlexNode1.mnemonic, "OemFlexVisFlexNode1")
        XCTAssertEqual(OEMCode.flexVisFlexNode1.manufacturer, "Flexvisual")
        XCTAssertEqual(OEMCode.flexVisFlexNode1.product, "FlexNode")
        XCTAssertEqual(OEMCode.flexVisFlexNode1.dmxIn, 4)
        XCTAssertEqual(OEMCode.flexVisFlexNode1.dmxOut, 0)
        XCTAssertEqual(OEMCode.flexVisFlexNode1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.flexVisFlexNode1.isRDMSupported, false)

        // OemFres123Tr (0x970)
        XCTAssertEqual(OEMCode.fres123Tr, 0x970)
        XCTAssertEqual(OEMCode.fres123Tr.description, "OemFres123Tr")
        XCTAssertEqual(OEMCode.fres123Tr.mnemonic, "OemFres123Tr")
        XCTAssertEqual(OEMCode.fres123Tr.manufacturer, "Fresnel / Strong")
        XCTAssertEqual(OEMCode.fres123Tr.product, "Power 12-3 TR-Net")
        XCTAssertEqual(OEMCode.fres123Tr.dmxIn, 0)
        XCTAssertEqual(OEMCode.fres123Tr.dmxOut, 0)
        XCTAssertEqual(OEMCode.fres123Tr.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fres123Tr.isRDMSupported, false)

        // OemFresEdmx1 (0x972)
        XCTAssertEqual(OEMCode.fresEdmx1, 0x972)
        XCTAssertEqual(OEMCode.fresEdmx1.description, "OemFresEdmx1")
        XCTAssertEqual(OEMCode.fresEdmx1.mnemonic, "OemFresEdmx1")
        XCTAssertEqual(OEMCode.fresEdmx1.manufacturer, "Fresnel S.A. / Strong")
        XCTAssertEqual(OEMCode.fresEdmx1.product, "Ethernet-DMX")
        XCTAssertEqual(OEMCode.fresEdmx1.dmxIn, 1)
        XCTAssertEqual(OEMCode.fresEdmx1.dmxOut, 2)
        XCTAssertEqual(OEMCode.fresEdmx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.fresEdmx1.isRDMSupported, false)

        // OemFresNoc1 (0x971)
        XCTAssertEqual(OEMCode.fresNoc1, 0x971)
        XCTAssertEqual(OEMCode.fresNoc1.description, "OemFresNoc1")
        XCTAssertEqual(OEMCode.fresNoc1.mnemonic, "OemFresNoc1")
        XCTAssertEqual(OEMCode.fresNoc1.manufacturer, "Fresnel S.A. / Strong")
        XCTAssertEqual(OEMCode.fresNoc1.product, "Nocturne Stage Control")
        XCTAssertEqual(OEMCode.fresNoc1.dmxIn, 0)
        XCTAssertEqual(OEMCode.fresNoc1.dmxOut, 0)
        XCTAssertEqual(OEMCode.fresNoc1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.fresNoc1.isRDMSupported, false)

        // OemFutDesTrio (0x860)
        XCTAssertEqual(OEMCode.futDesTrio, 0x860)
        XCTAssertEqual(OEMCode.futDesTrio.description, "OemFutDesTrio")
        XCTAssertEqual(OEMCode.futDesTrio.mnemonic, "OemFutDesTrio")
        XCTAssertEqual(OEMCode.futDesTrio.manufacturer, "Future Design ApS")
        XCTAssertEqual(OEMCode.futDesTrio.product, "FD ART-NET-Trio")
        XCTAssertEqual(OEMCode.futDesTrio.dmxIn, 1)
        XCTAssertEqual(OEMCode.futDesTrio.dmxOut, 2)
        XCTAssertEqual(OEMCode.futDesTrio.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.futDesTrio.isRDMSupported, true)

        // OemGdDownLink (0x50)
        XCTAssertEqual(OEMCode.gdDownLink, 0x50)
        XCTAssertEqual(OEMCode.gdDownLink.description, "OemGdDownLink")
        XCTAssertEqual(OEMCode.gdDownLink.mnemonic, "OemGdDownLink")
        XCTAssertEqual(OEMCode.gdDownLink.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.gdDownLink.product, "GDC DL")
        XCTAssertEqual(OEMCode.gdDownLink.dmxIn, 0)
        XCTAssertEqual(OEMCode.gdDownLink.dmxOut, 2)
        XCTAssertEqual(OEMCode.gdDownLink.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.gdDownLink.isRDMSupported, false)

        // OemGdDownLynx2 (0x250)
        XCTAssertEqual(OEMCode.gdDownLynx2, 0x250)
        XCTAssertEqual(OEMCode.gdDownLynx2.description, "OemGdDownLynx2")
        XCTAssertEqual(OEMCode.gdDownLynx2.mnemonic, "OemGdDownLynx2")
        XCTAssertEqual(OEMCode.gdDownLynx2.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.gdDownLynx2.product, "GDC Dlynx 2")
        XCTAssertEqual(OEMCode.gdDownLynx2.dmxIn, 0)
        XCTAssertEqual(OEMCode.gdDownLynx2.dmxOut, 2)
        XCTAssertEqual(OEMCode.gdDownLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.gdDownLynx2.isRDMSupported, true)

        // OemGdUpLink (0x51)
        XCTAssertEqual(OEMCode.gdUpLink, 0x51)
        XCTAssertEqual(OEMCode.gdUpLink.description, "OemGdUpLink")
        XCTAssertEqual(OEMCode.gdUpLink.mnemonic, "OemGdUpLink")
        XCTAssertEqual(OEMCode.gdUpLink.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.gdUpLink.product, "GDC UL")
        XCTAssertEqual(OEMCode.gdUpLink.dmxIn, 2)
        XCTAssertEqual(OEMCode.gdUpLink.dmxOut, 0)
        XCTAssertEqual(OEMCode.gdUpLink.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.gdUpLink.isRDMSupported, false)

        // OemGdUpLynx2 (0x251)
        XCTAssertEqual(OEMCode.gdUpLynx2, 0x251)
        XCTAssertEqual(OEMCode.gdUpLynx2.description, "OemGdUpLynx2")
        XCTAssertEqual(OEMCode.gdUpLynx2.mnemonic, "OemGdUpLynx2")
        XCTAssertEqual(OEMCode.gdUpLynx2.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.gdUpLynx2.product, "GDC Ulynx 2")
        XCTAssertEqual(OEMCode.gdUpLynx2.dmxIn, 2)
        XCTAssertEqual(OEMCode.gdUpLynx2.dmxOut, 0)
        XCTAssertEqual(OEMCode.gdUpLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.gdUpLynx2.isRDMSupported, false)

        // OemGearSLc1 (0x2801)
        XCTAssertEqual(OEMCode.gearSLc1, 0x2801)
        XCTAssertEqual(OEMCode.gearSLc1.description, "OemGearSLc1")
        XCTAssertEqual(OEMCode.gearSLc1.mnemonic, "OemGearSLc1")
        XCTAssertEqual(OEMCode.gearSLc1.manufacturer, "Gearbox Solutions")
        XCTAssertEqual(OEMCode.gearSLc1.product, "LC1")
        XCTAssertEqual(OEMCode.gearSLc1.dmxIn, 0)
        XCTAssertEqual(OEMCode.gearSLc1.dmxOut, 0)
        XCTAssertEqual(OEMCode.gearSLc1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.gearSLc1.isRDMSupported, false)

        // OemGlobal (0xFFFF)
        XCTAssertEqual(OEMCode.global, 0xFFFF)
        XCTAssertEqual(OEMCode.global.description, "OemGlobal")
        XCTAssertEqual(OEMCode.global.mnemonic, "OemGlobal")
        XCTAssertEqual(OEMCode.global.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.global.product, "OemGlobal")
        XCTAssertEqual(OEMCode.global.dmxIn, 0)
        XCTAssertEqual(OEMCode.global.dmxOut, 0)
        XCTAssertEqual(OEMCode.global.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.global.isRDMSupported, false)

        // OemGlowMoGhostTx (0xFB0)
        XCTAssertEqual(OEMCode.glowMoGhostTx, 0xFB0)
        XCTAssertEqual(OEMCode.glowMoGhostTx.description, "OemGlowMoGhostTx")
        XCTAssertEqual(OEMCode.glowMoGhostTx.mnemonic, "OemGlowMoGhostTx")
        XCTAssertEqual(OEMCode.glowMoGhostTx.manufacturer, "Glow Motion Technologies LLC")
        XCTAssertEqual(OEMCode.glowMoGhostTx.product, "Ghostband Transmitter")
        XCTAssertEqual(OEMCode.glowMoGhostTx.dmxIn, 1)
        XCTAssertEqual(OEMCode.glowMoGhostTx.dmxOut, 0)
        XCTAssertEqual(OEMCode.glowMoGhostTx.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.glowMoGhostTx.isRDMSupported, false)

        // OemGlpGt1 (0x13C5)
        XCTAssertEqual(OEMCode.glpGt1, 0x13C5)
        XCTAssertEqual(OEMCode.glpGt1.description, "OemGlpGt1")
        XCTAssertEqual(OEMCode.glpGt1.mnemonic, "OemGlpGt1")
        XCTAssertEqual(OEMCode.glpGt1.manufacturer, "GLP German Light Products GmbH")
        XCTAssertEqual(OEMCode.glpGt1.product, "GT-1")
        XCTAssertEqual(OEMCode.glpGt1.dmxIn, 1)
        XCTAssertEqual(OEMCode.glpGt1.dmxOut, 0)
        XCTAssertEqual(OEMCode.glpGt1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.glpGt1.isRDMSupported, true)

        // OemGlpImpressionS3501 (0x28D0)
        XCTAssertEqual(OEMCode.glpImpressionS3501, 0x28D0)
        XCTAssertEqual(OEMCode.glpImpressionS3501.description, "OemGlpImpressionS3501")
        XCTAssertEqual(OEMCode.glpImpressionS3501.mnemonic, "OemGlpImpressionS3501")
        XCTAssertEqual(OEMCode.glpImpressionS3501.manufacturer, "GLP German Light Products GmbH")
        XCTAssertEqual(OEMCode.glpImpressionS3501.product, "Impression S350")
        XCTAssertEqual(OEMCode.glpImpressionS3501.dmxIn, 1)
        XCTAssertEqual(OEMCode.glpImpressionS3501.dmxOut, 1)
        XCTAssertEqual(OEMCode.glpImpressionS3501.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.glpImpressionS3501.isRDMSupported, true)

        // OemGlpImpSpot1 (0xC00)
        XCTAssertEqual(OEMCode.glpImpSpot1, 0xC00)
        XCTAssertEqual(OEMCode.glpImpSpot1.description, "OemGlpImpSpot1")
        XCTAssertEqual(OEMCode.glpImpSpot1.mnemonic, "OemGlpImpSpot1")
        XCTAssertEqual(OEMCode.glpImpSpot1.manufacturer, "GLP German Light Products GmbH")
        XCTAssertEqual(OEMCode.glpImpSpot1.product, "Impression Spot.one")
        XCTAssertEqual(OEMCode.glpImpSpot1.dmxIn, 1)
        XCTAssertEqual(OEMCode.glpImpSpot1.dmxOut, 1)
        XCTAssertEqual(OEMCode.glpImpSpot1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.glpImpSpot1.isRDMSupported, false)

        // OemGlpImpWash1 (0xC01)
        XCTAssertEqual(OEMCode.glpImpWash1, 0xC01)
        XCTAssertEqual(OEMCode.glpImpWash1.description, "OemGlpImpWash1")
        XCTAssertEqual(OEMCode.glpImpWash1.mnemonic, "OemGlpImpWash1")
        XCTAssertEqual(OEMCode.glpImpWash1.manufacturer, "GLP German Light Products GmbH")
        XCTAssertEqual(OEMCode.glpImpWash1.product, "Impression Wash.one")
        XCTAssertEqual(OEMCode.glpImpWash1.dmxIn, 1)
        XCTAssertEqual(OEMCode.glpImpWash1.dmxOut, 1)
        XCTAssertEqual(OEMCode.glpImpWash1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.glpImpWash1.isRDMSupported, false)

        // OemGlpIon1 (0x4C1)
        XCTAssertEqual(OEMCode.glpIon1, 0x4C1)
        XCTAssertEqual(OEMCode.glpIon1.description, "OemGlpIon1")
        XCTAssertEqual(OEMCode.glpIon1.mnemonic, "OemGlpIon1")
        XCTAssertEqual(OEMCode.glpIon1.manufacturer, "GLP")
        XCTAssertEqual(OEMCode.glpIon1.product, "Ion.control.pc")
        XCTAssertEqual(OEMCode.glpIon1.dmxIn, 0)
        XCTAssertEqual(OEMCode.glpIon1.dmxOut, 1)
        XCTAssertEqual(OEMCode.glpIon1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.glpIon1.isRDMSupported, false)

        // OemGodAL5001 (0xA60)
        XCTAssertEqual(OEMCode.godAL5001, 0xA60)
        XCTAssertEqual(OEMCode.godAL5001.description, "OemGodAL5001")
        XCTAssertEqual(OEMCode.godAL5001.mnemonic, "OemGodAL5001")
        XCTAssertEqual(OEMCode.godAL5001.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godAL5001.product, "OemGodAL5001")
        XCTAssertEqual(OEMCode.godAL5001.dmxIn, 0)
        XCTAssertEqual(OEMCode.godAL5001.dmxOut, 2)
        XCTAssertEqual(OEMCode.godAL5001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godAL5001.isRDMSupported, true)

        // OemGodAL5002 (0xA65)
        XCTAssertEqual(OEMCode.godAL5002, 0xA65)
        XCTAssertEqual(OEMCode.godAL5002.description, "OemGodAL5002")
        XCTAssertEqual(OEMCode.godAL5002.mnemonic, "OemGodAL5002")
        XCTAssertEqual(OEMCode.godAL5002.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godAL5002.product, "OemGodAL5002")
        XCTAssertEqual(OEMCode.godAL5002.dmxIn, 0)
        XCTAssertEqual(OEMCode.godAL5002.dmxOut, 2)
        XCTAssertEqual(OEMCode.godAL5002.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godAL5002.isRDMSupported, true)

        // OemGodArtBoot (0xA6B)
        XCTAssertEqual(OEMCode.godArtBoot, 0xA6B)
        XCTAssertEqual(OEMCode.godArtBoot.description, "OemGodArtBoot")
        XCTAssertEqual(OEMCode.godArtBoot.mnemonic, "OemGodArtBoot")
        XCTAssertEqual(OEMCode.godArtBoot.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godArtBoot.product, "OemGodArtBoot")
        XCTAssertEqual(OEMCode.godArtBoot.dmxIn, 0)
        XCTAssertEqual(OEMCode.godArtBoot.dmxOut, 0)
        XCTAssertEqual(OEMCode.godArtBoot.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godArtBoot.isRDMSupported, true)

        // OemGodArtLynxIp (0xA6D)
        XCTAssertEqual(OEMCode.godArtLynxIp, 0xA6D)
        XCTAssertEqual(OEMCode.godArtLynxIp.description, "OemGodArtLynxIp")
        XCTAssertEqual(OEMCode.godArtLynxIp.mnemonic, "OemGodArtLynxIp")
        XCTAssertEqual(OEMCode.godArtLynxIp.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godArtLynxIp.product, "OemGodArtLynxIp")
        XCTAssertEqual(OEMCode.godArtLynxIp.dmxIn, 2)
        XCTAssertEqual(OEMCode.godArtLynxIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.godArtLynxIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godArtLynxIp.isRDMSupported, false)

        // OemGodArtLynxOp (0xA6C)
        XCTAssertEqual(OEMCode.godArtLynxOp, 0xA6C)
        XCTAssertEqual(OEMCode.godArtLynxOp.description, "OemGodArtLynxOp")
        XCTAssertEqual(OEMCode.godArtLynxOp.mnemonic, "OemGodArtLynxOp")
        XCTAssertEqual(OEMCode.godArtLynxOp.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godArtLynxOp.product, "OemGodArtLynxOp")
        XCTAssertEqual(OEMCode.godArtLynxOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.godArtLynxOp.dmxOut, 2)
        XCTAssertEqual(OEMCode.godArtLynxOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godArtLynxOp.isRDMSupported, true)

        // OemGodCataLynxNt (0xA67)
        XCTAssertEqual(OEMCode.godCataLynxNt, 0xA67)
        XCTAssertEqual(OEMCode.godCataLynxNt.description, "OemGodCataLynxNt")
        XCTAssertEqual(OEMCode.godCataLynxNt.mnemonic, "OemGodCataLynxNt")
        XCTAssertEqual(OEMCode.godCataLynxNt.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godCataLynxNt.product, "OemGodCataLynxNt")
        XCTAssertEqual(OEMCode.godCataLynxNt.dmxIn, 0)
        XCTAssertEqual(OEMCode.godCataLynxNt.dmxOut, 4)
        XCTAssertEqual(OEMCode.godCataLynxNt.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godCataLynxNt.isRDMSupported, true)

        // OemGodDataLynxIp (0xA66)
        XCTAssertEqual(OEMCode.godDataLynxIp, 0xA66)
        XCTAssertEqual(OEMCode.godDataLynxIp.description, "OemGodDataLynxIp")
        XCTAssertEqual(OEMCode.godDataLynxIp.mnemonic, "OemGodDataLynxIp")
        XCTAssertEqual(OEMCode.godDataLynxIp.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godDataLynxIp.product, "OemGodDataLynxIp")
        XCTAssertEqual(OEMCode.godDataLynxIp.dmxIn, 4)
        XCTAssertEqual(OEMCode.godDataLynxIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.godDataLynxIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godDataLynxIp.isRDMSupported, false)

        // OemGodDataLynxOp (0xA61)
        XCTAssertEqual(OEMCode.godDataLynxOp, 0xA61)
        XCTAssertEqual(OEMCode.godDataLynxOp.description, "OemGodDataLynxOp")
        XCTAssertEqual(OEMCode.godDataLynxOp.mnemonic, "OemGodDataLynxOp")
        XCTAssertEqual(OEMCode.godDataLynxOp.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godDataLynxOp.product, "OemGodDataLynxOp")
        XCTAssertEqual(OEMCode.godDataLynxOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.godDataLynxOp.dmxOut, 4)
        XCTAssertEqual(OEMCode.godDataLynxOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godDataLynxOp.isRDMSupported, true)

        // OemGodDownLynx4 (0xA63)
        XCTAssertEqual(OEMCode.godDownLynx4, 0xA63)
        XCTAssertEqual(OEMCode.godDownLynx4.description, "OemGodDownLynx4")
        XCTAssertEqual(OEMCode.godDownLynx4.mnemonic, "OemGodDownLynx4")
        XCTAssertEqual(OEMCode.godDownLynx4.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godDownLynx4.product, "OemGodDownLynx4")
        XCTAssertEqual(OEMCode.godDownLynx4.dmxIn, 0)
        XCTAssertEqual(OEMCode.godDownLynx4.dmxOut, 2)
        XCTAssertEqual(OEMCode.godDownLynx4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godDownLynx4.isRDMSupported, true)

        // OemGodEtherLynxII (0xA6E)
        XCTAssertEqual(OEMCode.godEtherLynxII, 0xA6E)
        XCTAssertEqual(OEMCode.godEtherLynxII.description, "OemGodEtherLynxII")
        XCTAssertEqual(OEMCode.godEtherLynxII.mnemonic, "OemGodEtherLynxII")
        XCTAssertEqual(OEMCode.godEtherLynxII.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godEtherLynxII.product, "OemGodEtherLynxII")
        XCTAssertEqual(OEMCode.godEtherLynxII.dmxIn, 2)
        XCTAssertEqual(OEMCode.godEtherLynxII.dmxOut, 4)
        XCTAssertEqual(OEMCode.godEtherLynxII.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godEtherLynxII.isRDMSupported, true)

        // OemGodNetLynxIp4 (0xA6A)
        XCTAssertEqual(OEMCode.godNetLynxIp4, 0xA6A)
        XCTAssertEqual(OEMCode.godNetLynxIp4.description, "OemGodNetLynxIp4")
        XCTAssertEqual(OEMCode.godNetLynxIp4.mnemonic, "OemGodNetLynxIp4")
        XCTAssertEqual(OEMCode.godNetLynxIp4.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godNetLynxIp4.product, "OemGodNetLynxIp4")
        XCTAssertEqual(OEMCode.godNetLynxIp4.dmxIn, 2)
        XCTAssertEqual(OEMCode.godNetLynxIp4.dmxOut, 0)
        XCTAssertEqual(OEMCode.godNetLynxIp4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godNetLynxIp4.isRDMSupported, false)

        // OemGodNetLynxOp4 (0xA64)
        XCTAssertEqual(OEMCode.godNetLynxOp4, 0xA64)
        XCTAssertEqual(OEMCode.godNetLynxOp4.description, "OemGodNetLynxOp4")
        XCTAssertEqual(OEMCode.godNetLynxOp4.mnemonic, "OemGodNetLynxOp4")
        XCTAssertEqual(OEMCode.godNetLynxOp4.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godNetLynxOp4.product, "OemGodNetLynxOp4")
        XCTAssertEqual(OEMCode.godNetLynxOp4.dmxIn, 0)
        XCTAssertEqual(OEMCode.godNetLynxOp4.dmxOut, 2)
        XCTAssertEqual(OEMCode.godNetLynxOp4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godNetLynxOp4.isRDMSupported, true)

        // OemGodRailLynxIp (0xA68)
        XCTAssertEqual(OEMCode.godRailLynxIp, 0xA68)
        XCTAssertEqual(OEMCode.godRailLynxIp.description, "OemGodRailLynxIp")
        XCTAssertEqual(OEMCode.godRailLynxIp.mnemonic, "OemGodRailLynxIp")
        XCTAssertEqual(OEMCode.godRailLynxIp.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godRailLynxIp.product, "OemGodRailLynxIp")
        XCTAssertEqual(OEMCode.godRailLynxIp.dmxIn, 2)
        XCTAssertEqual(OEMCode.godRailLynxIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.godRailLynxIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godRailLynxIp.isRDMSupported, false)

        // OemGodRailLynxOp (0xA62)
        XCTAssertEqual(OEMCode.godRailLynxOp, 0xA62)
        XCTAssertEqual(OEMCode.godRailLynxOp.description, "OemGodRailLynxOp")
        XCTAssertEqual(OEMCode.godRailLynxOp.mnemonic, "OemGodRailLynxOp")
        XCTAssertEqual(OEMCode.godRailLynxOp.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godRailLynxOp.product, "OemGodRailLynxOp")
        XCTAssertEqual(OEMCode.godRailLynxOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.godRailLynxOp.dmxOut, 2)
        XCTAssertEqual(OEMCode.godRailLynxOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godRailLynxOp.isRDMSupported, true)

        // OemGodUpLynx4 (0xA69)
        XCTAssertEqual(OEMCode.godUpLynx4, 0xA69)
        XCTAssertEqual(OEMCode.godUpLynx4.description, "OemGodUpLynx4")
        XCTAssertEqual(OEMCode.godUpLynx4.mnemonic, "OemGodUpLynx4")
        XCTAssertEqual(OEMCode.godUpLynx4.manufacturer, "Goddard Design Company")
        XCTAssertEqual(OEMCode.godUpLynx4.product, "OemGodUpLynx4")
        XCTAssertEqual(OEMCode.godUpLynx4.dmxIn, 2)
        XCTAssertEqual(OEMCode.godUpLynx4.dmxOut, 0)
        XCTAssertEqual(OEMCode.godUpLynx4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.godUpLynx4.isRDMSupported, false)

        // OemGold2 (0x302)
        XCTAssertEqual(OEMCode.gold2, 0x302)
        XCTAssertEqual(OEMCode.gold2.description, "OemGold2")
        XCTAssertEqual(OEMCode.gold2.mnemonic, "OemGold2")
        XCTAssertEqual(OEMCode.gold2.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.gold2.product, "OemGold2")
        XCTAssertEqual(OEMCode.gold2.dmxIn, 0)
        XCTAssertEqual(OEMCode.gold2.dmxOut, 0)
        XCTAssertEqual(OEMCode.gold2.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.gold2.isRDMSupported, false)

        // OemGold3 (0x303)
        XCTAssertEqual(OEMCode.gold3, 0x303)
        XCTAssertEqual(OEMCode.gold3.description, "OemGold3")
        XCTAssertEqual(OEMCode.gold3.mnemonic, "OemGold3")
        XCTAssertEqual(OEMCode.gold3.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.gold3.product, "OemGold3")
        XCTAssertEqual(OEMCode.gold3.dmxIn, 0)
        XCTAssertEqual(OEMCode.gold3.dmxOut, 0)
        XCTAssertEqual(OEMCode.gold3.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.gold3.isRDMSupported, false)

        // OemGold6 (0x306)
        XCTAssertEqual(OEMCode.gold6, 0x306)
        XCTAssertEqual(OEMCode.gold6.description, "OemGold6")
        XCTAssertEqual(OEMCode.gold6.mnemonic, "OemGold6")
        XCTAssertEqual(OEMCode.gold6.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.gold6.product, "OemGold6")
        XCTAssertEqual(OEMCode.gold6.dmxIn, 0)
        XCTAssertEqual(OEMCode.gold6.dmxOut, 0)
        XCTAssertEqual(OEMCode.gold6.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.gold6.isRDMSupported, false)

        // OemGold7 (0x307)
        XCTAssertEqual(OEMCode.gold7, 0x307)
        XCTAssertEqual(OEMCode.gold7.description, "OemGold7")
        XCTAssertEqual(OEMCode.gold7.mnemonic, "OemGold7")
        XCTAssertEqual(OEMCode.gold7.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.gold7.product, "OemGold7")
        XCTAssertEqual(OEMCode.gold7.dmxIn, 0)
        XCTAssertEqual(OEMCode.gold7.dmxOut, 0)
        XCTAssertEqual(OEMCode.gold7.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.gold7.isRDMSupported, false)

        // OemGold9 (0x309)
        XCTAssertEqual(OEMCode.gold9, 0x309)
        XCTAssertEqual(OEMCode.gold9.description, "OemGold9")
        XCTAssertEqual(OEMCode.gold9.mnemonic, "OemGold9")
        XCTAssertEqual(OEMCode.gold9.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.gold9.product, "OemGold9")
        XCTAssertEqual(OEMCode.gold9.dmxIn, 0)
        XCTAssertEqual(OEMCode.gold9.dmxOut, 0)
        XCTAssertEqual(OEMCode.gold9.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.gold9.isRDMSupported, false)

        // OemGolda (0x30A)
        XCTAssertEqual(OEMCode.golda, 0x30A)
        XCTAssertEqual(OEMCode.golda.description, "OemGolda")
        XCTAssertEqual(OEMCode.golda.mnemonic, "OemGolda")
        XCTAssertEqual(OEMCode.golda.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.golda.product, "OemGolda")
        XCTAssertEqual(OEMCode.golda.dmxIn, 0)
        XCTAssertEqual(OEMCode.golda.dmxOut, 0)
        XCTAssertEqual(OEMCode.golda.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.golda.isRDMSupported, false)

        // OemGoldb (0x30B)
        XCTAssertEqual(OEMCode.goldb, 0x30B)
        XCTAssertEqual(OEMCode.goldb.description, "OemGoldb")
        XCTAssertEqual(OEMCode.goldb.mnemonic, "OemGoldb")
        XCTAssertEqual(OEMCode.goldb.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.goldb.product, "OemGoldb")
        XCTAssertEqual(OEMCode.goldb.dmxIn, 0)
        XCTAssertEqual(OEMCode.goldb.dmxOut, 0)
        XCTAssertEqual(OEMCode.goldb.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.goldb.isRDMSupported, false)

        // OemGoldc (0x30C)
        XCTAssertEqual(OEMCode.goldc, 0x30C)
        XCTAssertEqual(OEMCode.goldc.description, "OemGoldc")
        XCTAssertEqual(OEMCode.goldc.mnemonic, "OemGoldc")
        XCTAssertEqual(OEMCode.goldc.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.goldc.product, "OemGoldc")
        XCTAssertEqual(OEMCode.goldc.dmxIn, 0)
        XCTAssertEqual(OEMCode.goldc.dmxOut, 0)
        XCTAssertEqual(OEMCode.goldc.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.goldc.isRDMSupported, false)

        // OemGoldd (0x30D)
        XCTAssertEqual(OEMCode.goldd, 0x30D)
        XCTAssertEqual(OEMCode.goldd.description, "OemGoldd")
        XCTAssertEqual(OEMCode.goldd.mnemonic, "OemGoldd")
        XCTAssertEqual(OEMCode.goldd.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.goldd.product, "OemGoldd")
        XCTAssertEqual(OEMCode.goldd.dmxIn, 0)
        XCTAssertEqual(OEMCode.goldd.dmxOut, 0)
        XCTAssertEqual(OEMCode.goldd.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.goldd.isRDMSupported, false)

        // OemGolde (0x30E)
        XCTAssertEqual(OEMCode.golde, 0x30E)
        XCTAssertEqual(OEMCode.golde.description, "OemGolde")
        XCTAssertEqual(OEMCode.golde.mnemonic, "OemGolde")
        XCTAssertEqual(OEMCode.golde.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.golde.product, "OemGolde")
        XCTAssertEqual(OEMCode.golde.dmxIn, 0)
        XCTAssertEqual(OEMCode.golde.dmxOut, 0)
        XCTAssertEqual(OEMCode.golde.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.golde.isRDMSupported, false)

        // OemGoldf (0x30F)
        XCTAssertEqual(OEMCode.goldf, 0x30F)
        XCTAssertEqual(OEMCode.goldf.description, "OemGoldf")
        XCTAssertEqual(OEMCode.goldf.mnemonic, "OemGoldf")
        XCTAssertEqual(OEMCode.goldf.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.goldf.product, "OemGoldf")
        XCTAssertEqual(OEMCode.goldf.dmxIn, 0)
        XCTAssertEqual(OEMCode.goldf.dmxOut, 0)
        XCTAssertEqual(OEMCode.goldf.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.goldf.isRDMSupported, false)

        // OemGoldGT96 (0x304)
        XCTAssertEqual(OEMCode.goldGT96, 0x304)
        XCTAssertEqual(OEMCode.goldGT96.description, "OemGoldGT96")
        XCTAssertEqual(OEMCode.goldGT96.mnemonic, "OemGoldGT96")
        XCTAssertEqual(OEMCode.goldGT96.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.goldGT96.product, "GT-96")
        XCTAssertEqual(OEMCode.goldGT96.dmxIn, 0)
        XCTAssertEqual(OEMCode.goldGT96.dmxOut, 1)
        XCTAssertEqual(OEMCode.goldGT96.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.goldGT96.isRDMSupported, false)

        // OemGoldIII (0x305)
        XCTAssertEqual(OEMCode.goldIII, 0x305)
        XCTAssertEqual(OEMCode.goldIII.description, "OemGoldIII")
        XCTAssertEqual(OEMCode.goldIII.mnemonic, "OemGoldIII")
        XCTAssertEqual(OEMCode.goldIII.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.goldIII.product, "Goldstage III Light Console")
        XCTAssertEqual(OEMCode.goldIII.dmxIn, 0)
        XCTAssertEqual(OEMCode.goldIII.dmxOut, 1)
        XCTAssertEqual(OEMCode.goldIII.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.goldIII.isRDMSupported, false)

        // OemGoldIp (0x301)
        XCTAssertEqual(OEMCode.goldIp, 0x301)
        XCTAssertEqual(OEMCode.goldIp.description, "OemGoldIp")
        XCTAssertEqual(OEMCode.goldIp.mnemonic, "OemGoldIp")
        XCTAssertEqual(OEMCode.goldIp.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.goldIp.product, "DMX-net-I")
        XCTAssertEqual(OEMCode.goldIp.dmxIn, 2)
        XCTAssertEqual(OEMCode.goldIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.goldIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.goldIp.isRDMSupported, false)

        // OemGoldKTG5S (0x308)
        XCTAssertEqual(OEMCode.goldKTG5S, 0x308)
        XCTAssertEqual(OEMCode.goldKTG5S.description, "OemGoldKTG5S")
        XCTAssertEqual(OEMCode.goldKTG5S.mnemonic, "OemGoldKTG5S")
        XCTAssertEqual(OEMCode.goldKTG5S.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.goldKTG5S.product, "KTG-55 Dimmer")
        XCTAssertEqual(OEMCode.goldKTG5S.dmxIn, 2)
        XCTAssertEqual(OEMCode.goldKTG5S.dmxOut, 0)
        XCTAssertEqual(OEMCode.goldKTG5S.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.goldKTG5S.isRDMSupported, false)

        // OemGoldOp (0x300)
        XCTAssertEqual(OEMCode.goldOp, 0x300)
        XCTAssertEqual(OEMCode.goldOp.description, "OemGoldOp")
        XCTAssertEqual(OEMCode.goldOp.mnemonic, "OemGoldOp")
        XCTAssertEqual(OEMCode.goldOp.manufacturer, "Gold Stage")
        XCTAssertEqual(OEMCode.goldOp.product, "DMX-net-O")
        XCTAssertEqual(OEMCode.goldOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.goldOp.dmxOut, 2)
        XCTAssertEqual(OEMCode.goldOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.goldOp.isRDMSupported, false)

        // OemGpLIGEOGateway1 (0x2882)
        XCTAssertEqual(OEMCode.gpLIGEOGateway1, 0x2882)
        XCTAssertEqual(OEMCode.gpLIGEOGateway1.description, "OemGpLIGEOGateway1")
        XCTAssertEqual(OEMCode.gpLIGEOGateway1.mnemonic, "OemGpLIGEOGateway1")
        XCTAssertEqual(OEMCode.gpLIGEOGateway1.manufacturer, "GIP Innovation Tools")
        XCTAssertEqual(OEMCode.gpLIGEOGateway1.product, "LIGEO Gateway")
        XCTAssertEqual(OEMCode.gpLIGEOGateway1.dmxIn, 1)
        XCTAssertEqual(OEMCode.gpLIGEOGateway1.dmxOut, 1)
        XCTAssertEqual(OEMCode.gpLIGEOGateway1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.gpLIGEOGateway1.isRDMSupported, false)

        // OemGuangHongQ5t (0x1240)
        XCTAssertEqual(OEMCode.guangHongQ5t, 0x1240)
        XCTAssertEqual(OEMCode.guangHongQ5t.description, "OemGuangHongQ5t")
        XCTAssertEqual(OEMCode.guangHongQ5t.mnemonic, "OemGuangHongQ5t")
        XCTAssertEqual(OEMCode.guangHongQ5t.manufacturer, "Guangzhou Hongcai Stage Equipment co")
        XCTAssertEqual(OEMCode.guangHongQ5t.product, "Q-5 Turbo")
        XCTAssertEqual(OEMCode.guangHongQ5t.dmxIn, 1)
        XCTAssertEqual(OEMCode.guangHongQ5t.dmxOut, 0)
        XCTAssertEqual(OEMCode.guangHongQ5t.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.guangHongQ5t.isRDMSupported, true)

        // OemGzLdt1024 (0x13F4)
        XCTAssertEqual(OEMCode.gzLdt1024, 0x13F4)
        XCTAssertEqual(OEMCode.gzLdt1024.description, "OemGzLdt1024")
        XCTAssertEqual(OEMCode.gzLdt1024.mnemonic, "OemGzLdt1024")
        XCTAssertEqual(OEMCode.gzLdt1024.manufacturer, "GuangZhou LiDang Technology Co.,Ltd")
        XCTAssertEqual(OEMCode.gzLdt1024.product, "LD-NET-1024")
        XCTAssertEqual(OEMCode.gzLdt1024.dmxIn, 2)
        XCTAssertEqual(OEMCode.gzLdt1024.dmxOut, 2)
        XCTAssertEqual(OEMCode.gzLdt1024.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.gzLdt1024.isRDMSupported, false)

        // OemGzLdt2048 (0x13F5)
        XCTAssertEqual(OEMCode.gzLdt2048, 0x13F5)
        XCTAssertEqual(OEMCode.gzLdt2048.description, "OemGzLdt2048")
        XCTAssertEqual(OEMCode.gzLdt2048.mnemonic, "OemGzLdt2048")
        XCTAssertEqual(OEMCode.gzLdt2048.manufacturer, "GuangZhou LiDang Technology Co.,Ltd")
        XCTAssertEqual(OEMCode.gzLdt2048.product, "LD-NET-2028")
        XCTAssertEqual(OEMCode.gzLdt2048.dmxIn, 4)
        XCTAssertEqual(OEMCode.gzLdt2048.dmxOut, 4)
        XCTAssertEqual(OEMCode.gzLdt2048.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.gzLdt2048.isRDMSupported, false)

        // OemHdlDmxNode4 (0x11E0)
        XCTAssertEqual(OEMCode.hdlDmxNode4, 0x11E0)
        XCTAssertEqual(OEMCode.hdlDmxNode4.description, "OemHdlDmxNode4")
        XCTAssertEqual(OEMCode.hdlDmxNode4.mnemonic, "OemHdlDmxNode4")
        XCTAssertEqual(OEMCode.hdlDmxNode4.manufacturer, "HDL")
        XCTAssertEqual(OEMCode.hdlDmxNode4.product, "DMXNode4")
        XCTAssertEqual(OEMCode.hdlDmxNode4.dmxIn, 4)
        XCTAssertEqual(OEMCode.hdlDmxNode4.dmxOut, 4)
        XCTAssertEqual(OEMCode.hdlDmxNode4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hdlDmxNode4.isRDMSupported, true)

        // OemHedlFLA308 (0x1210)
        XCTAssertEqual(OEMCode.hedlFLA308, 0x1210)
        XCTAssertEqual(OEMCode.hedlFLA308.description, "OemHedlFLA308")
        XCTAssertEqual(OEMCode.hedlFLA308.mnemonic, "OemHedlFLA308")
        XCTAssertNil(OEMCode.hedlFLA308.manufacturer)
        XCTAssertEqual(OEMCode.hedlFLA308.product, "FLA308")
        XCTAssertEqual(OEMCode.hedlFLA308.dmxIn, 0)
        XCTAssertEqual(OEMCode.hedlFLA308.dmxOut, 1)
        XCTAssertEqual(OEMCode.hedlFLA308.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.hedlFLA308.isRDMSupported, false)

        // OemHedlFLA320 (0x1211)
        XCTAssertEqual(OEMCode.hedlFLA320, 0x1211)
        XCTAssertEqual(OEMCode.hedlFLA320.description, "OemHedlFLA320")
        XCTAssertEqual(OEMCode.hedlFLA320.mnemonic, "OemHedlFLA320")
        XCTAssertNil(OEMCode.hedlFLA320.manufacturer)
        XCTAssertEqual(OEMCode.hedlFLA320.product, "FLA320")
        XCTAssertEqual(OEMCode.hedlFLA320.dmxIn, 0)
        XCTAssertEqual(OEMCode.hedlFLA320.dmxOut, 1)
        XCTAssertEqual(OEMCode.hedlFLA320.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.hedlFLA320.isRDMSupported, false)

        // OemHesCatalyst1 (0x3C0)
        XCTAssertEqual(OEMCode.hesCatalyst1, 0x3C0)
        XCTAssertEqual(OEMCode.hesCatalyst1.description, "OemHesCatalyst1")
        XCTAssertEqual(OEMCode.hesCatalyst1.mnemonic, "OemHesCatalyst1")
        XCTAssertEqual(OEMCode.hesCatalyst1.manufacturer, "Catalyst")
        XCTAssertEqual(OEMCode.hesCatalyst1.product, "Catalyst")
        XCTAssertEqual(OEMCode.hesCatalyst1.dmxIn, 0)
        XCTAssertEqual(OEMCode.hesCatalyst1.dmxOut, 0)
        XCTAssertEqual(OEMCode.hesCatalyst1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.hesCatalyst1.isRDMSupported, false)

        // OemHesDP2000 (0x502)
        XCTAssertEqual(OEMCode.hesDP2000, 0x502)
        XCTAssertEqual(OEMCode.hesDP2000.description, "OemHesDP2000")
        XCTAssertEqual(OEMCode.hesDP2000.mnemonic, "OemHesDP2000")
        XCTAssertEqual(OEMCode.hesDP2000.manufacturer, "HES")
        XCTAssertEqual(OEMCode.hesDP2000.product, "DP2000")
        XCTAssertEqual(OEMCode.hesDP2000.dmxIn, 0)
        XCTAssertEqual(OEMCode.hesDP2000.dmxOut, 4)
        XCTAssertEqual(OEMCode.hesDP2000.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hesDP2000.isRDMSupported, false)

        // OemHesDP8000 (0x500)
        XCTAssertEqual(OEMCode.hesDP8000, 0x500)
        XCTAssertEqual(OEMCode.hesDP8000.description, "OemHesDP8000")
        XCTAssertEqual(OEMCode.hesDP8000.mnemonic, "OemHesDP8000")
        XCTAssertEqual(OEMCode.hesDP8000.manufacturer, "HES")
        XCTAssertEqual(OEMCode.hesDP8000.product, "DP8000-16")
        XCTAssertEqual(OEMCode.hesDP8000.dmxIn, 0)
        XCTAssertEqual(OEMCode.hesDP8000.dmxOut, 4)
        XCTAssertEqual(OEMCode.hesDP8000.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hesDP8000.isRDMSupported, false)

        // OemHesFullBoar (0x501)
        XCTAssertEqual(OEMCode.hesFullBoar, 0x501)
        XCTAssertEqual(OEMCode.hesFullBoar.description, "OemHesFullBoar")
        XCTAssertEqual(OEMCode.hesFullBoar.mnemonic, "OemHesFullBoar")
        XCTAssertEqual(OEMCode.hesFullBoar.manufacturer, "HES")
        XCTAssertEqual(OEMCode.hesFullBoar.product, "DP8000-12")
        XCTAssertEqual(OEMCode.hesFullBoar.dmxIn, 0)
        XCTAssertEqual(OEMCode.hesFullBoar.dmxOut, 4)
        XCTAssertEqual(OEMCode.hesFullBoar.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hesFullBoar.isRDMSupported, false)

        // OemHighElecEzk456 (0x1030)
        XCTAssertEqual(OEMCode.highElecEzk456, 0x1030)
        XCTAssertEqual(OEMCode.highElecEzk456.description, "OemHighElecEzk456")
        XCTAssertEqual(OEMCode.highElecEzk456.mnemonic, "OemHighElecEzk456")
        XCTAssertEqual(OEMCode.highElecEzk456.manufacturer, "Highendled Electronics Company Limited")
        XCTAssertEqual(OEMCode.highElecEzk456.product, "EZK456")
        XCTAssertEqual(OEMCode.highElecEzk456.dmxIn, 0)
        XCTAssertEqual(OEMCode.highElecEzk456.dmxOut, 1)
        XCTAssertEqual(OEMCode.highElecEzk456.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.highElecEzk456.isRDMSupported, false)

        // OemHighElecFla472 (0x1032)
        XCTAssertEqual(OEMCode.highElecFla472, 0x1032)
        XCTAssertEqual(OEMCode.highElecFla472.description, "OemHighElecFla472")
        XCTAssertEqual(OEMCode.highElecFla472.mnemonic, "OemHighElecFla472")
        XCTAssertEqual(OEMCode.highElecFla472.manufacturer, "Highendled Electronics Company Limited")
        XCTAssertEqual(OEMCode.highElecFla472.product, "FLA472")
        XCTAssertEqual(OEMCode.highElecFla472.dmxIn, 0)
        XCTAssertEqual(OEMCode.highElecFla472.dmxOut, 1)
        XCTAssertEqual(OEMCode.highElecFla472.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.highElecFla472.isRDMSupported, false)

        // OemHighElecLedPsu10 (0x1034)
        XCTAssertEqual(OEMCode.highElecLedPsu10, 0x1034)
        XCTAssertEqual(OEMCode.highElecLedPsu10.description, "OemHighElecLedPsu10")
        XCTAssertEqual(OEMCode.highElecLedPsu10.mnemonic, "OemHighElecLedPsu10")
        XCTAssertEqual(OEMCode.highElecLedPsu10.manufacturer, "Highendled Electronics Company Limited")
        XCTAssertEqual(OEMCode.highElecLedPsu10.product, "PSU-10A")
        XCTAssertEqual(OEMCode.highElecLedPsu10.dmxIn, 0)
        XCTAssertEqual(OEMCode.highElecLedPsu10.dmxOut, 2)
        XCTAssertEqual(OEMCode.highElecLedPsu10.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.highElecLedPsu10.isRDMSupported, false)

        // OemHighElecPix101 (0x1031)
        XCTAssertEqual(OEMCode.highElecPix101, 0x1031)
        XCTAssertEqual(OEMCode.highElecPix101.description, "OemHighElecPix101")
        XCTAssertEqual(OEMCode.highElecPix101.mnemonic, "OemHighElecPix101")
        XCTAssertEqual(OEMCode.highElecPix101.manufacturer, "Highendled Electronics Company Limited")
        XCTAssertEqual(OEMCode.highElecPix101.product, "PIX101")
        XCTAssertEqual(OEMCode.highElecPix101.dmxIn, 0)
        XCTAssertEqual(OEMCode.highElecPix101.dmxOut, 1)
        XCTAssertEqual(OEMCode.highElecPix101.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.highElecPix101.isRDMSupported, false)

        // OemHighElecUlt538 (0x1033)
        XCTAssertEqual(OEMCode.highElecUlt538, 0x1033)
        XCTAssertEqual(OEMCode.highElecUlt538.description, "OemHighElecUlt538")
        XCTAssertEqual(OEMCode.highElecUlt538.mnemonic, "OemHighElecUlt538")
        XCTAssertEqual(OEMCode.highElecUlt538.manufacturer, "Highendled Electronics Company Limited")
        XCTAssertEqual(OEMCode.highElecUlt538.product, "ULT538")
        XCTAssertEqual(OEMCode.highElecUlt538.dmxIn, 0)
        XCTAssertEqual(OEMCode.highElecUlt538.dmxOut, 1)
        XCTAssertEqual(OEMCode.highElecUlt538.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.highElecUlt538.isRDMSupported, false)

        // OemHighEnd (0x5)
        XCTAssertEqual(OEMCode.highEnd, 0x5)
        XCTAssertEqual(OEMCode.highEnd.description, "OemHighEnd")
        XCTAssertEqual(OEMCode.highEnd.mnemonic, "OemHighEnd")
        XCTAssertEqual(OEMCode.highEnd.manufacturer, "High End Systems")
        XCTAssertEqual(OEMCode.highEnd.product, "High End Systems")
        XCTAssertEqual(OEMCode.highEnd.dmxIn, 0)
        XCTAssertEqual(OEMCode.highEnd.dmxOut, 0)
        XCTAssertEqual(OEMCode.highEnd.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.highEnd.isRDMSupported, false)

        // OemHippo1 (0x1D0)
        XCTAssertEqual(OEMCode.hippo1, 0x1D0)
        XCTAssertEqual(OEMCode.hippo1.description, "OemHippo1")
        XCTAssertEqual(OEMCode.hippo1.mnemonic, "OemHippo1")
        XCTAssertEqual(OEMCode.hippo1.manufacturer, "Green Hippo")
        XCTAssertEqual(OEMCode.hippo1.product, "Hippotizer")
        XCTAssertEqual(OEMCode.hippo1.dmxIn, 1)
        XCTAssertEqual(OEMCode.hippo1.dmxOut, 0)
        XCTAssertEqual(OEMCode.hippo1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.hippo1.isRDMSupported, false)

        // OemHmbCc5121 (0x2892)
        XCTAssertEqual(OEMCode.hmbCc5121, 0x2892)
        XCTAssertEqual(OEMCode.hmbCc5121.description, "OemHmbCc5121")
        XCTAssertEqual(OEMCode.hmbCc5121.mnemonic, "OemHmbCc5121")
        XCTAssertEqual(OEMCode.hmbCc5121.manufacturer, "HMB TEC GmbH")
        XCTAssertEqual(OEMCode.hmbCc5121.product, "CC512")
        XCTAssertEqual(OEMCode.hmbCc5121.dmxIn, 0)
        XCTAssertEqual(OEMCode.hmbCc5121.dmxOut, 1)
        XCTAssertEqual(OEMCode.hmbCc5121.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hmbCc5121.isRDMSupported, false)

        // OemHmbRr5121 (0x2891)
        XCTAssertEqual(OEMCode.hmbRr5121, 0x2891)
        XCTAssertEqual(OEMCode.hmbRr5121.description, "OemHmbRr5121")
        XCTAssertEqual(OEMCode.hmbRr5121.mnemonic, "OemHmbRr5121")
        XCTAssertEqual(OEMCode.hmbRr5121.manufacturer, "HMB TEC GmbH")
        XCTAssertEqual(OEMCode.hmbRr5121.product, "RR512")
        XCTAssertEqual(OEMCode.hmbRr5121.dmxIn, 0)
        XCTAssertEqual(OEMCode.hmbRr5121.dmxOut, 1)
        XCTAssertEqual(OEMCode.hmbRr5121.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hmbRr5121.isRDMSupported, true)

        // OemHmdCc5121 (0x2842)
        XCTAssertEqual(OEMCode.hmdCc5121, 0x2842)
        XCTAssertEqual(OEMCode.hmdCc5121.description, "OemHmdCc5121")
        XCTAssertEqual(OEMCode.hmdCc5121.mnemonic, "OemHmdCc5121")
        XCTAssertEqual(OEMCode.hmdCc5121.manufacturer, "HMB TEC GmbH")
        XCTAssertEqual(OEMCode.hmdCc5121.product, "CC512-Pix")
        XCTAssertEqual(OEMCode.hmdCc5121.dmxIn, 512)
        XCTAssertEqual(OEMCode.hmdCc5121.dmxOut, 0)
        XCTAssertEqual(OEMCode.hmdCc5121.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hmdCc5121.isRDMSupported, false)

        // OemHorizon1 (0x3F0)
        XCTAssertEqual(OEMCode.horizon1, 0x3F0)
        XCTAssertEqual(OEMCode.horizon1.description, "OemHorizon1")
        XCTAssertEqual(OEMCode.horizon1.mnemonic, "OemHorizon1")
        XCTAssertEqual(OEMCode.horizon1.manufacturer, "Horizon")
        XCTAssertEqual(OEMCode.horizon1.product, "Horizon Controller")
        XCTAssertEqual(OEMCode.horizon1.dmxIn, 0)
        XCTAssertEqual(OEMCode.horizon1.dmxOut, 0)
        XCTAssertEqual(OEMCode.horizon1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.horizon1.isRDMSupported, false)

        // OemHplD1 (0x9A0)
        XCTAssertEqual(OEMCode.hplD1, 0x9A0)
        XCTAssertEqual(OEMCode.hplD1.description, "OemHplD1")
        XCTAssertEqual(OEMCode.hplD1.mnemonic, "OemHplD1")
        XCTAssertEqual(OEMCode.hplD1.manufacturer, "HPL LIGHT COMPANY")
        XCTAssertEqual(OEMCode.hplD1.product, "DIMMER POWER LIGHT")
        XCTAssertEqual(OEMCode.hplD1.dmxIn, 1)
        XCTAssertEqual(OEMCode.hplD1.dmxOut, 0)
        XCTAssertEqual(OEMCode.hplD1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hplD1.isRDMSupported, false)

        // OemHplDelta8 (0x1300)
        XCTAssertEqual(OEMCode.hplDelta8, 0x1300)
        XCTAssertEqual(OEMCode.hplDelta8.description, "OemHplDelta8")
        XCTAssertEqual(OEMCode.hplDelta8.mnemonic, "OemHplDelta8")
        XCTAssertEqual(OEMCode.hplDelta8.manufacturer, "HPL Company")
        XCTAssertEqual(OEMCode.hplDelta8.product, "Delta 8 Node")
        XCTAssertEqual(OEMCode.hplDelta8.dmxIn, 4)
        XCTAssertEqual(OEMCode.hplDelta8.dmxOut, 4)
        XCTAssertEqual(OEMCode.hplDelta8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.hplDelta8.isRDMSupported, true)

        // OemHuacanH801RT (0x1200)
        XCTAssertEqual(OEMCode.huacanH801RT, 0x1200)
        XCTAssertEqual(OEMCode.huacanH801RT.description, "OemHuacanH801RT")
        XCTAssertEqual(OEMCode.huacanH801RT.mnemonic, "OemHuacanH801RT")
        XCTAssertEqual(OEMCode.huacanH801RT.manufacturer, "ShenZhen HuaCanXing Technology Co.,Ltd.")
        XCTAssertEqual(OEMCode.huacanH801RT.product, "H801RT")
        XCTAssertEqual(OEMCode.huacanH801RT.dmxIn, 0)
        XCTAssertEqual(OEMCode.huacanH801RT.dmxOut, 4)
        XCTAssertEqual(OEMCode.huacanH801RT.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.huacanH801RT.isRDMSupported, false)

        // OemIbhLoox1 (0xD20)
        XCTAssertEqual(OEMCode.ibhLoox1, 0xD20)
        XCTAssertEqual(OEMCode.ibhLoox1.description, "OemIbhLoox1")
        XCTAssertEqual(OEMCode.ibhLoox1.mnemonic, "OemIbhLoox1")
        XCTAssertEqual(OEMCode.ibhLoox1.manufacturer, "IBH")
        XCTAssertEqual(OEMCode.ibhLoox1.product, "loox")
        XCTAssertEqual(OEMCode.ibhLoox1.dmxIn, 0)
        XCTAssertEqual(OEMCode.ibhLoox1.dmxOut, 1)
        XCTAssertEqual(OEMCode.ibhLoox1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ibhLoox1.isRDMSupported, false)

        // OemIcoSc17111 (0x28A7)
        XCTAssertEqual(OEMCode.icoSc17111, 0x28A7)
        XCTAssertEqual(OEMCode.icoSc17111.description, "OemIcoSc17111")
        XCTAssertEqual(OEMCode.icoSc17111.mnemonic, "OemIcoSc17111")
        XCTAssertEqual(OEMCode.icoSc17111.manufacturer, "iColor Led Shenzhen Co., Ltd")
        XCTAssertEqual(OEMCode.icoSc17111.product, "SC1711")
        XCTAssertEqual(OEMCode.icoSc17111.dmxIn, 0)
        XCTAssertEqual(OEMCode.icoSc17111.dmxOut, 8)
        XCTAssertEqual(OEMCode.icoSc17111.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.icoSc17111.isRDMSupported, false)

        // OemIcoSc17121 (0x28A6)
        XCTAssertEqual(OEMCode.icoSc17121, 0x28A6)
        XCTAssertEqual(OEMCode.icoSc17121.description, "OemIcoSc17121")
        XCTAssertEqual(OEMCode.icoSc17121.mnemonic, "OemIcoSc17121")
        XCTAssertEqual(OEMCode.icoSc17121.manufacturer, "iColor Led Shenzhen Co., Ltd")
        XCTAssertEqual(OEMCode.icoSc17121.product, "SC1712")
        XCTAssertEqual(OEMCode.icoSc17121.dmxIn, 0)
        XCTAssertEqual(OEMCode.icoSc17121.dmxOut, 8)
        XCTAssertEqual(OEMCode.icoSc17121.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.icoSc17121.isRDMSupported, true)

        // OemIes3 (0x1A3)
        XCTAssertEqual(OEMCode.ies3, 0x1A3)
        XCTAssertEqual(OEMCode.ies3.description, "OemIes3")
        XCTAssertEqual(OEMCode.ies3.mnemonic, "OemIes3")
        XCTAssertEqual(OEMCode.ies3.manufacturer, "LES")
        XCTAssertEqual(OEMCode.ies3.product, "LES 3")
        XCTAssertEqual(OEMCode.ies3.dmxIn, 0)
        XCTAssertEqual(OEMCode.ies3.dmxOut, 0)
        XCTAssertEqual(OEMCode.ies3.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ies3.isRDMSupported, false)

        // OemIes4 (0x1A4)
        XCTAssertEqual(OEMCode.ies4, 0x1A4)
        XCTAssertEqual(OEMCode.ies4.description, "OemIes4")
        XCTAssertEqual(OEMCode.ies4.mnemonic, "OemIes4")
        XCTAssertEqual(OEMCode.ies4.manufacturer, "LES")
        XCTAssertEqual(OEMCode.ies4.product, "LES 4")
        XCTAssertEqual(OEMCode.ies4.dmxIn, 0)
        XCTAssertEqual(OEMCode.ies4.dmxOut, 0)
        XCTAssertEqual(OEMCode.ies4.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ies4.isRDMSupported, false)

        // OemIes5 (0x1A5)
        XCTAssertEqual(OEMCode.ies5, 0x1A5)
        XCTAssertEqual(OEMCode.ies5.description, "OemIes5")
        XCTAssertEqual(OEMCode.ies5.mnemonic, "OemIes5")
        XCTAssertEqual(OEMCode.ies5.manufacturer, "LES")
        XCTAssertEqual(OEMCode.ies5.product, "LES 5")
        XCTAssertEqual(OEMCode.ies5.dmxIn, 0)
        XCTAssertEqual(OEMCode.ies5.dmxOut, 0)
        XCTAssertEqual(OEMCode.ies5.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ies5.isRDMSupported, false)

        // OemIes6 (0x1A6)
        XCTAssertEqual(OEMCode.ies6, 0x1A6)
        XCTAssertEqual(OEMCode.ies6.description, "OemIes6")
        XCTAssertEqual(OEMCode.ies6.mnemonic, "OemIes6")
        XCTAssertEqual(OEMCode.ies6.manufacturer, "LES")
        XCTAssertEqual(OEMCode.ies6.product, "LES 6")
        XCTAssertEqual(OEMCode.ies6.dmxIn, 0)
        XCTAssertEqual(OEMCode.ies6.dmxOut, 0)
        XCTAssertEqual(OEMCode.ies6.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ies6.isRDMSupported, false)

        // OemIes7 (0x1A7)
        XCTAssertEqual(OEMCode.ies7, 0x1A7)
        XCTAssertEqual(OEMCode.ies7.description, "OemIes7")
        XCTAssertEqual(OEMCode.ies7.mnemonic, "OemIes7")
        XCTAssertEqual(OEMCode.ies7.manufacturer, "LES")
        XCTAssertEqual(OEMCode.ies7.product, "LES 7")
        XCTAssertEqual(OEMCode.ies7.dmxIn, 0)
        XCTAssertEqual(OEMCode.ies7.dmxOut, 0)
        XCTAssertEqual(OEMCode.ies7.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ies7.isRDMSupported, false)

        // OemIes8 (0x1A8)
        XCTAssertEqual(OEMCode.ies8, 0x1A8)
        XCTAssertEqual(OEMCode.ies8.description, "OemIes8")
        XCTAssertEqual(OEMCode.ies8.mnemonic, "OemIes8")
        XCTAssertEqual(OEMCode.ies8.manufacturer, "LES")
        XCTAssertEqual(OEMCode.ies8.product, "LES 8")
        XCTAssertEqual(OEMCode.ies8.dmxIn, 0)
        XCTAssertEqual(OEMCode.ies8.dmxOut, 0)
        XCTAssertEqual(OEMCode.ies8.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ies8.isRDMSupported, false)

        // OemIes9 (0x1A9)
        XCTAssertEqual(OEMCode.ies9, 0x1A9)
        XCTAssertEqual(OEMCode.ies9.description, "OemIes9")
        XCTAssertEqual(OEMCode.ies9.mnemonic, "OemIes9")
        XCTAssertEqual(OEMCode.ies9.manufacturer, "LES")
        XCTAssertEqual(OEMCode.ies9.product, "LES 9")
        XCTAssertEqual(OEMCode.ies9.dmxIn, 0)
        XCTAssertEqual(OEMCode.ies9.dmxOut, 0)
        XCTAssertEqual(OEMCode.ies9.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ies9.isRDMSupported, false)

        // OemIesa (0x1AA)
        XCTAssertEqual(OEMCode.iesa, 0x1AA)
        XCTAssertEqual(OEMCode.iesa.description, "OemIesa")
        XCTAssertEqual(OEMCode.iesa.mnemonic, "OemIesa")
        XCTAssertEqual(OEMCode.iesa.manufacturer, "LES")
        XCTAssertEqual(OEMCode.iesa.product, "LES a")
        XCTAssertEqual(OEMCode.iesa.dmxIn, 0)
        XCTAssertEqual(OEMCode.iesa.dmxOut, 0)
        XCTAssertEqual(OEMCode.iesa.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.iesa.isRDMSupported, false)

        // OemIesb (0x1AB)
        XCTAssertEqual(OEMCode.iesb, 0x1AB)
        XCTAssertEqual(OEMCode.iesb.description, "OemIesb")
        XCTAssertEqual(OEMCode.iesb.mnemonic, "OemIesb")
        XCTAssertEqual(OEMCode.iesb.manufacturer, "LES")
        XCTAssertEqual(OEMCode.iesb.product, "LES b")
        XCTAssertEqual(OEMCode.iesb.dmxIn, 0)
        XCTAssertEqual(OEMCode.iesb.dmxOut, 0)
        XCTAssertEqual(OEMCode.iesb.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.iesb.isRDMSupported, false)

        // OemIesc (0x1AC)
        XCTAssertEqual(OEMCode.iesc, 0x1AC)
        XCTAssertEqual(OEMCode.iesc.description, "OemIesc")
        XCTAssertEqual(OEMCode.iesc.mnemonic, "OemIesc")
        XCTAssertEqual(OEMCode.iesc.manufacturer, "LES")
        XCTAssertEqual(OEMCode.iesc.product, "LES c")
        XCTAssertEqual(OEMCode.iesc.dmxIn, 0)
        XCTAssertEqual(OEMCode.iesc.dmxOut, 0)
        XCTAssertEqual(OEMCode.iesc.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.iesc.isRDMSupported, false)

        // OemIesd (0x1AD)
        XCTAssertEqual(OEMCode.iesd, 0x1AD)
        XCTAssertEqual(OEMCode.iesd.description, "OemIesd")
        XCTAssertEqual(OEMCode.iesd.mnemonic, "OemIesd")
        XCTAssertEqual(OEMCode.iesd.manufacturer, "LES")
        XCTAssertEqual(OEMCode.iesd.product, "LES d")
        XCTAssertEqual(OEMCode.iesd.dmxIn, 0)
        XCTAssertEqual(OEMCode.iesd.dmxOut, 0)
        XCTAssertEqual(OEMCode.iesd.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.iesd.isRDMSupported, false)

        // OemIese (0x1AE)
        XCTAssertEqual(OEMCode.iese, 0x1AE)
        XCTAssertEqual(OEMCode.iese.description, "OemIese")
        XCTAssertEqual(OEMCode.iese.mnemonic, "OemIese")
        XCTAssertEqual(OEMCode.iese.manufacturer, "LES")
        XCTAssertEqual(OEMCode.iese.product, "LES e")
        XCTAssertEqual(OEMCode.iese.dmxIn, 0)
        XCTAssertEqual(OEMCode.iese.dmxOut, 0)
        XCTAssertEqual(OEMCode.iese.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.iese.isRDMSupported, false)

        // OemIesExecutive (0x1A1)
        XCTAssertEqual(OEMCode.iesExecutive, 0x1A1)
        XCTAssertEqual(OEMCode.iesExecutive.description, "OemIesExecutive")
        XCTAssertEqual(OEMCode.iesExecutive.mnemonic, "OemIesExecutive")
        XCTAssertEqual(OEMCode.iesExecutive.manufacturer, "LES")
        XCTAssertEqual(OEMCode.iesExecutive.product, "Executive")
        XCTAssertEqual(OEMCode.iesExecutive.dmxIn, 0)
        XCTAssertEqual(OEMCode.iesExecutive.dmxOut, 2)
        XCTAssertEqual(OEMCode.iesExecutive.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.iesExecutive.isRDMSupported, false)

        // OemIesf (0x1AF)
        XCTAssertEqual(OEMCode.iesf, 0x1AF)
        XCTAssertEqual(OEMCode.iesf.description, "OemIesf")
        XCTAssertEqual(OEMCode.iesf.mnemonic, "OemIesf")
        XCTAssertEqual(OEMCode.iesf.manufacturer, "LES")
        XCTAssertEqual(OEMCode.iesf.product, "LES f")
        XCTAssertEqual(OEMCode.iesf.dmxIn, 0)
        XCTAssertEqual(OEMCode.iesf.dmxOut, 0)
        XCTAssertEqual(OEMCode.iesf.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.iesf.isRDMSupported, false)

        // OemIesMatrix (0x1A2)
        XCTAssertEqual(OEMCode.iesMatrix, 0x1A2)
        XCTAssertEqual(OEMCode.iesMatrix.description, "OemIesMatrix")
        XCTAssertEqual(OEMCode.iesMatrix.mnemonic, "OemIesMatrix")
        XCTAssertEqual(OEMCode.iesMatrix.manufacturer, "LES")
        XCTAssertEqual(OEMCode.iesMatrix.product, "Matrix")
        XCTAssertEqual(OEMCode.iesMatrix.dmxIn, 0)
        XCTAssertEqual(OEMCode.iesMatrix.dmxOut, 2)
        XCTAssertEqual(OEMCode.iesMatrix.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.iesMatrix.isRDMSupported, false)

        // OemIesPbx (0x1A0)
        XCTAssertEqual(OEMCode.iesPbx, 0x1A0)
        XCTAssertEqual(OEMCode.iesPbx.description, "OemIesPbx")
        XCTAssertEqual(OEMCode.iesPbx.mnemonic, "OemIesPbx")
        XCTAssertEqual(OEMCode.iesPbx.manufacturer, "LES")
        XCTAssertEqual(OEMCode.iesPbx.product, "PBX")
        XCTAssertEqual(OEMCode.iesPbx.dmxIn, 0)
        XCTAssertEqual(OEMCode.iesPbx.dmxOut, 1)
        XCTAssertEqual(OEMCode.iesPbx.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.iesPbx.isRDMSupported, false)

        // OemIllumTechXStream1 (0x28C9)
        XCTAssertEqual(OEMCode.illumTechXStream1, 0x28C9)
        XCTAssertEqual(OEMCode.illumTechXStream1.description, "OemIllumTechXStream1")
        XCTAssertEqual(OEMCode.illumTechXStream1.mnemonic, "OemIllumTechXStream1")
        XCTAssertEqual(OEMCode.illumTechXStream1.manufacturer, "Illum Technology LLC")
        XCTAssertEqual(OEMCode.illumTechXStream1.product, "XStream")
        XCTAssertEqual(OEMCode.illumTechXStream1.dmxIn, 2)
        XCTAssertEqual(OEMCode.illumTechXStream1.dmxOut, 2)
        XCTAssertEqual(OEMCode.illumTechXStream1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.illumTechXStream1.isRDMSupported, true)

        // OemImagCueNev1 (0x2815)
        XCTAssertEqual(OEMCode.imagCueNev1, 0x2815)
        XCTAssertEqual(OEMCode.imagCueNev1.description, "OemImagCueNev1")
        XCTAssertEqual(OEMCode.imagCueNev1.mnemonic, "OemImagCueNev1")
        XCTAssertEqual(OEMCode.imagCueNev1.manufacturer, "ImageCue LLC")
        XCTAssertEqual(OEMCode.imagCueNev1.product, "ImageCue-NEV")
        XCTAssertEqual(OEMCode.imagCueNev1.dmxIn, 0)
        XCTAssertEqual(OEMCode.imagCueNev1.dmxOut, 1)
        XCTAssertEqual(OEMCode.imagCueNev1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.imagCueNev1.isRDMSupported, false)

        // OemImageEngBc1 (0x1350)
        XCTAssertEqual(OEMCode.imageEngBc1, 0x1350)
        XCTAssertEqual(OEMCode.imageEngBc1.description, "OemImageEngBc1")
        XCTAssertEqual(OEMCode.imageEngBc1.mnemonic, "OemImageEngBc1")
        XCTAssertEqual(OEMCode.imageEngBc1.manufacturer, "Image Engineering")
        XCTAssertEqual(OEMCode.imageEngBc1.product, "Beam Composer")
        XCTAssertEqual(OEMCode.imageEngBc1.dmxIn, 1)
        XCTAssertEqual(OEMCode.imageEngBc1.dmxOut, 0)
        XCTAssertEqual(OEMCode.imageEngBc1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.imageEngBc1.isRDMSupported, false)

        // OemImmDesStuCan1 (0x1260)
        XCTAssertEqual(OEMCode.immDesStuCan1, 0x1260)
        XCTAssertEqual(OEMCode.immDesStuCan1.description, "OemImmDesStuCan1")
        XCTAssertEqual(OEMCode.immDesStuCan1.mnemonic, "OemImmDesStuCan1")
        XCTAssertEqual(OEMCode.immDesStuCan1.manufacturer, "Immersive Design Studios")
        XCTAssertEqual(OEMCode.immDesStuCan1.product, "Canvas")
        XCTAssertEqual(OEMCode.immDesStuCan1.dmxIn, 1)
        XCTAssertEqual(OEMCode.immDesStuCan1.dmxOut, 1)
        XCTAssertEqual(OEMCode.immDesStuCan1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.immDesStuCan1.isRDMSupported, false)

        // OemImmersiveCanvas1 (0x1380)
        XCTAssertEqual(OEMCode.immersiveCanvas1, 0x1380)
        XCTAssertEqual(OEMCode.immersiveCanvas1.description, "OemImmersiveCanvas1")
        XCTAssertEqual(OEMCode.immersiveCanvas1.mnemonic, "OemImmersiveCanvas1")
        XCTAssertEqual(OEMCode.immersiveCanvas1.manufacturer, "Immersive Design Studios inc")
        XCTAssertEqual(OEMCode.immersiveCanvas1.product, "Canvas")
        XCTAssertEqual(OEMCode.immersiveCanvas1.dmxIn, 1)
        XCTAssertEqual(OEMCode.immersiveCanvas1.dmxOut, 0)
        XCTAssertEqual(OEMCode.immersiveCanvas1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.immersiveCanvas1.isRDMSupported, false)

        // OemInfChimp1001 (0x2826)
        XCTAssertEqual(OEMCode.infChimp1001, 0x2826)
        XCTAssertEqual(OEMCode.infChimp1001.description, "OemInfChimp1001")
        XCTAssertEqual(OEMCode.infChimp1001.mnemonic, "OemInfChimp1001")
        XCTAssertEqual(OEMCode.infChimp1001.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infChimp1001.product, "Chimp 100")
        XCTAssertEqual(OEMCode.infChimp1001.dmxIn, 2)
        XCTAssertEqual(OEMCode.infChimp1001.dmxOut, 2)
        XCTAssertEqual(OEMCode.infChimp1001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infChimp1001.isRDMSupported, true)

        // OemInfChimp3001 (0x2825)
        XCTAssertEqual(OEMCode.infChimp3001, 0x2825)
        XCTAssertEqual(OEMCode.infChimp3001.description, "OemInfChimp3001")
        XCTAssertEqual(OEMCode.infChimp3001.mnemonic, "OemInfChimp3001")
        XCTAssertEqual(OEMCode.infChimp3001.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infChimp3001.product, "Chimp 300")
        XCTAssertEqual(OEMCode.infChimp3001.dmxIn, 4)
        XCTAssertEqual(OEMCode.infChimp3001.dmxOut, 4)
        XCTAssertEqual(OEMCode.infChimp3001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infChimp3001.isRDMSupported, true)

        // OemInfIm25151 (0x2827)
        XCTAssertEqual(OEMCode.infIm25151, 0x2827)
        XCTAssertEqual(OEMCode.infIm25151.description, "OemInfIm25151")
        XCTAssertEqual(OEMCode.infIm25151.mnemonic, "OemInfIm25151")
        XCTAssertEqual(OEMCode.infIm25151.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infIm25151.product, "iM-2515")
        XCTAssertEqual(OEMCode.infIm25151.dmxIn, 1)
        XCTAssertEqual(OEMCode.infIm25151.dmxOut, 0)
        XCTAssertEqual(OEMCode.infIm25151.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infIm25151.isRDMSupported, false)

        // OemInfinityTF300Fresnel1 (0x28C5)
        XCTAssertEqual(OEMCode.infinityTF300Fresnel1, 0x28C5)
        XCTAssertEqual(OEMCode.infinityTF300Fresnel1.description, "OemInfinityTF300Fresnel1")
        XCTAssertEqual(OEMCode.infinityTF300Fresnel1.mnemonic, "OemInfinityTF300Fresnel1")
        XCTAssertEqual(OEMCode.infinityTF300Fresnel1.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infinityTF300Fresnel1.product, "TF-300 Fresnel")
        XCTAssertEqual(OEMCode.infinityTF300Fresnel1.dmxIn, 1)
        XCTAssertEqual(OEMCode.infinityTF300Fresnel1.dmxOut, 1)
        XCTAssertEqual(OEMCode.infinityTF300Fresnel1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infinityTF300Fresnel1.isRDMSupported, true)

        // OemInfinityTS150Profile1 (0x28C8)
        XCTAssertEqual(OEMCode.infinityTS150Profile1, 0x28C8)
        XCTAssertEqual(OEMCode.infinityTS150Profile1.description, "OemInfinityTS150Profile1")
        XCTAssertEqual(OEMCode.infinityTS150Profile1.mnemonic, "OemInfinityTS150Profile1")
        XCTAssertEqual(OEMCode.infinityTS150Profile1.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infinityTS150Profile1.product, "TS-150 Profile")
        XCTAssertEqual(OEMCode.infinityTS150Profile1.dmxIn, 1)
        XCTAssertEqual(OEMCode.infinityTS150Profile1.dmxOut, 1)
        XCTAssertEqual(OEMCode.infinityTS150Profile1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infinityTS150Profile1.isRDMSupported, true)

        // OemInfinityTS200C7Profile1 (0x28C6)
        XCTAssertEqual(OEMCode.infinityTS200C7Profile1, 0x28C6)
        XCTAssertEqual(OEMCode.infinityTS200C7Profile1.description, "OemInfinityTS200C7Profile1")
        XCTAssertEqual(OEMCode.infinityTS200C7Profile1.mnemonic, "OemInfinityTS200C7Profile1")
        XCTAssertEqual(OEMCode.infinityTS200C7Profile1.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infinityTS200C7Profile1.product, "TS-200C7 Profile")
        XCTAssertEqual(OEMCode.infinityTS200C7Profile1.dmxIn, 1)
        XCTAssertEqual(OEMCode.infinityTS200C7Profile1.dmxOut, 1)
        XCTAssertEqual(OEMCode.infinityTS200C7Profile1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infinityTS200C7Profile1.isRDMSupported, true)

        // OemInfinityTS300Profile1 (0x28C7)
        XCTAssertEqual(OEMCode.infinityTS300Profile1, 0x28C7)
        XCTAssertEqual(OEMCode.infinityTS300Profile1.description, "OemInfinityTS300Profile1")
        XCTAssertEqual(OEMCode.infinityTS300Profile1.mnemonic, "OemInfinityTS300Profile1")
        XCTAssertEqual(OEMCode.infinityTS300Profile1.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infinityTS300Profile1.product, "TS-300 Profile")
        XCTAssertEqual(OEMCode.infinityTS300Profile1.dmxIn, 1)
        XCTAssertEqual(OEMCode.infinityTS300Profile1.dmxOut, 1)
        XCTAssertEqual(OEMCode.infinityTS300Profile1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infinityTS300Profile1.isRDMSupported, true)

        // OemInfinIw1240a (0x285C)
        XCTAssertEqual(OEMCode.infinIw1240a, 0x285C)
        XCTAssertEqual(OEMCode.infinIw1240a.description, "OemInfinIw1240a")
        XCTAssertEqual(OEMCode.infinIw1240a.mnemonic, "OemInfinIw1240a")
        XCTAssertEqual(OEMCode.infinIw1240a.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infinIw1240a.product, "iW-1240")
        XCTAssertEqual(OEMCode.infinIw1240a.dmxIn, 1)
        XCTAssertEqual(OEMCode.infinIw1240a.dmxOut, 1)
        XCTAssertEqual(OEMCode.infinIw1240a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infinIw1240a.isRDMSupported, true)

        // OemInfinIw340a (0x285E)
        XCTAssertEqual(OEMCode.infinIw340a, 0x285E)
        XCTAssertEqual(OEMCode.infinIw340a.description, "OemInfinIw340a")
        XCTAssertEqual(OEMCode.infinIw340a.mnemonic, "OemInfinIw340a")
        XCTAssertEqual(OEMCode.infinIw340a.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infinIw340a.product, "iW-340")
        XCTAssertEqual(OEMCode.infinIw340a.dmxIn, 1)
        XCTAssertEqual(OEMCode.infinIw340a.dmxOut, 1)
        XCTAssertEqual(OEMCode.infinIw340a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infinIw340a.isRDMSupported, true)

        // OemInfinIw740a (0x285D)
        XCTAssertEqual(OEMCode.infinIw740a, 0x285D)
        XCTAssertEqual(OEMCode.infinIw740a.description, "OemInfinIw740a")
        XCTAssertEqual(OEMCode.infinIw740a.mnemonic, "OemInfinIw740a")
        XCTAssertEqual(OEMCode.infinIw740a.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infinIw740a.product, "iW-740")
        XCTAssertEqual(OEMCode.infinIw740a.dmxIn, 1)
        XCTAssertEqual(OEMCode.infinIw740a.dmxOut, 1)
        XCTAssertEqual(OEMCode.infinIw740a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infinIw740a.isRDMSupported, true)

        // OemInfIpw150L1 (0x2824)
        XCTAssertEqual(OEMCode.infIpw150L1, 0x2824)
        XCTAssertEqual(OEMCode.infIpw150L1.description, "OemInfIpw150L1")
        XCTAssertEqual(OEMCode.infIpw150L1.mnemonic, "OemInfIpw150L1")
        XCTAssertEqual(OEMCode.infIpw150L1.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infIpw150L1.product, "iPW-150 LED Sunpanel")
        XCTAssertEqual(OEMCode.infIpw150L1.dmxIn, 1)
        XCTAssertEqual(OEMCode.infIpw150L1.dmxOut, 0)
        XCTAssertEqual(OEMCode.infIpw150L1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infIpw150L1.isRDMSupported, true)

        // OemInfIs4001 (0x2823)
        XCTAssertEqual(OEMCode.infIs4001, 0x2823)
        XCTAssertEqual(OEMCode.infIs4001.description, "OemInfIs4001")
        XCTAssertEqual(OEMCode.infIs4001.mnemonic, "OemInfIs4001")
        XCTAssertEqual(OEMCode.infIs4001.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infIs4001.product, "iS-400")
        XCTAssertEqual(OEMCode.infIs4001.dmxIn, 1)
        XCTAssertEqual(OEMCode.infIs4001.dmxOut, 0)
        XCTAssertEqual(OEMCode.infIs4001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infIs4001.isRDMSupported, false)

        // OemInfIw19151 (0x2822)
        XCTAssertEqual(OEMCode.infIw19151, 0x2822)
        XCTAssertEqual(OEMCode.infIw19151.description, "OemInfIw19151")
        XCTAssertEqual(OEMCode.infIw19151.mnemonic, "OemInfIw19151")
        XCTAssertEqual(OEMCode.infIw19151.manufacturer, "Infinity")
        XCTAssertEqual(OEMCode.infIw19151.product, "iW-1915 Pixel")
        XCTAssertEqual(OEMCode.infIw19151.dmxIn, 1)
        XCTAssertEqual(OEMCode.infIw19151.dmxOut, 0)
        XCTAssertEqual(OEMCode.infIw19151.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.infIw19151.isRDMSupported, false)

        // OemInghamHunt1 (0x13F3)
        XCTAssertEqual(OEMCode.inghamHunt1, 0x13F3)
        XCTAssertEqual(OEMCode.inghamHunt1.description, "OemInghamHunt1")
        XCTAssertEqual(OEMCode.inghamHunt1.mnemonic, "OemInghamHunt1")
        XCTAssertEqual(OEMCode.inghamHunt1.manufacturer, "Ingham Designs LLC")
        XCTAssertEqual(OEMCode.inghamHunt1.product, "Hunt Node")
        XCTAssertEqual(OEMCode.inghamHunt1.dmxIn, 3)
        XCTAssertEqual(OEMCode.inghamHunt1.dmxOut, 3)
        XCTAssertEqual(OEMCode.inghamHunt1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.inghamHunt1.isRDMSupported, true)

        // OemInnoIag (0x1062)
        XCTAssertEqual(OEMCode.innoIag, 0x1062)
        XCTAssertEqual(OEMCode.innoIag.description, "OemInnoIag")
        XCTAssertEqual(OEMCode.innoIag.mnemonic, "OemInnoIag")
        XCTAssertEqual(OEMCode.innoIag.manufacturer, "Innovation LED Limited")
        XCTAssertEqual(OEMCode.innoIag.product, "Ilumo ARC Gateway")
        XCTAssertEqual(OEMCode.innoIag.dmxIn, 1)
        XCTAssertEqual(OEMCode.innoIag.dmxOut, 1)
        XCTAssertEqual(OEMCode.innoIag.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.innoIag.isRDMSupported, true)

        // OemInnoIc1 (0x1061)
        XCTAssertEqual(OEMCode.innoIc1, 0x1061)
        XCTAssertEqual(OEMCode.innoIc1.description, "OemInnoIc1")
        XCTAssertEqual(OEMCode.innoIc1.mnemonic, "OemInnoIc1")
        XCTAssertEqual(OEMCode.innoIc1.manufacturer, "Innovation LED Limited")
        XCTAssertEqual(OEMCode.innoIc1.product, "Ilumo Cyc 1")
        XCTAssertEqual(OEMCode.innoIc1.dmxIn, 1)
        XCTAssertEqual(OEMCode.innoIc1.dmxOut, 1)
        XCTAssertEqual(OEMCode.innoIc1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.innoIc1.isRDMSupported, true)

        // OemInnoId1 (0x1063)
        XCTAssertEqual(OEMCode.innoId1, 0x1063)
        XCTAssertEqual(OEMCode.innoId1.description, "OemInnoId1")
        XCTAssertEqual(OEMCode.innoId1.mnemonic, "OemInnoId1")
        XCTAssertEqual(OEMCode.innoId1.manufacturer, "Innovation LED Limited")
        XCTAssertEqual(OEMCode.innoId1.product, "Ether DMX 1")
        XCTAssertEqual(OEMCode.innoId1.dmxIn, 1)
        XCTAssertEqual(OEMCode.innoId1.dmxOut, 1)
        XCTAssertEqual(OEMCode.innoId1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.innoId1.isRDMSupported, true)

        // OemInnoId2 (0x1064)
        XCTAssertEqual(OEMCode.innoId2, 0x1064)
        XCTAssertEqual(OEMCode.innoId2.description, "OemInnoId2")
        XCTAssertEqual(OEMCode.innoId2.mnemonic, "OemInnoId2")
        XCTAssertEqual(OEMCode.innoId2.manufacturer, "Innovation LED Limited")
        XCTAssertEqual(OEMCode.innoId2.product, "Ether DMX 2")
        XCTAssertEqual(OEMCode.innoId2.dmxIn, 2)
        XCTAssertEqual(OEMCode.innoId2.dmxOut, 2)
        XCTAssertEqual(OEMCode.innoId2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.innoId2.isRDMSupported, true)

        // OemInnoId4 (0x1065)
        XCTAssertEqual(OEMCode.innoId4, 0x1065)
        XCTAssertEqual(OEMCode.innoId4.description, "OemInnoId4")
        XCTAssertEqual(OEMCode.innoId4.mnemonic, "OemInnoId4")
        XCTAssertEqual(OEMCode.innoId4.manufacturer, "Innovation LED Limited")
        XCTAssertEqual(OEMCode.innoId4.product, "Ether DMX 4")
        XCTAssertEqual(OEMCode.innoId4.dmxIn, 4)
        XCTAssertEqual(OEMCode.innoId4.dmxOut, 4)
        XCTAssertEqual(OEMCode.innoId4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.innoId4.isRDMSupported, true)

        // OemInnoIzs (0x1060)
        XCTAssertEqual(OEMCode.innoIzs, 0x1060)
        XCTAssertEqual(OEMCode.innoIzs.description, "OemInnoIzs")
        XCTAssertEqual(OEMCode.innoIzs.mnemonic, "OemInnoIzs")
        XCTAssertEqual(OEMCode.innoIzs.manufacturer, "Innovation LED Limited")
        XCTAssertEqual(OEMCode.innoIzs.product, "Ilumo Zoom Spot")
        XCTAssertEqual(OEMCode.innoIzs.dmxIn, 1)
        XCTAssertEqual(OEMCode.innoIzs.dmxOut, 1)
        XCTAssertEqual(OEMCode.innoIzs.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.innoIzs.isRDMSupported, true)

        // OemIntSysTechForc12 (0xDF2)
        XCTAssertEqual(OEMCode.intSysTechForc12, 0xDF2)
        XCTAssertEqual(OEMCode.intSysTechForc12.description, "OemIntSysTechForc12")
        XCTAssertEqual(OEMCode.intSysTechForc12.mnemonic, "OemIntSysTechForc12")
        XCTAssertEqual(OEMCode.intSysTechForc12.manufacturer, "Integrated System Technologies Ltd")
        XCTAssertEqual(OEMCode.intSysTechForc12.product, "iDrive Force 12")
        XCTAssertEqual(OEMCode.intSysTechForc12.dmxIn, 1)
        XCTAssertEqual(OEMCode.intSysTechForc12.dmxOut, 1)
        XCTAssertEqual(OEMCode.intSysTechForc12.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.intSysTechForc12.isRDMSupported, true)

        // OemIntSysTechThor36 (0xDF0)
        XCTAssertEqual(OEMCode.intSysTechThor36, 0xDF0)
        XCTAssertEqual(OEMCode.intSysTechThor36.description, "OemIntSysTechThor36")
        XCTAssertEqual(OEMCode.intSysTechThor36.mnemonic, "OemIntSysTechThor36")
        XCTAssertEqual(OEMCode.intSysTechThor36.manufacturer, "Integrated System Technologies Ltd")
        XCTAssertEqual(OEMCode.intSysTechThor36.product, "iDrive Thor 36")
        XCTAssertEqual(OEMCode.intSysTechThor36.dmxIn, 1)
        XCTAssertEqual(OEMCode.intSysTechThor36.dmxOut, 1)
        XCTAssertEqual(OEMCode.intSysTechThor36.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.intSysTechThor36.isRDMSupported, true)

        // OemIntSysTechThor8 (0xDF3)
        XCTAssertEqual(OEMCode.intSysTechThor8, 0xDF3)
        XCTAssertEqual(OEMCode.intSysTechThor8.description, "OemIntSysTechThor8")
        XCTAssertEqual(OEMCode.intSysTechThor8.mnemonic, "OemIntSysTechThor8")
        XCTAssertEqual(OEMCode.intSysTechThor8.manufacturer, "Integrated System Technologies Ltd")
        XCTAssertEqual(OEMCode.intSysTechThor8.product, "iDrive Thor 16")
        XCTAssertEqual(OEMCode.intSysTechThor8.dmxIn, 1)
        XCTAssertEqual(OEMCode.intSysTechThor8.dmxOut, 1)
        XCTAssertEqual(OEMCode.intSysTechThor8.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.intSysTechThor8.isRDMSupported, true)

        // OemIntSysTechWhKn36 (0xDF1)
        XCTAssertEqual(OEMCode.intSysTechWhKn36, 0xDF1)
        XCTAssertEqual(OEMCode.intSysTechWhKn36.description, "OemIntSysTechWhKn36")
        XCTAssertEqual(OEMCode.intSysTechWhKn36.mnemonic, "OemIntSysTechWhKn36")
        XCTAssertEqual(OEMCode.intSysTechWhKn36.manufacturer, "Integrated System Technologies Ltd")
        XCTAssertEqual(OEMCode.intSysTechWhKn36.product, "iDrive White Knight 36")
        XCTAssertEqual(OEMCode.intSysTechWhKn36.dmxIn, 1)
        XCTAssertEqual(OEMCode.intSysTechWhKn36.dmxOut, 1)
        XCTAssertEqual(OEMCode.intSysTechWhKn36.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.intSysTechWhKn36.isRDMSupported, true)

        // OemIntTechCueServ2 (0x12D0)
        XCTAssertEqual(OEMCode.intTechCueServ2, 0x12D0)
        XCTAssertEqual(OEMCode.intTechCueServ2.description, "OemIntTechCueServ2")
        XCTAssertEqual(OEMCode.intTechCueServ2.mnemonic, "OemIntTechCueServ2")
        XCTAssertEqual(OEMCode.intTechCueServ2.manufacturer, "Interactive Technologies Inc")
        XCTAssertEqual(OEMCode.intTechCueServ2.product, "CueServer 2")
        XCTAssertEqual(OEMCode.intTechCueServ2.dmxIn, 4)
        XCTAssertEqual(OEMCode.intTechCueServ2.dmxOut, 4)
        XCTAssertEqual(OEMCode.intTechCueServ2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.intTechCueServ2.isRDMSupported, true)

        // OemInventDigidotC4 (0xFD0)
        XCTAssertEqual(OEMCode.inventDigidotC4, 0xFD0)
        XCTAssertEqual(OEMCode.inventDigidotC4.description, "OemInventDigidotC4")
        XCTAssertEqual(OEMCode.inventDigidotC4.mnemonic, "OemInventDigidotC4")
        XCTAssertEqual(OEMCode.inventDigidotC4.manufacturer, "DiGidot")
        XCTAssertEqual(OEMCode.inventDigidotC4.product, "DiGidot C-4")
        XCTAssertEqual(OEMCode.inventDigidotC4.dmxIn, 4)
        XCTAssertEqual(OEMCode.inventDigidotC4.dmxOut, 4)
        XCTAssertEqual(OEMCode.inventDigidotC4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.inventDigidotC4.isRDMSupported, true)

        // OemIpDmxControlDx12 (0x1000)
        XCTAssertEqual(OEMCode.ipDmxControlDx12, 0x1000)
        XCTAssertEqual(OEMCode.ipDmxControlDx12.description, "OemIpDmxControlDx12")
        XCTAssertEqual(OEMCode.ipDmxControlDx12.mnemonic, "OemIpDmxControlDx12")
        XCTAssertEqual(OEMCode.ipDmxControlDx12.manufacturer, "IP-DMX Control")
        XCTAssertEqual(OEMCode.ipDmxControlDx12.product, "ip-dmx dx 1,2")
        XCTAssertEqual(OEMCode.ipDmxControlDx12.dmxIn, 0)
        XCTAssertEqual(OEMCode.ipDmxControlDx12.dmxOut, 1)
        XCTAssertEqual(OEMCode.ipDmxControlDx12.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ipDmxControlDx12.isRDMSupported, false)

        // OemIssSh1 (0x13D9)
        XCTAssertEqual(OEMCode.issSh1, 0x13D9)
        XCTAssertEqual(OEMCode.issSh1.description, "OemIssSh1")
        XCTAssertEqual(OEMCode.issSh1.mnemonic, "OemIssSh1")
        XCTAssertEqual(OEMCode.issSh1.manufacturer, "Integrated System Technologies Ltd")
        XCTAssertEqual(OEMCode.issSh1.product, "Sensor Hub")
        XCTAssertEqual(OEMCode.issSh1.dmxIn, 2)
        XCTAssertEqual(OEMCode.issSh1.dmxOut, 2)
        XCTAssertEqual(OEMCode.issSh1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.issSh1.isRDMSupported, true)

        // OemIstIdriveGateWay (0xF61)
        XCTAssertEqual(OEMCode.istIdriveGateWay, 0xF61)
        XCTAssertEqual(OEMCode.istIdriveGateWay.description, "OemIstIdriveGateWay")
        XCTAssertEqual(OEMCode.istIdriveGateWay.mnemonic, "OemIstIdriveGateWay")
        XCTAssertEqual(OEMCode.istIdriveGateWay.manufacturer, "Integrated System Technologies Ltd")
        XCTAssertEqual(OEMCode.istIdriveGateWay.product, "iDrive Gateway 12")
        XCTAssertEqual(OEMCode.istIdriveGateWay.dmxIn, 4)
        XCTAssertEqual(OEMCode.istIdriveGateWay.dmxOut, 4)
        XCTAssertEqual(OEMCode.istIdriveGateWay.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.istIdriveGateWay.isRDMSupported, true)

        // OemIstIdrivePixLed (0xF60)
        XCTAssertEqual(OEMCode.istIdrivePixLed, 0xF60)
        XCTAssertEqual(OEMCode.istIdrivePixLed.description, "OemIstIdrivePixLed")
        XCTAssertEqual(OEMCode.istIdrivePixLed.mnemonic, "OemIstIdrivePixLed")
        XCTAssertEqual(OEMCode.istIdrivePixLed.manufacturer, "Integrated System Technologies Ltd")
        XCTAssertEqual(OEMCode.istIdrivePixLed.product, "iDrive PixelLED")
        XCTAssertEqual(OEMCode.istIdrivePixLed.dmxIn, 4)
        XCTAssertEqual(OEMCode.istIdrivePixLed.dmxOut, 4)
        XCTAssertEqual(OEMCode.istIdrivePixLed.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.istIdrivePixLed.isRDMSupported, true)

        // OemIstImune (0x1090)
        XCTAssertEqual(OEMCode.istImune, 0x1090)
        XCTAssertEqual(OEMCode.istImune.description, "OemIstImune")
        XCTAssertEqual(OEMCode.istImune.mnemonic, "OemIstImune")
        XCTAssertEqual(OEMCode.istImune.manufacturer, "Integrated System Technologies Ltd")
        XCTAssertEqual(OEMCode.istImune.product, "iMune")
        XCTAssertEqual(OEMCode.istImune.dmxIn, 4)
        XCTAssertEqual(OEMCode.istImune.dmxOut, 4)
        XCTAssertEqual(OEMCode.istImune.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.istImune.isRDMSupported, false)

        // OemIstThor81 (0x288E)
        XCTAssertEqual(OEMCode.istThor81, 0x288E)
        XCTAssertEqual(OEMCode.istThor81.description, "OemIstThor81")
        XCTAssertEqual(OEMCode.istThor81.mnemonic, "OemIstThor81")
        XCTAssertEqual(OEMCode.istThor81.manufacturer, "Integrated System Technologies Limited")
        XCTAssertEqual(OEMCode.istThor81.product, "Thor 8")
        XCTAssertEqual(OEMCode.istThor81.dmxIn, 8)
        XCTAssertEqual(OEMCode.istThor81.dmxOut, 8)
        XCTAssertEqual(OEMCode.istThor81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.istThor81.isRDMSupported, true)

        // OemIstThor82 (0x288F)
        XCTAssertEqual(OEMCode.istThor82, 0x288F)
        XCTAssertEqual(OEMCode.istThor82.description, "OemIstThor82")
        XCTAssertEqual(OEMCode.istThor82.mnemonic, "OemIstThor82")
        XCTAssertEqual(OEMCode.istThor82.manufacturer, "Integrated System Technologies Limited")
        XCTAssertEqual(OEMCode.istThor82.product, "Thor8")
        XCTAssertEqual(OEMCode.istThor82.dmxIn, 8)
        XCTAssertEqual(OEMCode.istThor82.dmxOut, 8)
        XCTAssertEqual(OEMCode.istThor82.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.istThor82.isRDMSupported, true)

        // OemItXstream1 (0x2880)
        XCTAssertEqual(OEMCode.itXstream1, 0x2880)
        XCTAssertEqual(OEMCode.itXstream1.description, "OemItXstream1")
        XCTAssertEqual(OEMCode.itXstream1.mnemonic, "OemItXstream1")
        XCTAssertEqual(OEMCode.itXstream1.manufacturer, "Illum Technology, LLC")
        XCTAssertEqual(OEMCode.itXstream1.product, "Xstream")
        XCTAssertEqual(OEMCode.itXstream1.dmxIn, 0)
        XCTAssertEqual(OEMCode.itXstream1.dmxOut, 1)
        XCTAssertEqual(OEMCode.itXstream1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.itXstream1.isRDMSupported, true)

        // OemJiBou1 (0x2881)
        XCTAssertEqual(OEMCode.jiBou1, 0x2881)
        XCTAssertEqual(OEMCode.jiBou1.description, "OemJiBou1")
        XCTAssertEqual(OEMCode.jiBou1.mnemonic, "OemJiBou1")
        XCTAssertEqual(OEMCode.jiBou1.manufacturer, "Jjj")
        XCTAssertEqual(OEMCode.jiBou1.product, "Bou")
        XCTAssertEqual(OEMCode.jiBou1.dmxIn, 123)
        XCTAssertEqual(OEMCode.jiBou1.dmxOut, 256)
        XCTAssertEqual(OEMCode.jiBou1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jiBou1.isRDMSupported, true)

        // OemJmsAirDmx1 (0x2807)
        XCTAssertEqual(OEMCode.jmsAirDmx1, 0x2807)
        XCTAssertEqual(OEMCode.jmsAirDmx1.description, "OemJmsAirDmx1")
        XCTAssertEqual(OEMCode.jmsAirDmx1.mnemonic, "OemJmsAirDmx1")
        XCTAssertEqual(OEMCode.jmsAirDmx1.manufacturer, "JMS Pro Light")
        XCTAssertEqual(OEMCode.jmsAirDmx1.product, "AIR2DMX")
        XCTAssertEqual(OEMCode.jmsAirDmx1.dmxIn, 0)
        XCTAssertEqual(OEMCode.jmsAirDmx1.dmxOut, 1)
        XCTAssertEqual(OEMCode.jmsAirDmx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jmsAirDmx1.isRDMSupported, false)

        // OemJmsPlWanDmx1 (0x12C0)
        XCTAssertEqual(OEMCode.jmsPlWanDmx1, 0x12C0)
        XCTAssertEqual(OEMCode.jmsPlWanDmx1.description, "OemJmsPlWanDmx1")
        XCTAssertEqual(OEMCode.jmsPlWanDmx1.mnemonic, "OemJmsPlWanDmx1")
        XCTAssertEqual(OEMCode.jmsPlWanDmx1.manufacturer, "JMS Pro Light")
        XCTAssertEqual(OEMCode.jmsPlWanDmx1.product, "WLAN2DMX")
        XCTAssertEqual(OEMCode.jmsPlWanDmx1.dmxIn, 0)
        XCTAssertEqual(OEMCode.jmsPlWanDmx1.dmxOut, 1)
        XCTAssertEqual(OEMCode.jmsPlWanDmx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jmsPlWanDmx1.isRDMSupported, false)

        // OemJoshSysEcgDr2 (0xBC1)
        XCTAssertEqual(OEMCode.joshSysEcgDr2, 0xBC1)
        XCTAssertEqual(OEMCode.joshSysEcgDr2.description, "OemJoshSysEcgDr2")
        XCTAssertEqual(OEMCode.joshSysEcgDr2.mnemonic, "OemJoshSysEcgDr2")
        XCTAssertEqual(OEMCode.joshSysEcgDr2.manufacturer, "Joshua 1 Systems Inc")
        XCTAssertEqual(OEMCode.joshSysEcgDr2.product, "ECG-DR2")
        XCTAssertEqual(OEMCode.joshSysEcgDr2.dmxIn, 2)
        XCTAssertEqual(OEMCode.joshSysEcgDr2.dmxOut, 2)
        XCTAssertEqual(OEMCode.joshSysEcgDr2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.joshSysEcgDr2.isRDMSupported, false)

        // OemJoshSysEcgDr4 (0xBC2)
        XCTAssertEqual(OEMCode.joshSysEcgDr4, 0xBC2)
        XCTAssertEqual(OEMCode.joshSysEcgDr4.description, "OemJoshSysEcgDr4")
        XCTAssertEqual(OEMCode.joshSysEcgDr4.mnemonic, "OemJoshSysEcgDr4")
        XCTAssertEqual(OEMCode.joshSysEcgDr4.manufacturer, "Joshua 1 Systems Inc")
        XCTAssertEqual(OEMCode.joshSysEcgDr4.product, "ECG-DR4")
        XCTAssertEqual(OEMCode.joshSysEcgDr4.dmxIn, 4)
        XCTAssertEqual(OEMCode.joshSysEcgDr4.dmxOut, 4)
        XCTAssertEqual(OEMCode.joshSysEcgDr4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.joshSysEcgDr4.isRDMSupported, false)

        // OemJoshSysEcgM32mx (0xBC0)
        XCTAssertEqual(OEMCode.joshSysEcgM32mx, 0xBC0)
        XCTAssertEqual(OEMCode.joshSysEcgM32mx.description, "OemJoshSysEcgM32mx")
        XCTAssertEqual(OEMCode.joshSysEcgM32mx.mnemonic, "OemJoshSysEcgM32mx")
        XCTAssertEqual(OEMCode.joshSysEcgM32mx.manufacturer, "Joshua 1 Systems Inc")
        XCTAssertEqual(OEMCode.joshSysEcgM32mx.product, "ECG-M32MX")
        XCTAssertEqual(OEMCode.joshSysEcgM32mx.dmxIn, 4)
        XCTAssertEqual(OEMCode.joshSysEcgM32mx.dmxOut, 4)
        XCTAssertEqual(OEMCode.joshSysEcgM32mx.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.joshSysEcgM32mx.isRDMSupported, false)

        // OemJoshSysEcgPix8 (0xBC3)
        XCTAssertEqual(OEMCode.joshSysEcgPix8, 0xBC3)
        XCTAssertEqual(OEMCode.joshSysEcgPix8.description, "OemJoshSysEcgPix8")
        XCTAssertEqual(OEMCode.joshSysEcgPix8.mnemonic, "OemJoshSysEcgPix8")
        XCTAssertEqual(OEMCode.joshSysEcgPix8.manufacturer, "Joshua 1 Systems Inc")
        XCTAssertEqual(OEMCode.joshSysEcgPix8.product, "ECG-PIX8")
        XCTAssertEqual(OEMCode.joshSysEcgPix8.dmxIn, 8)
        XCTAssertEqual(OEMCode.joshSysEcgPix8.dmxOut, 0)
        XCTAssertEqual(OEMCode.joshSysEcgPix8.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.joshSysEcgPix8.isRDMSupported, false)

        // OemJoshSysEcgProD1 (0xBC4)
        XCTAssertEqual(OEMCode.joshSysEcgProD1, 0xBC4)
        XCTAssertEqual(OEMCode.joshSysEcgProD1.description, "OemJoshSysEcgProD1")
        XCTAssertEqual(OEMCode.joshSysEcgProD1.mnemonic, "OemJoshSysEcgProD1")
        XCTAssertEqual(OEMCode.joshSysEcgProD1.manufacturer, "Joshua 1 Systems Inc")
        XCTAssertEqual(OEMCode.joshSysEcgProD1.product, "ECGPro-D1")
        XCTAssertEqual(OEMCode.joshSysEcgProD1.dmxIn, 1)
        XCTAssertEqual(OEMCode.joshSysEcgProD1.dmxOut, 1)
        XCTAssertEqual(OEMCode.joshSysEcgProD1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.joshSysEcgProD1.isRDMSupported, true)

        // OemJoshSysEcgProD4 (0xBC5)
        XCTAssertEqual(OEMCode.joshSysEcgProD4, 0xBC5)
        XCTAssertEqual(OEMCode.joshSysEcgProD4.description, "OemJoshSysEcgProD4")
        XCTAssertEqual(OEMCode.joshSysEcgProD4.mnemonic, "OemJoshSysEcgProD4")
        XCTAssertEqual(OEMCode.joshSysEcgProD4.manufacturer, "Joshua 1 Systems Inc")
        XCTAssertEqual(OEMCode.joshSysEcgProD4.product, "ECGPro-D4")
        XCTAssertEqual(OEMCode.joshSysEcgProD4.dmxIn, 4)
        XCTAssertEqual(OEMCode.joshSysEcgProD4.dmxOut, 4)
        XCTAssertEqual(OEMCode.joshSysEcgProD4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.joshSysEcgProD4.isRDMSupported, true)

        // OemJoshSysEcgProD8 (0xBC6)
        XCTAssertEqual(OEMCode.joshSysEcgProD8, 0xBC6)
        XCTAssertEqual(OEMCode.joshSysEcgProD8.description, "OemJoshSysEcgProD8")
        XCTAssertEqual(OEMCode.joshSysEcgProD8.mnemonic, "OemJoshSysEcgProD8")
        XCTAssertEqual(OEMCode.joshSysEcgProD8.manufacturer, "Joshua 1 Systems Inc")
        XCTAssertEqual(OEMCode.joshSysEcgProD8.product, "ECGPro-D8")
        XCTAssertEqual(OEMCode.joshSysEcgProD8.dmxIn, 8)
        XCTAssertEqual(OEMCode.joshSysEcgProD8.dmxOut, 8)
        XCTAssertEqual(OEMCode.joshSysEcgProD8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.joshSysEcgProD8.isRDMSupported, true)

        // OemJpk1 (0x960)
        XCTAssertEqual(OEMCode.jpk1, 0x960)
        XCTAssertEqual(OEMCode.jpk1.description, "OemJpk1")
        XCTAssertEqual(OEMCode.jpk1.mnemonic, "OemJpk1")
        XCTAssertEqual(OEMCode.jpk1.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk1.product, "OemJpk1")
        XCTAssertEqual(OEMCode.jpk1.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk1.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk1.isRDMSupported, true)

        // OemJpk10 (0x969)
        XCTAssertEqual(OEMCode.jpk10, 0x969)
        XCTAssertEqual(OEMCode.jpk10.description, "OemJpk10")
        XCTAssertEqual(OEMCode.jpk10.mnemonic, "OemJpk10")
        XCTAssertEqual(OEMCode.jpk10.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk10.product, "OemJpk10")
        XCTAssertEqual(OEMCode.jpk10.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk10.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk10.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk10.isRDMSupported, true)

        // OemJpk11 (0x96A)
        XCTAssertEqual(OEMCode.jpk11, 0x96A)
        XCTAssertEqual(OEMCode.jpk11.description, "OemJpk11")
        XCTAssertEqual(OEMCode.jpk11.mnemonic, "OemJpk11")
        XCTAssertEqual(OEMCode.jpk11.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk11.product, "OemJpk11")
        XCTAssertEqual(OEMCode.jpk11.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk11.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk11.isRDMSupported, true)

        // OemJpk12 (0x96B)
        XCTAssertEqual(OEMCode.jpk12, 0x96B)
        XCTAssertEqual(OEMCode.jpk12.description, "OemJpk12")
        XCTAssertEqual(OEMCode.jpk12.mnemonic, "OemJpk12")
        XCTAssertEqual(OEMCode.jpk12.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk12.product, "OemJpk12")
        XCTAssertEqual(OEMCode.jpk12.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk12.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk12.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk12.isRDMSupported, true)

        // OemJpk13 (0x96C)
        XCTAssertEqual(OEMCode.jpk13, 0x96C)
        XCTAssertEqual(OEMCode.jpk13.description, "OemJpk13")
        XCTAssertEqual(OEMCode.jpk13.mnemonic, "OemJpk13")
        XCTAssertEqual(OEMCode.jpk13.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk13.product, "OemJpk13")
        XCTAssertEqual(OEMCode.jpk13.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk13.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk13.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk13.isRDMSupported, true)

        // OemJpk14 (0x96D)
        XCTAssertEqual(OEMCode.jpk14, 0x96D)
        XCTAssertEqual(OEMCode.jpk14.description, "OemJpk14")
        XCTAssertEqual(OEMCode.jpk14.mnemonic, "OemJpk14")
        XCTAssertEqual(OEMCode.jpk14.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk14.product, "OemJpk14")
        XCTAssertEqual(OEMCode.jpk14.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk14.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk14.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk14.isRDMSupported, true)

        // OemJpk15 (0x96E)
        XCTAssertEqual(OEMCode.jpk15, 0x96E)
        XCTAssertEqual(OEMCode.jpk15.description, "OemJpk15")
        XCTAssertEqual(OEMCode.jpk15.mnemonic, "OemJpk15")
        XCTAssertEqual(OEMCode.jpk15.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk15.product, "OemJpk15")
        XCTAssertEqual(OEMCode.jpk15.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk15.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk15.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk15.isRDMSupported, true)

        // OemJpk16 (0x96F)
        XCTAssertEqual(OEMCode.jpk16, 0x96F)
        XCTAssertEqual(OEMCode.jpk16.description, "OemJpk16")
        XCTAssertEqual(OEMCode.jpk16.mnemonic, "OemJpk16")
        XCTAssertEqual(OEMCode.jpk16.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk16.product, "OemJpk16")
        XCTAssertEqual(OEMCode.jpk16.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk16.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk16.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk16.isRDMSupported, true)

        // OemJpk2 (0x961)
        XCTAssertEqual(OEMCode.jpk2, 0x961)
        XCTAssertEqual(OEMCode.jpk2.description, "OemJpk2")
        XCTAssertEqual(OEMCode.jpk2.mnemonic, "OemJpk2")
        XCTAssertEqual(OEMCode.jpk2.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk2.product, "OemJpk2")
        XCTAssertEqual(OEMCode.jpk2.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk2.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk2.isRDMSupported, true)

        // OemJpk3 (0x962)
        XCTAssertEqual(OEMCode.jpk3, 0x962)
        XCTAssertEqual(OEMCode.jpk3.description, "OemJpk3")
        XCTAssertEqual(OEMCode.jpk3.mnemonic, "OemJpk3")
        XCTAssertEqual(OEMCode.jpk3.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk3.product, "OemJpk3")
        XCTAssertEqual(OEMCode.jpk3.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk3.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk3.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk3.isRDMSupported, true)

        // OemJpk4 (0x963)
        XCTAssertEqual(OEMCode.jpk4, 0x963)
        XCTAssertEqual(OEMCode.jpk4.description, "OemJpk4")
        XCTAssertEqual(OEMCode.jpk4.mnemonic, "OemJpk4")
        XCTAssertEqual(OEMCode.jpk4.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk4.product, "OemJpk4")
        XCTAssertEqual(OEMCode.jpk4.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk4.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk4.isRDMSupported, true)

        // OemJpk5 (0x964)
        XCTAssertEqual(OEMCode.jpk5, 0x964)
        XCTAssertEqual(OEMCode.jpk5.description, "OemJpk5")
        XCTAssertEqual(OEMCode.jpk5.mnemonic, "OemJpk5")
        XCTAssertEqual(OEMCode.jpk5.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk5.product, "OemJpk5")
        XCTAssertEqual(OEMCode.jpk5.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk5.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk5.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk5.isRDMSupported, true)

        // OemJpk6 (0x965)
        XCTAssertEqual(OEMCode.jpk6, 0x965)
        XCTAssertEqual(OEMCode.jpk6.description, "OemJpk6")
        XCTAssertEqual(OEMCode.jpk6.mnemonic, "OemJpk6")
        XCTAssertEqual(OEMCode.jpk6.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk6.product, "OemJpk6")
        XCTAssertEqual(OEMCode.jpk6.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk6.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk6.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk6.isRDMSupported, true)

        // OemJpk7 (0x966)
        XCTAssertEqual(OEMCode.jpk7, 0x966)
        XCTAssertEqual(OEMCode.jpk7.description, "OemJpk7")
        XCTAssertEqual(OEMCode.jpk7.mnemonic, "OemJpk7")
        XCTAssertEqual(OEMCode.jpk7.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk7.product, "OemJpk7")
        XCTAssertEqual(OEMCode.jpk7.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk7.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk7.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk7.isRDMSupported, true)

        // OemJpk8 (0x967)
        XCTAssertEqual(OEMCode.jpk8, 0x967)
        XCTAssertEqual(OEMCode.jpk8.description, "OemJpk8")
        XCTAssertEqual(OEMCode.jpk8.mnemonic, "OemJpk8")
        XCTAssertEqual(OEMCode.jpk8.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk8.product, "OemJpk8")
        XCTAssertEqual(OEMCode.jpk8.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk8.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk8.isRDMSupported, true)

        // OemJpk9 (0x968)
        XCTAssertEqual(OEMCode.jpk9, 0x968)
        XCTAssertEqual(OEMCode.jpk9.description, "OemJpk9")
        XCTAssertEqual(OEMCode.jpk9.mnemonic, "OemJpk9")
        XCTAssertEqual(OEMCode.jpk9.manufacturer, "JPK Systems Limited")
        XCTAssertEqual(OEMCode.jpk9.product, "OemJpk9")
        XCTAssertEqual(OEMCode.jpk9.dmxIn, 1)
        XCTAssertEqual(OEMCode.jpk9.dmxOut, 1)
        XCTAssertEqual(OEMCode.jpk9.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jpk9.isRDMSupported, true)

        // OemJscAg1p (0x8F0)
        XCTAssertEqual(OEMCode.jscAg1p, 0x8F0)
        XCTAssertEqual(OEMCode.jscAg1p.description, "OemJscAg1p")
        XCTAssertEqual(OEMCode.jscAg1p.mnemonic, "OemJscAg1p")
        XCTAssertEqual(OEMCode.jscAg1p.manufacturer, "JSC")
        XCTAssertEqual(OEMCode.jscAg1p.product, "ArtGate Pro 1P")
        XCTAssertEqual(OEMCode.jscAg1p.dmxIn, 1)
        XCTAssertEqual(OEMCode.jscAg1p.dmxOut, 1)
        XCTAssertEqual(OEMCode.jscAg1p.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jscAg1p.isRDMSupported, false)

        // OemJscAg2p (0x8F1)
        XCTAssertEqual(OEMCode.jscAg2p, 0x8F1)
        XCTAssertEqual(OEMCode.jscAg2p.description, "OemJscAg2p")
        XCTAssertEqual(OEMCode.jscAg2p.mnemonic, "OemJscAg2p")
        XCTAssertEqual(OEMCode.jscAg2p.manufacturer, "JSC")
        XCTAssertEqual(OEMCode.jscAg2p.product, "ArtGate Pro 2P")
        XCTAssertEqual(OEMCode.jscAg2p.dmxIn, 2)
        XCTAssertEqual(OEMCode.jscAg2p.dmxOut, 2)
        XCTAssertEqual(OEMCode.jscAg2p.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jscAg2p.isRDMSupported, false)

        // OemJscAg4p (0x8F2)
        XCTAssertEqual(OEMCode.jscAg4p, 0x8F2)
        XCTAssertEqual(OEMCode.jscAg4p.description, "OemJscAg4p")
        XCTAssertEqual(OEMCode.jscAg4p.mnemonic, "OemJscAg4p")
        XCTAssertEqual(OEMCode.jscAg4p.manufacturer, "JSC")
        XCTAssertEqual(OEMCode.jscAg4p.product, "ArtGate Pro 4P")
        XCTAssertEqual(OEMCode.jscAg4p.dmxIn, 4)
        XCTAssertEqual(OEMCode.jscAg4p.dmxOut, 4)
        XCTAssertEqual(OEMCode.jscAg4p.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jscAg4p.isRDMSupported, false)

        // OemJumptronicProtocolController1 (0x28DB)
        XCTAssertEqual(OEMCode.jumptronicProtocolController1, 0x28DB)
        XCTAssertEqual(OEMCode.jumptronicProtocolController1.description, "OemJumptronicProtocolController1")
        XCTAssertEqual(OEMCode.jumptronicProtocolController1.mnemonic, "OemJumptronicProtocolController1")
        XCTAssertEqual(OEMCode.jumptronicProtocolController1.manufacturer, "Jumptronic GmbH")
        XCTAssertEqual(OEMCode.jumptronicProtocolController1.product, "ProtocolController")
        XCTAssertEqual(OEMCode.jumptronicProtocolController1.dmxIn, 0)
        XCTAssertEqual(OEMCode.jumptronicProtocolController1.dmxOut, 8)
        XCTAssertEqual(OEMCode.jumptronicProtocolController1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.jumptronicProtocolController1.isRDMSupported, true)

        // OemKdRJNet11 (0x287F)
        XCTAssertEqual(OEMCode.kdRJNet11, 0x287F)
        XCTAssertEqual(OEMCode.kdRJNet11.description, "OemKdRJNet11")
        XCTAssertEqual(OEMCode.kdRJNet11.mnemonic, "OemKdRJNet11")
        XCTAssertEqual(OEMCode.kdRJNet11.manufacturer, "Key Delfin")
        XCTAssertEqual(OEMCode.kdRJNet11.product, "RJ-Net 1")
        XCTAssertEqual(OEMCode.kdRJNet11.dmxIn, 0)
        XCTAssertEqual(OEMCode.kdRJNet11.dmxOut, 1)
        XCTAssertEqual(OEMCode.kdRJNet11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.kdRJNet11.isRDMSupported, false)

        // OemKdWINet11 (0x287E)
        XCTAssertEqual(OEMCode.kdWINet11, 0x287E)
        XCTAssertEqual(OEMCode.kdWINet11.description, "OemKdWINet11")
        XCTAssertEqual(OEMCode.kdWINet11.mnemonic, "OemKdWINet11")
        XCTAssertEqual(OEMCode.kdWINet11.manufacturer, "Key Delfin")
        XCTAssertEqual(OEMCode.kdWINet11.product, "WI-Net 1")
        XCTAssertEqual(OEMCode.kdWINet11.dmxIn, 0)
        XCTAssertEqual(OEMCode.kdWINet11.dmxOut, 1)
        XCTAssertEqual(OEMCode.kdWINet11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.kdWINet11.isRDMSupported, false)

        // OemKiboNode16 (0xD50)
        XCTAssertEqual(OEMCode.kiboNode16, 0xD50)
        XCTAssertEqual(OEMCode.kiboNode16.description, "OemKiboNode16")
        XCTAssertEqual(OEMCode.kiboNode16.mnemonic, "OemKiboNode16")
        XCTAssertEqual(OEMCode.kiboNode16.manufacturer, "KiboWorks")
        XCTAssertEqual(OEMCode.kiboNode16.product, "KiboNode 16 Port")
        XCTAssertEqual(OEMCode.kiboNode16.dmxIn, 0)
        XCTAssertEqual(OEMCode.kiboNode16.dmxOut, 4)
        XCTAssertEqual(OEMCode.kiboNode16.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.kiboNode16.isRDMSupported, true)

        // OemKirronIdycoLed (0xF20)
        XCTAssertEqual(OEMCode.kirronIdycoLed, 0xF20)
        XCTAssertEqual(OEMCode.kirronIdycoLed.description, "OemKirronIdycoLed")
        XCTAssertEqual(OEMCode.kirronIdycoLed.mnemonic, "OemKirronIdycoLed")
        XCTAssertEqual(OEMCode.kirronIdycoLed.manufacturer, "Kirron light components")
        XCTAssertEqual(OEMCode.kirronIdycoLed.product, "IDycoLED Control")
        XCTAssertEqual(OEMCode.kirronIdycoLed.dmxIn, 0)
        XCTAssertEqual(OEMCode.kirronIdycoLed.dmxOut, 1)
        XCTAssertEqual(OEMCode.kirronIdycoLed.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.kirronIdycoLed.isRDMSupported, false)

        // OemKissBox (0x370)
        XCTAssertEqual(OEMCode.kissBox, 0x370)
        XCTAssertEqual(OEMCode.kissBox.description, "OemKissBox")
        XCTAssertEqual(OEMCode.kissBox.mnemonic, "OemKissBox")
        XCTAssertEqual(OEMCode.kissBox.manufacturer, "Kiss-Box")
        XCTAssertEqual(OEMCode.kissBox.product, "DMX Box")
        XCTAssertEqual(OEMCode.kissBox.dmxIn, 1)
        XCTAssertEqual(OEMCode.kissBox.dmxOut, 1)
        XCTAssertEqual(OEMCode.kissBox.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.kissBox.isRDMSupported, true)

        // OemKontRdmassistant1 (0x288D)
        XCTAssertEqual(OEMCode.kontRdmassistant1, 0x288D)
        XCTAssertEqual(OEMCode.kontRdmassistant1.description, "OemKontRdmassistant1")
        XCTAssertEqual(OEMCode.kontRdmassistant1.mnemonic, "OemKontRdmassistant1")
        XCTAssertEqual(OEMCode.kontRdmassistant1.manufacturer, "Kontrolcla Show Control S. L.")
        XCTAssertEqual(OEMCode.kontRdmassistant1.product, "Rdm assistant")
        XCTAssertEqual(OEMCode.kontRdmassistant1.dmxIn, 2)
        XCTAssertEqual(OEMCode.kontRdmassistant1.dmxOut, 2)
        XCTAssertEqual(OEMCode.kontRdmassistant1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.kontRdmassistant1.isRDMSupported, true)

        // OemKuwatecDiaHeart1 (0x10F0)
        XCTAssertEqual(OEMCode.kuwatecDiaHeart1, 0x10F0)
        XCTAssertEqual(OEMCode.kuwatecDiaHeart1.description, "OemKuwatecDiaHeart1")
        XCTAssertEqual(OEMCode.kuwatecDiaHeart1.mnemonic, "OemKuwatecDiaHeart1")
        XCTAssertEqual(OEMCode.kuwatecDiaHeart1.manufacturer, "kuwatec Inc.")
        XCTAssertEqual(OEMCode.kuwatecDiaHeart1.product, "DIAheart")
        XCTAssertEqual(OEMCode.kuwatecDiaHeart1.dmxIn, 0)
        XCTAssertEqual(OEMCode.kuwatecDiaHeart1.dmxOut, 0)
        XCTAssertEqual(OEMCode.kuwatecDiaHeart1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.kuwatecDiaHeart1.isRDMSupported, false)

        // OemKuwatEx81 (0x282C)
        XCTAssertEqual(OEMCode.kuwatEx81, 0x282C)
        XCTAssertEqual(OEMCode.kuwatEx81.description, "OemKuwatEx81")
        XCTAssertEqual(OEMCode.kuwatEx81.mnemonic, "OemKuwatEx81")
        XCTAssertEqual(OEMCode.kuwatEx81.manufacturer, "kuwatec, Inc.")
        XCTAssertEqual(OEMCode.kuwatEx81.product, "Ex8")
        XCTAssertEqual(OEMCode.kuwatEx81.dmxIn, 8)
        XCTAssertEqual(OEMCode.kuwatEx81.dmxOut, 8)
        XCTAssertEqual(OEMCode.kuwatEx81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.kuwatEx81.isRDMSupported, true)

        // OemKuwEtherMx1 (0xF50)
        XCTAssertEqual(OEMCode.kuwEtherMx1, 0xF50)
        XCTAssertEqual(OEMCode.kuwEtherMx1.description, "OemKuwEtherMx1")
        XCTAssertEqual(OEMCode.kuwEtherMx1.mnemonic, "OemKuwEtherMx1")
        XCTAssertEqual(OEMCode.kuwEtherMx1.manufacturer, "kuwatec Inc.")
        XCTAssertEqual(OEMCode.kuwEtherMx1.product, "EtherMX")
        XCTAssertEqual(OEMCode.kuwEtherMx1.dmxIn, 4)
        XCTAssertEqual(OEMCode.kuwEtherMx1.dmxOut, 4)
        XCTAssertEqual(OEMCode.kuwEtherMx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.kuwEtherMx1.isRDMSupported, true)

        // OemKuxcnaWiD1 (0x28AB)
        XCTAssertEqual(OEMCode.kuxcnaWiD1, 0x28AB)
        XCTAssertEqual(OEMCode.kuxcnaWiD1.description, "OemKuxcnaWiD1")
        XCTAssertEqual(OEMCode.kuxcnaWiD1.mnemonic, "OemKuxcnaWiD1")
        XCTAssertEqual(OEMCode.kuxcnaWiD1.manufacturer, "LuxCena Iumina")
        XCTAssertEqual(OEMCode.kuxcnaWiD1.product, "LuxCena WiFi DMX")
        XCTAssertEqual(OEMCode.kuxcnaWiD1.dmxIn, 1)
        XCTAssertEqual(OEMCode.kuxcnaWiD1.dmxOut, 1)
        XCTAssertEqual(OEMCode.kuxcnaWiD1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.kuxcnaWiD1.isRDMSupported, false)

        // OemLasAnDspIp (0x891)
        XCTAssertEqual(OEMCode.lasAnDspIp, 0x891)
        XCTAssertEqual(OEMCode.lasAnDspIp.description, "OemLasAnDspIp")
        XCTAssertEqual(OEMCode.lasAnDspIp.mnemonic, "OemLasAnDspIp")
        XCTAssertEqual(OEMCode.lasAnDspIp.manufacturer, "LaserAnimation Sollinger GmbH")
        XCTAssertEqual(OEMCode.lasAnDspIp.product, "Lasergraph DSP")
        XCTAssertEqual(OEMCode.lasAnDspIp.dmxIn, 1)
        XCTAssertEqual(OEMCode.lasAnDspIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.lasAnDspIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lasAnDspIp.isRDMSupported, false)

        // OemLasAnDspOp (0x892)
        XCTAssertEqual(OEMCode.lasAnDspOp, 0x892)
        XCTAssertEqual(OEMCode.lasAnDspOp.description, "OemLasAnDspOp")
        XCTAssertEqual(OEMCode.lasAnDspOp.mnemonic, "OemLasAnDspOp")
        XCTAssertEqual(OEMCode.lasAnDspOp.manufacturer, "LaserAnimation Sollinger GmbH")
        XCTAssertEqual(OEMCode.lasAnDspOp.product, "Lasergraph DSP")
        XCTAssertEqual(OEMCode.lasAnDspOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.lasAnDspOp.dmxOut, 1)
        XCTAssertEqual(OEMCode.lasAnDspOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lasAnDspOp.isRDMSupported, false)

        // OemLbLce (0xA21)
        XCTAssertEqual(OEMCode.lbLce, 0xA21)
        XCTAssertEqual(OEMCode.lbLce.description, "OemLbLce")
        XCTAssertEqual(OEMCode.lbLce.mnemonic, "OemLbLce")
        XCTAssertEqual(OEMCode.lbLce.manufacturer, "CDS")
        XCTAssertEqual(OEMCode.lbLce.product, "LanBox-LCE")
        XCTAssertEqual(OEMCode.lbLce.dmxIn, 2)
        XCTAssertEqual(OEMCode.lbLce.dmxOut, 1)
        XCTAssertEqual(OEMCode.lbLce.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lbLce.isRDMSupported, false)

        // OemLbLcp (0xA22)
        XCTAssertEqual(OEMCode.lbLcp, 0xA22)
        XCTAssertEqual(OEMCode.lbLcp.description, "OemLbLcp")
        XCTAssertEqual(OEMCode.lbLcp.mnemonic, "OemLbLcp")
        XCTAssertEqual(OEMCode.lbLcp.manufacturer, "CDS")
        XCTAssertEqual(OEMCode.lbLcp.product, "LanBox-LCP")
        XCTAssertEqual(OEMCode.lbLcp.dmxIn, 2)
        XCTAssertEqual(OEMCode.lbLcp.dmxOut, 1)
        XCTAssertEqual(OEMCode.lbLcp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lbLcp.isRDMSupported, false)

        // OemLbLcx (0xA20)
        XCTAssertEqual(OEMCode.lbLcx, 0xA20)
        XCTAssertEqual(OEMCode.lbLcx.description, "OemLbLcx")
        XCTAssertEqual(OEMCode.lbLcx.mnemonic, "OemLbLcx")
        XCTAssertEqual(OEMCode.lbLcx.manufacturer, "CDS")
        XCTAssertEqual(OEMCode.lbLcx.product, "LanBox-LCX")
        XCTAssertEqual(OEMCode.lbLcx.dmxIn, 4)
        XCTAssertEqual(OEMCode.lbLcx.dmxOut, 1)
        XCTAssertEqual(OEMCode.lbLcx.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lbLcx.isRDMSupported, false)

        // OemLedCoLdp12 (0x2841)
        XCTAssertEqual(OEMCode.ledCoLdp12, 0x2841)
        XCTAssertEqual(OEMCode.ledCoLdp12.description, "OemLedCoLdp12")
        XCTAssertEqual(OEMCode.ledCoLdp12.mnemonic, "OemLedCoLdp12")
        XCTAssertEqual(OEMCode.ledCoLdp12.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledCoLdp12.product, "LED PIXEL DIRECTOR 12")
        XCTAssertEqual(OEMCode.ledCoLdp12.dmxIn, 0)
        XCTAssertEqual(OEMCode.ledCoLdp12.dmxOut, 12)
        XCTAssertEqual(OEMCode.ledCoLdp12.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ledCoLdp12.isRDMSupported, false)

        // OemLedCoLpd16 (0x2840)
        XCTAssertEqual(OEMCode.ledCoLpd16, 0x2840)
        XCTAssertEqual(OEMCode.ledCoLpd16.description, "OemLedCoLpd16")
        XCTAssertEqual(OEMCode.ledCoLpd16.mnemonic, "OemLedCoLpd16")
        XCTAssertEqual(OEMCode.ledCoLpd16.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledCoLpd16.product, "LED PIXEL DIRECTOR 16")
        XCTAssertEqual(OEMCode.ledCoLpd16.dmxIn, 0)
        XCTAssertEqual(OEMCode.ledCoLpd16.dmxOut, 16)
        XCTAssertEqual(OEMCode.ledCoLpd16.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ledCoLpd16.isRDMSupported, false)

        // OemLedCoLpd24 (0x283F)
        XCTAssertEqual(OEMCode.ledCoLpd24, 0x283F)
        XCTAssertEqual(OEMCode.ledCoLpd24.description, "OemLedCoLpd24")
        XCTAssertEqual(OEMCode.ledCoLpd24.mnemonic, "OemLedCoLpd24")
        XCTAssertEqual(OEMCode.ledCoLpd24.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledCoLpd24.product, "LED PIXEL DIRECTOR 24")
        XCTAssertEqual(OEMCode.ledCoLpd24.dmxIn, 0)
        XCTAssertEqual(OEMCode.ledCoLpd24.dmxOut, 24)
        XCTAssertEqual(OEMCode.ledCoLpd24.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ledCoLpd24.isRDMSupported, false)

        // OemLedConceptLpd4 (0x2829)
        XCTAssertEqual(OEMCode.ledConceptLpd4, 0x2829)
        XCTAssertEqual(OEMCode.ledConceptLpd4.description, "OemLedConceptLpd4")
        XCTAssertEqual(OEMCode.ledConceptLpd4.mnemonic, "OemLedConceptLpd4")
        XCTAssertEqual(OEMCode.ledConceptLpd4.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledConceptLpd4.product, "LED Pixel Director 4")
        XCTAssertEqual(OEMCode.ledConceptLpd4.dmxIn, 0)
        XCTAssertEqual(OEMCode.ledConceptLpd4.dmxOut, 4)
        XCTAssertEqual(OEMCode.ledConceptLpd4.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ledConceptLpd4.isRDMSupported, false)

        // OemLedConceptLpd8 (0x282A)
        XCTAssertEqual(OEMCode.ledConceptLpd8, 0x282A)
        XCTAssertEqual(OEMCode.ledConceptLpd8.description, "OemLedConceptLpd8")
        XCTAssertEqual(OEMCode.ledConceptLpd8.mnemonic, "OemLedConceptLpd8")
        XCTAssertEqual(OEMCode.ledConceptLpd8.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledConceptLpd8.product, "LED Pixel Director 8")
        XCTAssertEqual(OEMCode.ledConceptLpd8.dmxIn, 0)
        XCTAssertEqual(OEMCode.ledConceptLpd8.dmxOut, 8)
        XCTAssertEqual(OEMCode.ledConceptLpd8.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ledConceptLpd8.isRDMSupported, false)

        // OemLedConSm04 (0x286C)
        XCTAssertEqual(OEMCode.ledConSm04, 0x286C)
        XCTAssertEqual(OEMCode.ledConSm04.description, "OemLedConSm04")
        XCTAssertEqual(OEMCode.ledConSm04.mnemonic, "OemLedConSm04")
        XCTAssertEqual(OEMCode.ledConSm04.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledConSm04.product, "SWITCHMAN 0-4")
        XCTAssertEqual(OEMCode.ledConSm04.dmxIn, 4)
        XCTAssertEqual(OEMCode.ledConSm04.dmxOut, 0)
        XCTAssertEqual(OEMCode.ledConSm04.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledConSm04.isRDMSupported, false)

        // OemLedConSm1 (0x2872)
        XCTAssertEqual(OEMCode.ledConSm1, 0x2872)
        XCTAssertEqual(OEMCode.ledConSm1.description, "OemLedConSm1")
        XCTAssertEqual(OEMCode.ledConSm1.mnemonic, "OemLedConSm1")
        XCTAssertEqual(OEMCode.ledConSm1.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledConSm1.product, "SWITCHMAN 1")
        XCTAssertEqual(OEMCode.ledConSm1.dmxIn, 0)
        XCTAssertEqual(OEMCode.ledConSm1.dmxOut, 1)
        XCTAssertEqual(OEMCode.ledConSm1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledConSm1.isRDMSupported, false)

        // OemLedConSm11 (0x286E)
        XCTAssertEqual(OEMCode.ledConSm11, 0x286E)
        XCTAssertEqual(OEMCode.ledConSm11.description, "OemLedConSm11")
        XCTAssertEqual(OEMCode.ledConSm11.mnemonic, "OemLedConSm11")
        XCTAssertEqual(OEMCode.ledConSm11.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledConSm11.product, "SWITCHMAN 1-1")
        XCTAssertEqual(OEMCode.ledConSm11.dmxIn, 1)
        XCTAssertEqual(OEMCode.ledConSm11.dmxOut, 1)
        XCTAssertEqual(OEMCode.ledConSm11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledConSm11.isRDMSupported, false)

        // OemLedConSm2 (0x2870)
        XCTAssertEqual(OEMCode.ledConSm2, 0x2870)
        XCTAssertEqual(OEMCode.ledConSm2.description, "OemLedConSm2")
        XCTAssertEqual(OEMCode.ledConSm2.mnemonic, "OemLedConSm2")
        XCTAssertEqual(OEMCode.ledConSm2.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledConSm2.product, "SWITCHMAN 2")
        XCTAssertEqual(OEMCode.ledConSm2.dmxIn, 0)
        XCTAssertEqual(OEMCode.ledConSm2.dmxOut, 2)
        XCTAssertEqual(OEMCode.ledConSm2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledConSm2.isRDMSupported, false)

        // OemLedConSm21 (0x286A)
        XCTAssertEqual(OEMCode.ledConSm21, 0x286A)
        XCTAssertEqual(OEMCode.ledConSm21.description, "OemLedConSm21")
        XCTAssertEqual(OEMCode.ledConSm21.mnemonic, "OemLedConSm21")
        XCTAssertEqual(OEMCode.ledConSm21.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledConSm21.product, "SWITCHMAN 2-1")
        XCTAssertEqual(OEMCode.ledConSm21.dmxIn, 1)
        XCTAssertEqual(OEMCode.ledConSm21.dmxOut, 2)
        XCTAssertEqual(OEMCode.ledConSm21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledConSm21.isRDMSupported, false)

        // OemLedConSm2a (0x2871)
        XCTAssertEqual(OEMCode.ledConSm2a, 0x2871)
        XCTAssertEqual(OEMCode.ledConSm2a.description, "OemLedConSm2a")
        XCTAssertEqual(OEMCode.ledConSm2a.mnemonic, "OemLedConSm2a")
        XCTAssertEqual(OEMCode.ledConSm2a.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledConSm2a.product, "SWITCHMAN 2a")
        XCTAssertEqual(OEMCode.ledConSm2a.dmxIn, 0)
        XCTAssertEqual(OEMCode.ledConSm2a.dmxOut, 2)
        XCTAssertEqual(OEMCode.ledConSm2a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledConSm2a.isRDMSupported, false)

        // OemLedConSm31 (0x286D)
        XCTAssertEqual(OEMCode.ledConSm31, 0x286D)
        XCTAssertEqual(OEMCode.ledConSm31.description, "OemLedConSm31")
        XCTAssertEqual(OEMCode.ledConSm31.mnemonic, "OemLedConSm31")
        XCTAssertEqual(OEMCode.ledConSm31.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledConSm31.product, "SWITCHMAN 3-1")
        XCTAssertEqual(OEMCode.ledConSm31.dmxIn, 1)
        XCTAssertEqual(OEMCode.ledConSm31.dmxOut, 3)
        XCTAssertEqual(OEMCode.ledConSm31.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledConSm31.isRDMSupported, false)

        // OemLedConSm4 (0x2873)
        XCTAssertEqual(OEMCode.ledConSm4, 0x2873)
        XCTAssertEqual(OEMCode.ledConSm4.description, "OemLedConSm4")
        XCTAssertEqual(OEMCode.ledConSm4.mnemonic, "OemLedConSm4")
        XCTAssertEqual(OEMCode.ledConSm4.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledConSm4.product, "SWITCHMAN 4")
        XCTAssertEqual(OEMCode.ledConSm4.dmxIn, 0)
        XCTAssertEqual(OEMCode.ledConSm4.dmxOut, 4)
        XCTAssertEqual(OEMCode.ledConSm4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledConSm4.isRDMSupported, false)

        // OemLedConSm41 (0x286B)
        XCTAssertEqual(OEMCode.ledConSm41, 0x286B)
        XCTAssertEqual(OEMCode.ledConSm41.description, "OemLedConSm41")
        XCTAssertEqual(OEMCode.ledConSm41.mnemonic, "OemLedConSm41")
        XCTAssertEqual(OEMCode.ledConSm41.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledConSm41.product, "SWITCHMAN 4-1")
        XCTAssertEqual(OEMCode.ledConSm41.dmxIn, 1)
        XCTAssertEqual(OEMCode.ledConSm41.dmxOut, 4)
        XCTAssertEqual(OEMCode.ledConSm41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledConSm41.isRDMSupported, false)

        // OemLedConSm8 (0x286F)
        XCTAssertEqual(OEMCode.ledConSm8, 0x286F)
        XCTAssertEqual(OEMCode.ledConSm8.description, "OemLedConSm8")
        XCTAssertEqual(OEMCode.ledConSm8.mnemonic, "OemLedConSm8")
        XCTAssertEqual(OEMCode.ledConSm8.manufacturer, "LED concept")
        XCTAssertEqual(OEMCode.ledConSm8.product, "SWITCHMAN 8")
        XCTAssertEqual(OEMCode.ledConSm8.dmxIn, 0)
        XCTAssertEqual(OEMCode.ledConSm8.dmxOut, 8)
        XCTAssertEqual(OEMCode.ledConSm8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledConSm8.isRDMSupported, false)

        // OemLedSisCloud1 (0x284D)
        XCTAssertEqual(OEMCode.ledSisCloud1, 0x284D)
        XCTAssertEqual(OEMCode.ledSisCloud1.description, "OemLedSisCloud1")
        XCTAssertEqual(OEMCode.ledSisCloud1.mnemonic, "OemLedSisCloud1")
        XCTAssertEqual(OEMCode.ledSisCloud1.manufacturer, "LEDsistem Technology LTD")
        XCTAssertEqual(OEMCode.ledSisCloud1.product, "Cloud-Drive")
        XCTAssertEqual(OEMCode.ledSisCloud1.dmxIn, 1)
        XCTAssertEqual(OEMCode.ledSisCloud1.dmxOut, 1)
        XCTAssertEqual(OEMCode.ledSisCloud1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledSisCloud1.isRDMSupported, true)

        // OemLedtuneAbox1 (0x13F1)
        XCTAssertEqual(OEMCode.ledtuneAbox1, 0x13F1)
        XCTAssertEqual(OEMCode.ledtuneAbox1.description, "OemLedtuneAbox1")
        XCTAssertEqual(OEMCode.ledtuneAbox1.mnemonic, "OemLedtuneAbox1")
        XCTAssertEqual(OEMCode.ledtuneAbox1.manufacturer, "LEDTUNE.COM")
        XCTAssertEqual(OEMCode.ledtuneAbox1.product, "ABOX-01")
        XCTAssertEqual(OEMCode.ledtuneAbox1.dmxIn, 1)
        XCTAssertEqual(OEMCode.ledtuneAbox1.dmxOut, 1)
        XCTAssertEqual(OEMCode.ledtuneAbox1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ledtuneAbox1.isRDMSupported, false)

        // OemLehighDx2 (0x3E0)
        XCTAssertEqual(OEMCode.lehighDx2, 0x3E0)
        XCTAssertEqual(OEMCode.lehighDx2.description, "OemLehighDx2")
        XCTAssertEqual(OEMCode.lehighDx2.mnemonic, "OemLehighDx2")
        XCTAssertEqual(OEMCode.lehighDx2.manufacturer, "Lehigh Electric Products Co")
        XCTAssertEqual(OEMCode.lehighDx2.product, "DX2 Dimming Rack")
        XCTAssertEqual(OEMCode.lehighDx2.dmxIn, 2)
        XCTAssertEqual(OEMCode.lehighDx2.dmxOut, 1)
        XCTAssertEqual(OEMCode.lehighDx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lehighDx2.isRDMSupported, false)

        // OemLemG300s (0x13DC)
        XCTAssertEqual(OEMCode.lemG300s, 0x13DC)
        XCTAssertEqual(OEMCode.lemG300s.description, "OemLemG300s")
        XCTAssertEqual(OEMCode.lemG300s.mnemonic, "OemLemG300s")
        XCTAssertEqual(OEMCode.lemG300s.manufacturer, "LeMaitre Ltd")
        XCTAssertEqual(OEMCode.lemG300s.product, "G300-Smart")
        XCTAssertEqual(OEMCode.lemG300s.dmxIn, 0)
        XCTAssertEqual(OEMCode.lemG300s.dmxOut, 1)
        XCTAssertEqual(OEMCode.lemG300s.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.lemG300s.isRDMSupported, false)

        // OemLeonGreco1 (0x289F)
        XCTAssertEqual(OEMCode.leonGreco1, 0x289F)
        XCTAssertEqual(OEMCode.leonGreco1.description, "OemLeonGreco1")
        XCTAssertEqual(OEMCode.leonGreco1.mnemonic, "OemLeonGreco1")
        XCTAssertEqual(OEMCode.leonGreco1.manufacturer, "LEON")
        XCTAssertEqual(OEMCode.leonGreco1.product, "LEONGRECO")
        XCTAssertEqual(OEMCode.leonGreco1.dmxIn, 1)
        XCTAssertEqual(OEMCode.leonGreco1.dmxOut, 1)
        XCTAssertEqual(OEMCode.leonGreco1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.leonGreco1.isRDMSupported, true)

        // OemLewLightCv2 (0x4)
        XCTAssertEqual(OEMCode.lewLightCv2, 0x4)
        XCTAssertEqual(OEMCode.lewLightCv2.description, "OemLewLightCv2")
        XCTAssertEqual(OEMCode.lewLightCv2.mnemonic, "OemLewLightCv2")
        XCTAssertEqual(OEMCode.lewLightCv2.manufacturer, "Lew Light")
        XCTAssertEqual(OEMCode.lewLightCv2.product, "Lew Light")
        XCTAssertEqual(OEMCode.lewLightCv2.dmxIn, 0)
        XCTAssertEqual(OEMCode.lewLightCv2.dmxOut, 0)
        XCTAssertEqual(OEMCode.lewLightCv2.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.lewLightCv2.isRDMSupported, false)

        // OemLex5k (0xDA0)
        XCTAssertEqual(OEMCode.lex5k, 0xDA0)
        XCTAssertEqual(OEMCode.lex5k.description, "OemLex5k")
        XCTAssertEqual(OEMCode.lex5k.mnemonic, "OemLex5k")
        XCTAssertEqual(OEMCode.lex5k.manufacturer, "Lex")
        XCTAssertEqual(OEMCode.lex5k.product, "AL5003-Lex")
        XCTAssertEqual(OEMCode.lex5k.dmxIn, 0)
        XCTAssertEqual(OEMCode.lex5k.dmxOut, 1)
        XCTAssertEqual(OEMCode.lex5k.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lex5k.isRDMSupported, true)

        // OemLiacReac (0x1070)
        XCTAssertEqual(OEMCode.liacReac, 0x1070)
        XCTAssertEqual(OEMCode.liacReac.description, "OemLiacReac")
        XCTAssertEqual(OEMCode.liacReac.mnemonic, "OemLiacReac")
        XCTAssertEqual(OEMCode.liacReac.manufacturer, "LightAct d.o.o.")
        XCTAssertEqual(OEMCode.liacReac.product, "reActor")
        XCTAssertEqual(OEMCode.liacReac.dmxIn, 1)
        XCTAssertEqual(OEMCode.liacReac.dmxOut, 2)
        XCTAssertEqual(OEMCode.liacReac.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.liacReac.isRDMSupported, false)

        // OemLichtGtDmxDis1 (0x2802)
        XCTAssertEqual(OEMCode.lichtGtDmxDis1, 0x2802)
        XCTAssertEqual(OEMCode.lichtGtDmxDis1.description, "OemLichtGtDmxDis1")
        XCTAssertEqual(OEMCode.lichtGtDmxDis1.mnemonic, "OemLichtGtDmxDis1")
        XCTAssertEqual(OEMCode.lichtGtDmxDis1.manufacturer, "Licht en Geluid Team")
        XCTAssertEqual(OEMCode.lichtGtDmxDis1.product, "DMXDisplay")
        XCTAssertEqual(OEMCode.lichtGtDmxDis1.dmxIn, 1)
        XCTAssertEqual(OEMCode.lichtGtDmxDis1.dmxOut, 0)
        XCTAssertEqual(OEMCode.lichtGtDmxDis1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.lichtGtDmxDis1.isRDMSupported, false)

        // OemLichtLt1 (0x13C0)
        XCTAssertEqual(OEMCode.lichtLt1, 0x13C0)
        XCTAssertEqual(OEMCode.lichtLt1.description, "OemLichtLt1")
        XCTAssertEqual(OEMCode.lichtLt1.mnemonic, "OemLichtLt1")
        XCTAssertEqual(OEMCode.lichtLt1.manufacturer, "Licht Team")
        XCTAssertEqual(OEMCode.lichtLt1.product, "LT1")
        XCTAssertEqual(OEMCode.lichtLt1.dmxIn, 4)
        XCTAssertEqual(OEMCode.lichtLt1.dmxOut, 0)
        XCTAssertEqual(OEMCode.lichtLt1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.lichtLt1.isRDMSupported, true)

        // OemLightSkyDmxBox1 (0x28A2)
        XCTAssertEqual(OEMCode.lightSkyDmxBox1, 0x28A2)
        XCTAssertEqual(OEMCode.lightSkyDmxBox1.description, "OemLightSkyDmxBox1")
        XCTAssertEqual(OEMCode.lightSkyDmxBox1.mnemonic, "OemLightSkyDmxBox1")
        XCTAssertEqual(OEMCode.lightSkyDmxBox1.manufacturer, "LIGHTSKY")
        XCTAssertEqual(OEMCode.lightSkyDmxBox1.product, "DMX-BOX")
        XCTAssertEqual(OEMCode.lightSkyDmxBox1.dmxIn, 4)
        XCTAssertEqual(OEMCode.lightSkyDmxBox1.dmxOut, 4)
        XCTAssertEqual(OEMCode.lightSkyDmxBox1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lightSkyDmxBox1.isRDMSupported, true)

        // OemLightSkyHub1 (0x11D0)
        XCTAssertEqual(OEMCode.lightSkyHub1, 0x11D0)
        XCTAssertEqual(OEMCode.lightSkyHub1.description, "OemLightSkyHub1")
        XCTAssertEqual(OEMCode.lightSkyHub1.mnemonic, "OemLightSkyHub1")
        XCTAssertEqual(OEMCode.lightSkyHub1.manufacturer, "LIGHT SKY")
        XCTAssertEqual(OEMCode.lightSkyHub1.product, "OemSkyHub")
        XCTAssertEqual(OEMCode.lightSkyHub1.dmxIn, 1)
        XCTAssertEqual(OEMCode.lightSkyHub1.dmxOut, 1)
        XCTAssertEqual(OEMCode.lightSkyHub1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lightSkyHub1.isRDMSupported, true)

        // OemLightSkyIp2k1 (0x2854)
        XCTAssertEqual(OEMCode.lightSkyIp2k1, 0x2854)
        XCTAssertEqual(OEMCode.lightSkyIp2k1.description, "OemLightSkyIp2k1")
        XCTAssertEqual(OEMCode.lightSkyIp2k1.mnemonic, "OemLightSkyIp2k1")
        XCTAssertEqual(OEMCode.lightSkyIp2k1.manufacturer, "LIGHTSKY")
        XCTAssertEqual(OEMCode.lightSkyIp2k1.product, "IP2000")
        XCTAssertEqual(OEMCode.lightSkyIp2k1.dmxIn, 1)
        XCTAssertEqual(OEMCode.lightSkyIp2k1.dmxOut, 1)
        XCTAssertEqual(OEMCode.lightSkyIp2k1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lightSkyIp2k1.isRDMSupported, true)

        // OemLightSkyIp31 (0x283B)
        XCTAssertEqual(OEMCode.lightSkyIp31, 0x283B)
        XCTAssertEqual(OEMCode.lightSkyIp31.description, "OemLightSkyIp31")
        XCTAssertEqual(OEMCode.lightSkyIp31.mnemonic, "OemLightSkyIp31")
        XCTAssertEqual(OEMCode.lightSkyIp31.manufacturer, "LIGHTSKY")
        XCTAssertEqual(OEMCode.lightSkyIp31.product, "IP3000")
        XCTAssertEqual(OEMCode.lightSkyIp31.dmxIn, 4)
        XCTAssertEqual(OEMCode.lightSkyIp31.dmxOut, 4)
        XCTAssertEqual(OEMCode.lightSkyIp31.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lightSkyIp31.isRDMSupported, true)

        // OemLightSkyLed07601 (0x28BC)
        XCTAssertEqual(OEMCode.lightSkyLed07601, 0x28BC)
        XCTAssertEqual(OEMCode.lightSkyLed07601.description, "OemLightSkyLed07601")
        XCTAssertEqual(OEMCode.lightSkyLed07601.mnemonic, "OemLightSkyLed07601")
        XCTAssertEqual(OEMCode.lightSkyLed07601.manufacturer, "LIGHTSKY")
        XCTAssertEqual(OEMCode.lightSkyLed07601.product, "LED0760")
        XCTAssertEqual(OEMCode.lightSkyLed07601.dmxIn, 1)
        XCTAssertEqual(OEMCode.lightSkyLed07601.dmxOut, 1)
        XCTAssertEqual(OEMCode.lightSkyLed07601.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lightSkyLed07601.isRDMSupported, true)

        // OemLightSkyLed09601 (0x28BD)
        XCTAssertEqual(OEMCode.lightSkyLed09601, 0x28BD)
        XCTAssertEqual(OEMCode.lightSkyLed09601.description, "OemLightSkyLed09601")
        XCTAssertEqual(OEMCode.lightSkyLed09601.mnemonic, "OemLightSkyLed09601")
        XCTAssertEqual(OEMCode.lightSkyLed09601.manufacturer, "LIGHTSKY")
        XCTAssertEqual(OEMCode.lightSkyLed09601.product, "LED0960")
        XCTAssertEqual(OEMCode.lightSkyLed09601.dmxIn, 1)
        XCTAssertEqual(OEMCode.lightSkyLed09601.dmxOut, 1)
        XCTAssertEqual(OEMCode.lightSkyLed09601.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lightSkyLed09601.isRDMSupported, true)

        // OemLightWildDataB1 (0xB60)
        XCTAssertEqual(OEMCode.lightWildDataB1, 0xB60)
        XCTAssertEqual(OEMCode.lightWildDataB1.description, "OemLightWildDataB1")
        XCTAssertEqual(OEMCode.lightWildDataB1.mnemonic, "OemLightWildDataB1")
        XCTAssertEqual(OEMCode.lightWildDataB1.manufacturer, "LightWild LC")
        XCTAssertEqual(OEMCode.lightWildDataB1.product, "LightWild DataBridge")
        XCTAssertEqual(OEMCode.lightWildDataB1.dmxIn, 4)
        XCTAssertEqual(OEMCode.lightWildDataB1.dmxOut, 4)
        XCTAssertEqual(OEMCode.lightWildDataB1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lightWildDataB1.isRDMSupported, false)

        // OemLkeEmj1 (0x13DB)
        XCTAssertEqual(OEMCode.lkeEmj1, 0x13DB)
        XCTAssertEqual(OEMCode.lkeEmj1.description, "OemLkeEmj1")
        XCTAssertEqual(OEMCode.lkeEmj1.mnemonic, "OemLkeEmj1")
        XCTAssertEqual(OEMCode.lkeEmj1.manufacturer, "LKE Lasershow")
        XCTAssertEqual(OEMCode.lkeEmj1.product, "eXtreme-Motion-Jet")
        XCTAssertEqual(OEMCode.lkeEmj1.dmxIn, 1)
        XCTAssertEqual(OEMCode.lkeEmj1.dmxOut, 0)
        XCTAssertEqual(OEMCode.lkeEmj1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lkeEmj1.isRDMSupported, true)

        // OemLkeH2 (0x13DA)
        XCTAssertEqual(OEMCode.lkeH2, 0x13DA)
        XCTAssertEqual(OEMCode.lkeH2.description, "OemLkeH2")
        XCTAssertEqual(OEMCode.lkeH2.mnemonic, "OemLkeH2")
        XCTAssertEqual(OEMCode.lkeH2.manufacturer, "LKE Lasershow")
        XCTAssertEqual(OEMCode.lkeH2.product, "H2O-Motion")
        XCTAssertEqual(OEMCode.lkeH2.dmxIn, 1)
        XCTAssertEqual(OEMCode.lkeH2.dmxOut, 0)
        XCTAssertEqual(OEMCode.lkeH2.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.lkeH2.isRDMSupported, true)

        // OemLltSms28a (0xDD0)
        XCTAssertEqual(OEMCode.lltSms28a, 0xDD0)
        XCTAssertEqual(OEMCode.lltSms28a.description, "OemLltSms28a")
        XCTAssertEqual(OEMCode.lltSms28a.mnemonic, "OemLltSms28a")
        XCTAssertEqual(OEMCode.lltSms28a.manufacturer, "LLT Lichttechnik GmbH&Co.KG")
        XCTAssertEqual(OEMCode.lltSms28a.product, "SMS-28A")
        XCTAssertEqual(OEMCode.lltSms28a.dmxIn, 2)
        XCTAssertEqual(OEMCode.lltSms28a.dmxOut, 0)
        XCTAssertEqual(OEMCode.lltSms28a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lltSms28a.isRDMSupported, false)

        // OemLscDownLynx2 (0x280)
        XCTAssertEqual(OEMCode.lscDownLynx2, 0x280)
        XCTAssertEqual(OEMCode.lscDownLynx2.description, "OemLscDownLynx2")
        XCTAssertEqual(OEMCode.lscDownLynx2.mnemonic, "OemLscDownLynx2")
        XCTAssertEqual(OEMCode.lscDownLynx2.manufacturer, "LSC")
        XCTAssertEqual(OEMCode.lscDownLynx2.product, "LSC Down-Lynx 2")
        XCTAssertEqual(OEMCode.lscDownLynx2.dmxIn, 0)
        XCTAssertEqual(OEMCode.lscDownLynx2.dmxOut, 2)
        XCTAssertEqual(OEMCode.lscDownLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lscDownLynx2.isRDMSupported, true)

        // OemLscIn1 (0xB11)
        XCTAssertEqual(OEMCode.lscIn1, 0xB11)
        XCTAssertEqual(OEMCode.lscIn1.description, "OemLscIn1")
        XCTAssertEqual(OEMCode.lscIn1.mnemonic, "OemLscIn1")
        XCTAssertEqual(OEMCode.lscIn1.manufacturer, "LSC")
        XCTAssertEqual(OEMCode.lscIn1.product, "OemLscIn1")
        XCTAssertEqual(OEMCode.lscIn1.dmxIn, 1)
        XCTAssertEqual(OEMCode.lscIn1.dmxOut, 0)
        XCTAssertEqual(OEMCode.lscIn1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lscIn1.isRDMSupported, false)

        // OemLscIn4 (0xB13)
        XCTAssertEqual(OEMCode.lscIn4, 0xB13)
        XCTAssertEqual(OEMCode.lscIn4.description, "OemLscIn4")
        XCTAssertEqual(OEMCode.lscIn4.mnemonic, "OemLscIn4")
        XCTAssertEqual(OEMCode.lscIn4.manufacturer, "LSC")
        XCTAssertEqual(OEMCode.lscIn4.product, "OemLscIn4")
        XCTAssertEqual(OEMCode.lscIn4.dmxIn, 4)
        XCTAssertEqual(OEMCode.lscIn4.dmxOut, 0)
        XCTAssertEqual(OEMCode.lscIn4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lscIn4.isRDMSupported, false)

        // OemLscOut1 (0xB10)
        XCTAssertEqual(OEMCode.lscOut1, 0xB10)
        XCTAssertEqual(OEMCode.lscOut1.description, "OemLscOut1")
        XCTAssertEqual(OEMCode.lscOut1.mnemonic, "OemLscOut1")
        XCTAssertEqual(OEMCode.lscOut1.manufacturer, "LSC")
        XCTAssertEqual(OEMCode.lscOut1.product, "OemLscOut1")
        XCTAssertEqual(OEMCode.lscOut1.dmxIn, 0)
        XCTAssertEqual(OEMCode.lscOut1.dmxOut, 1)
        XCTAssertEqual(OEMCode.lscOut1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lscOut1.isRDMSupported, false)

        // OemLscOut4 (0xB12)
        XCTAssertEqual(OEMCode.lscOut4, 0xB12)
        XCTAssertEqual(OEMCode.lscOut4.description, "OemLscOut4")
        XCTAssertEqual(OEMCode.lscOut4.mnemonic, "OemLscOut4")
        XCTAssertEqual(OEMCode.lscOut4.manufacturer, "LSC")
        XCTAssertEqual(OEMCode.lscOut4.product, "OemLscOut4")
        XCTAssertEqual(OEMCode.lscOut4.dmxIn, 0)
        XCTAssertEqual(OEMCode.lscOut4.dmxOut, 4)
        XCTAssertEqual(OEMCode.lscOut4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lscOut4.isRDMSupported, false)

        // OemLscUpLynx2 (0x281)
        XCTAssertEqual(OEMCode.lscUpLynx2, 0x281)
        XCTAssertEqual(OEMCode.lscUpLynx2.description, "OemLscUpLynx2")
        XCTAssertEqual(OEMCode.lscUpLynx2.mnemonic, "OemLscUpLynx2")
        XCTAssertEqual(OEMCode.lscUpLynx2.manufacturer, "LSC")
        XCTAssertEqual(OEMCode.lscUpLynx2.product, "LSC Up-Lynx 2")
        XCTAssertEqual(OEMCode.lscUpLynx2.dmxIn, 2)
        XCTAssertEqual(OEMCode.lscUpLynx2.dmxOut, 0)
        XCTAssertEqual(OEMCode.lscUpLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lscUpLynx2.isRDMSupported, false)

        // OemLssDisco (0x950)
        XCTAssertEqual(OEMCode.lssDisco, 0x950)
        XCTAssertEqual(OEMCode.lssDisco.description, "OemLssDisco")
        XCTAssertEqual(OEMCode.lssDisco.mnemonic, "OemLssDisco")
        XCTAssertEqual(OEMCode.lssDisco.manufacturer, "LSS Lighting")
        XCTAssertEqual(OEMCode.lssDisco.product, "Discovery")
        XCTAssertEqual(OEMCode.lssDisco.dmxIn, 4)
        XCTAssertEqual(OEMCode.lssDisco.dmxOut, 4)
        XCTAssertEqual(OEMCode.lssDisco.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.lssDisco.isRDMSupported, false)

        // OemLssMasterGate (0x472)
        XCTAssertEqual(OEMCode.lssMasterGate, 0x472)
        XCTAssertEqual(OEMCode.lssMasterGate.description, "OemLssMasterGate")
        XCTAssertEqual(OEMCode.lssMasterGate.mnemonic, "OemLssMasterGate")
        XCTAssertEqual(OEMCode.lssMasterGate.manufacturer, "LSS Lighting")
        XCTAssertEqual(OEMCode.lssMasterGate.product, "MasterGate Profibus interface")
        XCTAssertEqual(OEMCode.lssMasterGate.dmxIn, 0)
        XCTAssertEqual(OEMCode.lssMasterGate.dmxOut, 0)
        XCTAssertEqual(OEMCode.lssMasterGate.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.lssMasterGate.isRDMSupported, false)

        // OemLssMasterMini (0x474)
        XCTAssertEqual(OEMCode.lssMasterMini, 0x474)
        XCTAssertEqual(OEMCode.lssMasterMini.description, "OemLssMasterMini")
        XCTAssertEqual(OEMCode.lssMasterMini.mnemonic, "OemLssMasterMini")
        XCTAssertEqual(OEMCode.lssMasterMini.manufacturer, "LSS Lighting")
        XCTAssertEqual(OEMCode.lssMasterMini.product, "Master Port Mini")
        XCTAssertEqual(OEMCode.lssMasterMini.dmxIn, 0)
        XCTAssertEqual(OEMCode.lssMasterMini.dmxOut, 1)
        XCTAssertEqual(OEMCode.lssMasterMini.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lssMasterMini.isRDMSupported, true)

        // OemLssPowerDim (0x475)
        XCTAssertEqual(OEMCode.lssPowerDim, 0x475)
        XCTAssertEqual(OEMCode.lssPowerDim.description, "OemLssPowerDim")
        XCTAssertEqual(OEMCode.lssPowerDim.mnemonic, "OemLssPowerDim")
        XCTAssertEqual(OEMCode.lssPowerDim.manufacturer, "LSS Lighting")
        XCTAssertEqual(OEMCode.lssPowerDim.product, "Powerdim")
        XCTAssertEqual(OEMCode.lssPowerDim.dmxIn, 0)
        XCTAssertEqual(OEMCode.lssPowerDim.dmxOut, 2)
        XCTAssertEqual(OEMCode.lssPowerDim.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lssPowerDim.isRDMSupported, true)

        // OemLssRailController (0x473)
        XCTAssertEqual(OEMCode.lssRailController, 0x473)
        XCTAssertEqual(OEMCode.lssRailController.description, "OemLssRailController")
        XCTAssertEqual(OEMCode.lssRailController.mnemonic, "OemLssRailController")
        XCTAssertEqual(OEMCode.lssRailController.manufacturer, "LSS Lighting")
        XCTAssertEqual(OEMCode.lssRailController.product, "Rail Controller Profibus")
        XCTAssertEqual(OEMCode.lssRailController.dmxIn, 0)
        XCTAssertEqual(OEMCode.lssRailController.dmxOut, 0)
        XCTAssertEqual(OEMCode.lssRailController.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.lssRailController.isRDMSupported, false)

        // OemLtlLasNet (0x940)
        XCTAssertEqual(OEMCode.ltlLasNet, 0x940)
        XCTAssertEqual(OEMCode.ltlLasNet.description, "OemLtlLasNet")
        XCTAssertEqual(OEMCode.ltlLasNet.mnemonic, "OemLtlLasNet")
        XCTAssertEqual(OEMCode.ltlLasNet.manufacturer, "Laser Technology Ltd.")
        XCTAssertEqual(OEMCode.ltlLasNet.product, "LasNet")
        XCTAssertEqual(OEMCode.ltlLasNet.dmxIn, 2)
        XCTAssertEqual(OEMCode.ltlLasNet.dmxOut, 2)
        XCTAssertEqual(OEMCode.ltlLasNet.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ltlLasNet.isRDMSupported, false)

        // OemLumaxIlda (0x10D0)
        XCTAssertEqual(OEMCode.lumaxIlda, 0x10D0)
        XCTAssertEqual(OEMCode.lumaxIlda.description, "OemLumaxIlda")
        XCTAssertEqual(OEMCode.lumaxIlda.mnemonic, "OemLumaxIlda")
        XCTAssertEqual(OEMCode.lumaxIlda.manufacturer, "Lumax")
        XCTAssertEqual(OEMCode.lumaxIlda.product, "LumaxNET ILDA Interface")
        XCTAssertEqual(OEMCode.lumaxIlda.dmxIn, 1)
        XCTAssertEqual(OEMCode.lumaxIlda.dmxOut, 1)
        XCTAssertEqual(OEMCode.lumaxIlda.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lumaxIlda.isRDMSupported, false)

        // OemLumenArriSkylinkBs1 (0x28C2)
        XCTAssertEqual(OEMCode.lumenArriSkylinkBs1, 0x28C2)
        XCTAssertEqual(OEMCode.lumenArriSkylinkBs1.description, "OemLumenArriSkylinkBs1")
        XCTAssertEqual(OEMCode.lumenArriSkylinkBs1.mnemonic, "OemLumenArriSkylinkBs1")
        XCTAssertEqual(OEMCode.lumenArriSkylinkBs1.manufacturer, "LumenRadio")
        XCTAssertEqual(OEMCode.lumenArriSkylinkBs1.product, "ARRI Skylink Base Station")
        XCTAssertEqual(OEMCode.lumenArriSkylinkBs1.dmxIn, 1)
        XCTAssertEqual(OEMCode.lumenArriSkylinkBs1.dmxOut, 1)
        XCTAssertEqual(OEMCode.lumenArriSkylinkBs1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lumenArriSkylinkBs1.isRDMSupported, true)

        // OemLumPulCboxe (0x1321)
        XCTAssertEqual(OEMCode.lumPulCboxe, 0x1321)
        XCTAssertEqual(OEMCode.lumPulCboxe.description, "OemLumPulCboxe")
        XCTAssertEqual(OEMCode.lumPulCboxe.mnemonic, "OemLumPulCboxe")
        XCTAssertEqual(OEMCode.lumPulCboxe.manufacturer, "Lumenpulse Lighting, Inc.")
        XCTAssertEqual(OEMCode.lumPulCboxe.product, "CBOX Ethernet")
        XCTAssertEqual(OEMCode.lumPulCboxe.dmxIn, 0)
        XCTAssertEqual(OEMCode.lumPulCboxe.dmxOut, 4)
        XCTAssertEqual(OEMCode.lumPulCboxe.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lumPulCboxe.isRDMSupported, true)

        // OemLumPulCove1 (0x1320)
        XCTAssertEqual(OEMCode.lumPulCove1, 0x1320)
        XCTAssertEqual(OEMCode.lumPulCove1.description, "OemLumPulCove1")
        XCTAssertEqual(OEMCode.lumPulCove1.mnemonic, "OemLumPulCove1")
        XCTAssertEqual(OEMCode.lumPulCove1.manufacturer, "Lumenpulse Lighting Inc.")
        XCTAssertEqual(OEMCode.lumPulCove1.product, "Lumencove XT Ethernet Enabled")
        XCTAssertEqual(OEMCode.lumPulCove1.dmxIn, 2)
        XCTAssertEqual(OEMCode.lumPulCove1.dmxOut, 2)
        XCTAssertEqual(OEMCode.lumPulCove1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lumPulCove1.isRDMSupported, true)

        // OemLumrCnov2 (0x9F0)
        XCTAssertEqual(OEMCode.lumrCnov2, 0x9F0)
        XCTAssertEqual(OEMCode.lumrCnov2.description, "OemLumrCnov2")
        XCTAssertEqual(OEMCode.lumrCnov2.mnemonic, "OemLumrCnov2")
        XCTAssertEqual(OEMCode.lumrCnov2.manufacturer, "LumenRadio AB")
        XCTAssertEqual(OEMCode.lumrCnov2.product, "CRMX Nova TX2")
        XCTAssertEqual(OEMCode.lumrCnov2.dmxIn, 2)
        XCTAssertEqual(OEMCode.lumrCnov2.dmxOut, 2)
        XCTAssertEqual(OEMCode.lumrCnov2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lumrCnov2.isRDMSupported, false)

        // OemLumrCnov2r (0x9F1)
        XCTAssertEqual(OEMCode.lumrCnov2r, 0x9F1)
        XCTAssertEqual(OEMCode.lumrCnov2r.description, "OemLumrCnov2r")
        XCTAssertEqual(OEMCode.lumrCnov2r.mnemonic, "OemLumrCnov2r")
        XCTAssertEqual(OEMCode.lumrCnov2r.manufacturer, "LumenRadio AB")
        XCTAssertEqual(OEMCode.lumrCnov2r.product, "CRMX Nova TX2 RDM")
        XCTAssertEqual(OEMCode.lumrCnov2r.dmxIn, 2)
        XCTAssertEqual(OEMCode.lumrCnov2r.dmxOut, 2)
        XCTAssertEqual(OEMCode.lumrCnov2r.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lumrCnov2r.isRDMSupported, true)

        // OemLumrCnovFx (0x9F2)
        XCTAssertEqual(OEMCode.lumrCnovFx, 0x9F2)
        XCTAssertEqual(OEMCode.lumrCnovFx.description, "OemLumrCnovFx")
        XCTAssertEqual(OEMCode.lumrCnovFx.mnemonic, "OemLumrCnovFx")
        XCTAssertEqual(OEMCode.lumrCnovFx.manufacturer, "LumenRadio AB")
        XCTAssertEqual(OEMCode.lumrCnovFx.product, "CRMX Nova FX")
        XCTAssertEqual(OEMCode.lumrCnovFx.dmxIn, 1)
        XCTAssertEqual(OEMCode.lumrCnovFx.dmxOut, 1)
        XCTAssertEqual(OEMCode.lumrCnovFx.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lumrCnovFx.isRDMSupported, true)

        // OemLumrCnovFx2 (0x9F3)
        XCTAssertEqual(OEMCode.lumrCnovFx2, 0x9F3)
        XCTAssertEqual(OEMCode.lumrCnovFx2.description, "OemLumrCnovFx2")
        XCTAssertEqual(OEMCode.lumrCnovFx2.mnemonic, "OemLumrCnovFx2")
        XCTAssertEqual(OEMCode.lumrCnovFx2.manufacturer, "LumenRadio AB")
        XCTAssertEqual(OEMCode.lumrCnovFx2.product, "CRMX Nova FX2")
        XCTAssertEqual(OEMCode.lumrCnovFx2.dmxIn, 2)
        XCTAssertEqual(OEMCode.lumrCnovFx2.dmxOut, 2)
        XCTAssertEqual(OEMCode.lumrCnovFx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lumrCnovFx2.isRDMSupported, true)

        // OemLumrCoutF1ex (0x9F4)
        XCTAssertEqual(OEMCode.lumrCoutF1ex, 0x9F4)
        XCTAssertEqual(OEMCode.lumrCoutF1ex.description, "OemLumrCoutF1ex")
        XCTAssertEqual(OEMCode.lumrCoutF1ex.mnemonic, "OemLumrCoutF1ex")
        XCTAssertEqual(OEMCode.lumrCoutF1ex.manufacturer, "LumenRadio AB")
        XCTAssertEqual(OEMCode.lumrCoutF1ex.product, "CRMX Outdoor F1ex")
        XCTAssertEqual(OEMCode.lumrCoutF1ex.dmxIn, 1)
        XCTAssertEqual(OEMCode.lumrCoutF1ex.dmxOut, 1)
        XCTAssertEqual(OEMCode.lumrCoutF1ex.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.lumrCoutF1ex.isRDMSupported, true)

        // OemLumrSnova (0x9F5)
        XCTAssertEqual(OEMCode.lumrSnova, 0x9F5)
        XCTAssertEqual(OEMCode.lumrSnova.description, "OemLumrSnova")
        XCTAssertEqual(OEMCode.lumrSnova.mnemonic, "OemLumrSnova")
        XCTAssertEqual(OEMCode.lumrSnova.manufacturer, "LumenRadio AB")
        XCTAssertEqual(OEMCode.lumrSnova.product, "SuperNova")
        XCTAssertEqual(OEMCode.lumrSnova.dmxIn, 0)
        XCTAssertEqual(OEMCode.lumrSnova.dmxOut, 0)
        XCTAssertEqual(OEMCode.lumrSnova.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.lumrSnova.isRDMSupported, true)

        // OemLuxNode1 (0x871)
        XCTAssertEqual(OEMCode.luxNode1, 0x871)
        XCTAssertEqual(OEMCode.luxNode1.description, "OemLuxNode1")
        XCTAssertEqual(OEMCode.luxNode1.mnemonic, "OemLuxNode1")
        XCTAssertEqual(OEMCode.luxNode1.manufacturer, "Lux Lumen")
        XCTAssertEqual(OEMCode.luxNode1.product, "Lux Node")
        XCTAssertEqual(OEMCode.luxNode1.dmxIn, 0)
        XCTAssertEqual(OEMCode.luxNode1.dmxOut, 1)
        XCTAssertEqual(OEMCode.luxNode1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.luxNode1.isRDMSupported, false)

        // OemLychtHub1 (0x2803)
        XCTAssertEqual(OEMCode.lychtHub1, 0x2803)
        XCTAssertEqual(OEMCode.lychtHub1.description, "OemLychtHub1")
        XCTAssertEqual(OEMCode.lychtHub1.mnemonic, "OemLychtHub1")
        XCTAssertEqual(OEMCode.lychtHub1.manufacturer, "Lycht")
        XCTAssertEqual(OEMCode.lychtHub1.product, "Lycht Hub")
        XCTAssertEqual(OEMCode.lychtHub1.dmxIn, 6)
        XCTAssertEqual(OEMCode.lychtHub1.dmxOut, 0)
        XCTAssertEqual(OEMCode.lychtHub1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.lychtHub1.isRDMSupported, false)

        // OemMa2PortNode (0x4B0)
        XCTAssertEqual(OEMCode.ma2PortNode, 0x4B0)
        XCTAssertEqual(OEMCode.ma2PortNode.description, "OemMa2PortNode")
        XCTAssertEqual(OEMCode.ma2PortNode.mnemonic, "OemMa2PortNode")
        XCTAssertEqual(OEMCode.ma2PortNode.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.ma2PortNode.product, "2 Port Node")
        XCTAssertEqual(OEMCode.ma2PortNode.dmxIn, 0)
        XCTAssertEqual(OEMCode.ma2PortNode.dmxOut, 2)
        XCTAssertEqual(OEMCode.ma2PortNode.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ma2PortNode.isRDMSupported, false)

        // OemMaa (0x4BA)
        XCTAssertEqual(OEMCode.maa, 0x4BA)
        XCTAssertEqual(OEMCode.maa.description, "OemMaa")
        XCTAssertEqual(OEMCode.maa.mnemonic, "OemMaa")
        XCTAssertEqual(OEMCode.maa.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.maa.product, "OemMaa")
        XCTAssertEqual(OEMCode.maa.dmxIn, 0)
        XCTAssertEqual(OEMCode.maa.dmxOut, 0)
        XCTAssertEqual(OEMCode.maa.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.maa.isRDMSupported, false)

        // OemMab (0x4BB)
        XCTAssertEqual(OEMCode.mab, 0x4BB)
        XCTAssertEqual(OEMCode.mab.description, "OemMab")
        XCTAssertEqual(OEMCode.mab.mnemonic, "OemMab")
        XCTAssertEqual(OEMCode.mab.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.mab.product, "OemMab")
        XCTAssertEqual(OEMCode.mab.dmxIn, 0)
        XCTAssertEqual(OEMCode.mab.dmxOut, 0)
        XCTAssertEqual(OEMCode.mab.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.mab.isRDMSupported, false)

        // OemMac (0x4BC)
        XCTAssertEqual(OEMCode.mac, 0x4BC)
        XCTAssertEqual(OEMCode.mac.description, "OemMac")
        XCTAssertEqual(OEMCode.mac.mnemonic, "OemMac")
        XCTAssertEqual(OEMCode.mac.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.mac.product, "OemMac")
        XCTAssertEqual(OEMCode.mac.dmxIn, 0)
        XCTAssertEqual(OEMCode.mac.dmxOut, 0)
        XCTAssertEqual(OEMCode.mac.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.mac.isRDMSupported, false)

        // OemMaConsole (0x4B4)
        XCTAssertEqual(OEMCode.maConsole, 0x4B4)
        XCTAssertEqual(OEMCode.maConsole.description, "OemMaConsole")
        XCTAssertEqual(OEMCode.maConsole.mnemonic, "OemMaConsole")
        XCTAssertEqual(OEMCode.maConsole.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.maConsole.product, "GrandMA2 Consoles and OnPC")
        XCTAssertEqual(OEMCode.maConsole.dmxIn, 0)
        XCTAssertEqual(OEMCode.maConsole.dmxOut, 0)
        XCTAssertEqual(OEMCode.maConsole.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.maConsole.isRDMSupported, false)

        // OemMad (0x4BD)
        XCTAssertEqual(OEMCode.mad, 0x4BD)
        XCTAssertEqual(OEMCode.mad.description, "OemMad")
        XCTAssertEqual(OEMCode.mad.mnemonic, "OemMad")
        XCTAssertEqual(OEMCode.mad.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.mad.product, "OemMad")
        XCTAssertEqual(OEMCode.mad.dmxIn, 0)
        XCTAssertEqual(OEMCode.mad.dmxOut, 0)
        XCTAssertEqual(OEMCode.mad.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.mad.isRDMSupported, false)

        // OemMaDot2Console (0x4B7)
        XCTAssertEqual(OEMCode.maDot2Console, 0x4B7)
        XCTAssertEqual(OEMCode.maDot2Console.description, "OemMaDot2Console")
        XCTAssertEqual(OEMCode.maDot2Console.mnemonic, "OemMaDot2Console")
        XCTAssertEqual(OEMCode.maDot2Console.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.maDot2Console.product, "Dot2 console and Dot2OnPC")
        XCTAssertEqual(OEMCode.maDot2Console.dmxIn, 0)
        XCTAssertEqual(OEMCode.maDot2Console.dmxOut, 0)
        XCTAssertEqual(OEMCode.maDot2Console.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.maDot2Console.isRDMSupported, false)

        // OemMaDot2NodeX (0x4B9)
        XCTAssertEqual(OEMCode.maDot2NodeX, 0x4B9)
        XCTAssertEqual(OEMCode.maDot2NodeX.description, "OemMaDot2NodeX")
        XCTAssertEqual(OEMCode.maDot2NodeX.mnemonic, "OemMaDot2NodeX")
        XCTAssertEqual(OEMCode.maDot2NodeX.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.maDot2NodeX.product, "Dot2 X-Port nodes")
        XCTAssertEqual(OEMCode.maDot2NodeX.dmxIn, 0)
        XCTAssertEqual(OEMCode.maDot2NodeX.dmxOut, 0)
        XCTAssertEqual(OEMCode.maDot2NodeX.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.maDot2NodeX.isRDMSupported, false)

        // OemMaDot2VPU (0x4B8)
        XCTAssertEqual(OEMCode.maDot2VPU, 0x4B8)
        XCTAssertEqual(OEMCode.maDot2VPU.description, "OemMaDot2VPU")
        XCTAssertEqual(OEMCode.maDot2VPU.mnemonic, "OemMaDot2VPU")
        XCTAssertEqual(OEMCode.maDot2VPU.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.maDot2VPU.product, "Dot2 VPU")
        XCTAssertEqual(OEMCode.maDot2VPU.dmxIn, 0)
        XCTAssertEqual(OEMCode.maDot2VPU.dmxOut, 0)
        XCTAssertEqual(OEMCode.maDot2VPU.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.maDot2VPU.isRDMSupported, false)

        // OemMadrix1 (0x4C0)
        XCTAssertEqual(OEMCode.madrix1, 0x4C0)
        XCTAssertEqual(OEMCode.madrix1.description, "OemMadrix1")
        XCTAssertEqual(OEMCode.madrix1.mnemonic, "OemMadrix1")
        XCTAssertEqual(OEMCode.madrix1.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrix1.product, "Madrix 2")
        XCTAssertEqual(OEMCode.madrix1.dmxIn, 0)
        XCTAssertEqual(OEMCode.madrix1.dmxOut, 1)
        XCTAssertEqual(OEMCode.madrix1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.madrix1.isRDMSupported, false)

        // OemMadrix2 (0x4C2)
        XCTAssertEqual(OEMCode.madrix2, 0x4C2)
        XCTAssertEqual(OEMCode.madrix2.description, "OemMadrix2")
        XCTAssertEqual(OEMCode.madrix2.mnemonic, "OemMadrix2")
        XCTAssertEqual(OEMCode.madrix2.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrix2.product, "Snuffler")
        XCTAssertEqual(OEMCode.madrix2.dmxIn, 4)
        XCTAssertEqual(OEMCode.madrix2.dmxOut, 0)
        XCTAssertEqual(OEMCode.madrix2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.madrix2.isRDMSupported, false)

        // OemMadrix3 (0x4C3)
        XCTAssertEqual(OEMCode.madrix3, 0x4C3)
        XCTAssertEqual(OEMCode.madrix3.description, "OemMadrix3")
        XCTAssertEqual(OEMCode.madrix3.mnemonic, "OemMadrix3")
        XCTAssertEqual(OEMCode.madrix3.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrix3.product, "PLEXUS")
        XCTAssertEqual(OEMCode.madrix3.dmxIn, 2)
        XCTAssertEqual(OEMCode.madrix3.dmxOut, 2)
        XCTAssertEqual(OEMCode.madrix3.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.madrix3.isRDMSupported, true)

        // OemMadrix4 (0x4C4)
        XCTAssertEqual(OEMCode.madrix4, 0x4C4)
        XCTAssertEqual(OEMCode.madrix4.description, "OemMadrix4")
        XCTAssertEqual(OEMCode.madrix4.mnemonic, "OemMadrix4")
        XCTAssertEqual(OEMCode.madrix4.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrix4.product, "MADRIX 3")
        XCTAssertEqual(OEMCode.madrix4.dmxIn, 0)
        XCTAssertEqual(OEMCode.madrix4.dmxOut, 4)
        XCTAssertEqual(OEMCode.madrix4.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.madrix4.isRDMSupported, false)

        // OemMadrix5 (0x4C5)
        XCTAssertEqual(OEMCode.madrix5, 0x4C5)
        XCTAssertEqual(OEMCode.madrix5.description, "OemMadrix5")
        XCTAssertEqual(OEMCode.madrix5.mnemonic, "OemMadrix5")
        XCTAssertEqual(OEMCode.madrix5.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrix5.product, "LUNA 8")
        XCTAssertEqual(OEMCode.madrix5.dmxIn, 0)
        XCTAssertEqual(OEMCode.madrix5.dmxOut, 4)
        XCTAssertEqual(OEMCode.madrix5.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.madrix5.isRDMSupported, false)

        // OemMadrix6 (0x4C6)
        XCTAssertEqual(OEMCode.madrix6, 0x4C6)
        XCTAssertEqual(OEMCode.madrix6.description, "OemMadrix6")
        XCTAssertEqual(OEMCode.madrix6.mnemonic, "OemMadrix6")
        XCTAssertEqual(OEMCode.madrix6.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrix6.product, "OemMadrix6")
        XCTAssertEqual(OEMCode.madrix6.dmxIn, 0)
        XCTAssertEqual(OEMCode.madrix6.dmxOut, 0)
        XCTAssertEqual(OEMCode.madrix6.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.madrix6.isRDMSupported, false)

        // OemMadrix7 (0x4C7)
        XCTAssertEqual(OEMCode.madrix7, 0x4C7)
        XCTAssertEqual(OEMCode.madrix7.description, "OemMadrix7")
        XCTAssertEqual(OEMCode.madrix7.mnemonic, "OemMadrix7")
        XCTAssertEqual(OEMCode.madrix7.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrix7.product, "LUNA 4")
        XCTAssertEqual(OEMCode.madrix7.dmxIn, 1)
        XCTAssertEqual(OEMCode.madrix7.dmxOut, 4)
        XCTAssertEqual(OEMCode.madrix7.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.madrix7.isRDMSupported, false)

        // OemMadrix8 (0x4C8)
        XCTAssertEqual(OEMCode.madrix8, 0x4C8)
        XCTAssertEqual(OEMCode.madrix8.description, "OemMadrix8")
        XCTAssertEqual(OEMCode.madrix8.mnemonic, "OemMadrix8")
        XCTAssertEqual(OEMCode.madrix8.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrix8.product, "LUNA 16")
        XCTAssertEqual(OEMCode.madrix8.dmxIn, 0)
        XCTAssertEqual(OEMCode.madrix8.dmxOut, 4)
        XCTAssertEqual(OEMCode.madrix8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.madrix8.isRDMSupported, false)

        // OemMadrix9 (0x4C9)
        XCTAssertEqual(OEMCode.madrix9, 0x4C9)
        XCTAssertEqual(OEMCode.madrix9.description, "OemMadrix9")
        XCTAssertEqual(OEMCode.madrix9.mnemonic, "OemMadrix9")
        XCTAssertEqual(OEMCode.madrix9.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrix9.product, "Nebula")
        XCTAssertEqual(OEMCode.madrix9.dmxIn, 0)
        XCTAssertEqual(OEMCode.madrix9.dmxOut, 4)
        XCTAssertEqual(OEMCode.madrix9.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.madrix9.isRDMSupported, false)

        // OemMadrixa (0x4CA)
        XCTAssertEqual(OEMCode.madrixa, 0x4CA)
        XCTAssertEqual(OEMCode.madrixa.description, "OemMadrixa")
        XCTAssertEqual(OEMCode.madrixa.mnemonic, "OemMadrixa")
        XCTAssertEqual(OEMCode.madrixa.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrixa.product, "Stella")
        XCTAssertEqual(OEMCode.madrixa.dmxIn, 2)
        XCTAssertEqual(OEMCode.madrixa.dmxOut, 2)
        XCTAssertEqual(OEMCode.madrixa.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.madrixa.isRDMSupported, false)

        // OemMadrixb (0x4CB)
        XCTAssertEqual(OEMCode.madrixb, 0x4CB)
        XCTAssertEqual(OEMCode.madrixb.description, "OemMadrixb")
        XCTAssertEqual(OEMCode.madrixb.mnemonic, "OemMadrixb")
        XCTAssertEqual(OEMCode.madrixb.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrixb.product, "Orion")
        XCTAssertEqual(OEMCode.madrixb.dmxIn, 1)
        XCTAssertEqual(OEMCode.madrixb.dmxOut, 0)
        XCTAssertEqual(OEMCode.madrixb.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.madrixb.isRDMSupported, false)

        // OemMadrixc (0x4CC)
        XCTAssertEqual(OEMCode.madrixc, 0x4CC)
        XCTAssertEqual(OEMCode.madrixc.description, "OemMadrixc")
        XCTAssertEqual(OEMCode.madrixc.mnemonic, "OemMadrixc")
        XCTAssertEqual(OEMCode.madrixc.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrixc.product, "Madrix5")
        XCTAssertEqual(OEMCode.madrixc.dmxIn, 4)
        XCTAssertEqual(OEMCode.madrixc.dmxOut, 4)
        XCTAssertEqual(OEMCode.madrixc.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.madrixc.isRDMSupported, false)

        // OemMadrixd (0x4CD)
        XCTAssertEqual(OEMCode.madrixd, 0x4CD)
        XCTAssertEqual(OEMCode.madrixd.description, "OemMadrixd")
        XCTAssertEqual(OEMCode.madrixd.mnemonic, "OemMadrixd")
        XCTAssertEqual(OEMCode.madrixd.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrixd.product, "OemMadrixd")
        XCTAssertEqual(OEMCode.madrixd.dmxIn, 0)
        XCTAssertEqual(OEMCode.madrixd.dmxOut, 0)
        XCTAssertEqual(OEMCode.madrixd.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.madrixd.isRDMSupported, false)

        // OemMadrixe (0x4CE)
        XCTAssertEqual(OEMCode.madrixe, 0x4CE)
        XCTAssertEqual(OEMCode.madrixe.description, "OemMadrixe")
        XCTAssertEqual(OEMCode.madrixe.mnemonic, "OemMadrixe")
        XCTAssertEqual(OEMCode.madrixe.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrixe.product, "OemMadrixe")
        XCTAssertEqual(OEMCode.madrixe.dmxIn, 0)
        XCTAssertEqual(OEMCode.madrixe.dmxOut, 0)
        XCTAssertEqual(OEMCode.madrixe.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.madrixe.isRDMSupported, false)

        // OemMadrixf (0x4CF)
        XCTAssertEqual(OEMCode.madrixf, 0x4CF)
        XCTAssertEqual(OEMCode.madrixf.description, "OemMadrixf")
        XCTAssertEqual(OEMCode.madrixf.mnemonic, "OemMadrixf")
        XCTAssertEqual(OEMCode.madrixf.manufacturer, "inoage")
        XCTAssertEqual(OEMCode.madrixf.product, "OemMadrixf")
        XCTAssertEqual(OEMCode.madrixf.dmxIn, 0)
        XCTAssertEqual(OEMCode.madrixf.dmxOut, 0)
        XCTAssertEqual(OEMCode.madrixf.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.madrixf.isRDMSupported, false)

        // OemMae (0x4BE)
        XCTAssertEqual(OEMCode.mae, 0x4BE)
        XCTAssertEqual(OEMCode.mae.description, "OemMae")
        XCTAssertEqual(OEMCode.mae.mnemonic, "OemMae")
        XCTAssertEqual(OEMCode.mae.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.mae.product, "OemMae")
        XCTAssertEqual(OEMCode.mae.dmxIn, 0)
        XCTAssertEqual(OEMCode.mae.dmxOut, 0)
        XCTAssertEqual(OEMCode.mae.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.mae.isRDMSupported, false)

        // OemMaf (0x4BF)
        XCTAssertEqual(OEMCode.maf, 0x4BF)
        XCTAssertEqual(OEMCode.maf.description, "OemMaf")
        XCTAssertEqual(OEMCode.maf.mnemonic, "OemMaf")
        XCTAssertEqual(OEMCode.maf.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.maf.product, "OemMaf")
        XCTAssertEqual(OEMCode.maf.dmxIn, 0)
        XCTAssertEqual(OEMCode.maf.dmxOut, 0)
        XCTAssertEqual(OEMCode.maf.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.maf.isRDMSupported, false)

        // OemMAHub (0x2)
        XCTAssertEqual(OEMCode.mAHub, 0x2)
        XCTAssertEqual(OEMCode.mAHub.description, "OemMAHub")
        XCTAssertEqual(OEMCode.mAHub.mnemonic, "OemMAHub")
        XCTAssertEqual(OEMCode.mAHub.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.mAHub.product, "MAHub")
        XCTAssertEqual(OEMCode.mAHub.dmxIn, 4)
        XCTAssertEqual(OEMCode.mAHub.dmxOut, 4)
        XCTAssertEqual(OEMCode.mAHub.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.mAHub.isRDMSupported, false)

        // OemMaMaRemote (0x4B3)
        XCTAssertEqual(OEMCode.maMaRemote, 0x4B3)
        XCTAssertEqual(OEMCode.maMaRemote.description, "OemMaMaRemote")
        XCTAssertEqual(OEMCode.maMaRemote.mnemonic, "OemMaMaRemote")
        XCTAssertEqual(OEMCode.maMaRemote.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.maMaRemote.product, "Remote")
        XCTAssertEqual(OEMCode.maMaRemote.dmxIn, 0)
        XCTAssertEqual(OEMCode.maMaRemote.dmxOut, 0)
        XCTAssertEqual(OEMCode.maMaRemote.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.maMaRemote.isRDMSupported, false)

        // OemMaNdp (0x4B2)
        XCTAssertEqual(OEMCode.maNdp, 0x4B2)
        XCTAssertEqual(OEMCode.maNdp.description, "OemMaNdp")
        XCTAssertEqual(OEMCode.maNdp.mnemonic, "OemMaNdp")
        XCTAssertEqual(OEMCode.maNdp.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.maNdp.product, "Ndp")
        XCTAssertEqual(OEMCode.maNdp.dmxIn, 0)
        XCTAssertEqual(OEMCode.maNdp.dmxOut, 0)
        XCTAssertEqual(OEMCode.maNdp.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.maNdp.isRDMSupported, false)

        // OemMaNsp (0x4B1)
        XCTAssertEqual(OEMCode.maNsp, 0x4B1)
        XCTAssertEqual(OEMCode.maNsp.description, "OemMaNsp")
        XCTAssertEqual(OEMCode.maNsp.mnemonic, "OemMaNsp")
        XCTAssertEqual(OEMCode.maNsp.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.maNsp.product, "Nsp")
        XCTAssertEqual(OEMCode.maNsp.dmxIn, 0)
        XCTAssertEqual(OEMCode.maNsp.dmxOut, 4)
        XCTAssertEqual(OEMCode.maNsp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.maNsp.isRDMSupported, true)

        // OemMartE2DMX8 (0x880)
        XCTAssertEqual(OEMCode.martE2DMX8, 0x880)
        XCTAssertEqual(OEMCode.martE2DMX8.description, "OemMartE2DMX8")
        XCTAssertEqual(OEMCode.martE2DMX8.mnemonic, "OemMartE2DMX8")
        XCTAssertEqual(OEMCode.martE2DMX8.manufacturer, "Martin")
        XCTAssertEqual(OEMCode.martE2DMX8.product, "Ether2DMX8 Node")
        XCTAssertEqual(OEMCode.martE2DMX8.dmxIn, 0)
        XCTAssertEqual(OEMCode.martE2DMX8.dmxOut, 4)
        XCTAssertEqual(OEMCode.martE2DMX8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.martE2DMX8.isRDMSupported, false)

        // OemMarumoMbk350e (0xBE0)
        XCTAssertEqual(OEMCode.marumoMbk350e, 0xBE0)
        XCTAssertEqual(OEMCode.marumoMbk350e.description, "OemMarumoMbk350e")
        XCTAssertEqual(OEMCode.marumoMbk350e.mnemonic, "OemMarumoMbk350e")
        XCTAssertEqual(OEMCode.marumoMbk350e.manufacturer, "MARUMO ELECTRIC Co. Ltd")
        XCTAssertEqual(OEMCode.marumoMbk350e.product, "MBK-350E")
        XCTAssertEqual(OEMCode.marumoMbk350e.dmxIn, 0)
        XCTAssertEqual(OEMCode.marumoMbk350e.dmxOut, 4)
        XCTAssertEqual(OEMCode.marumoMbk350e.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.marumoMbk350e.isRDMSupported, false)

        // OemMarumoMbk360e (0xBE1)
        XCTAssertEqual(OEMCode.marumoMbk360e, 0xBE1)
        XCTAssertEqual(OEMCode.marumoMbk360e.description, "OemMarumoMbk360e")
        XCTAssertEqual(OEMCode.marumoMbk360e.mnemonic, "OemMarumoMbk360e")
        XCTAssertEqual(OEMCode.marumoMbk360e.manufacturer, "MARUMO ELECTRIC Co. Ltd")
        XCTAssertEqual(OEMCode.marumoMbk360e.product, "MBK-360E")
        XCTAssertEqual(OEMCode.marumoMbk360e.dmxIn, 0)
        XCTAssertEqual(OEMCode.marumoMbk360e.dmxOut, 4)
        XCTAssertEqual(OEMCode.marumoMbk360e.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.marumoMbk360e.isRDMSupported, false)

        // OemMarumoMbk370e (0xBE2)
        XCTAssertEqual(OEMCode.marumoMbk370e, 0xBE2)
        XCTAssertEqual(OEMCode.marumoMbk370e.description, "OemMarumoMbk370e")
        XCTAssertEqual(OEMCode.marumoMbk370e.mnemonic, "OemMarumoMbk370e")
        XCTAssertEqual(OEMCode.marumoMbk370e.manufacturer, "MARUMO ELECTRIC Co. Ltd")
        XCTAssertEqual(OEMCode.marumoMbk370e.product, "MBK-370E")
        XCTAssertEqual(OEMCode.marumoMbk370e.dmxIn, 2)
        XCTAssertEqual(OEMCode.marumoMbk370e.dmxOut, 0)
        XCTAssertEqual(OEMCode.marumoMbk370e.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.marumoMbk370e.isRDMSupported, false)

        // OemMasterDmxV (0x853)
        XCTAssertEqual(OEMCode.masterDmxV, 0x853)
        XCTAssertEqual(OEMCode.masterDmxV.description, "OemMasterDmxV")
        XCTAssertEqual(OEMCode.masterDmxV.mnemonic, "OemMasterDmxV")
        XCTAssertEqual(OEMCode.masterDmxV.manufacturer, "LSS Lighting")
        XCTAssertEqual(OEMCode.masterDmxV.product, "DMX-View")
        XCTAssertEqual(OEMCode.masterDmxV.dmxIn, 1)
        XCTAssertEqual(OEMCode.masterDmxV.dmxOut, 0)
        XCTAssertEqual(OEMCode.masterDmxV.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.masterDmxV.isRDMSupported, false)

        // OemMasterPort (0x851)
        XCTAssertEqual(OEMCode.masterPort, 0x851)
        XCTAssertEqual(OEMCode.masterPort.description, "OemMasterPort")
        XCTAssertEqual(OEMCode.masterPort.mnemonic, "OemMasterPort")
        XCTAssertEqual(OEMCode.masterPort.manufacturer, "LSS Lighting")
        XCTAssertEqual(OEMCode.masterPort.product, "MasterPort4")
        XCTAssertEqual(OEMCode.masterPort.dmxIn, 4)
        XCTAssertEqual(OEMCode.masterPort.dmxOut, 4)
        XCTAssertEqual(OEMCode.masterPort.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.masterPort.isRDMSupported, false)

        // OemMasterPortPs (0x852)
        XCTAssertEqual(OEMCode.masterPortPs, 0x852)
        XCTAssertEqual(OEMCode.masterPortPs.description, "OemMasterPortPs")
        XCTAssertEqual(OEMCode.masterPortPs.mnemonic, "OemMasterPortPs")
        XCTAssertEqual(OEMCode.masterPortPs.manufacturer, "LSS Lighting")
        XCTAssertEqual(OEMCode.masterPortPs.product, "MasterPortPSU")
        XCTAssertEqual(OEMCode.masterPortPs.dmxIn, 4)
        XCTAssertEqual(OEMCode.masterPortPs.dmxOut, 4)
        XCTAssertEqual(OEMCode.masterPortPs.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.masterPortPs.isRDMSupported, false)

        // OemMasterSwitch (0x850)
        XCTAssertEqual(OEMCode.masterSwitch, 0x850)
        XCTAssertEqual(OEMCode.masterSwitch.description, "OemMasterSwitch")
        XCTAssertEqual(OEMCode.masterSwitch.mnemonic, "OemMasterSwitch")
        XCTAssertEqual(OEMCode.masterSwitch.manufacturer, "LSS Lighting")
        XCTAssertEqual(OEMCode.masterSwitch.product, "MasterSwitch")
        XCTAssertEqual(OEMCode.masterSwitch.dmxIn, 2)
        XCTAssertEqual(OEMCode.masterSwitch.dmxOut, 1)
        XCTAssertEqual(OEMCode.masterSwitch.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.masterSwitch.isRDMSupported, false)

        // OemMaVPU (0x4B5)
        XCTAssertEqual(OEMCode.maVPU, 0x4B5)
        XCTAssertEqual(OEMCode.maVPU.description, "OemMaVPU")
        XCTAssertEqual(OEMCode.maVPU.mnemonic, "OemMaVPU")
        XCTAssertEqual(OEMCode.maVPU.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.maVPU.product, "VPU")
        XCTAssertEqual(OEMCode.maVPU.dmxIn, 0)
        XCTAssertEqual(OEMCode.maVPU.dmxOut, 0)
        XCTAssertEqual(OEMCode.maVPU.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.maVPU.isRDMSupported, false)

        // OemMaxNode4 (0x180)
        XCTAssertEqual(OEMCode.maxNode4, 0x180)
        XCTAssertEqual(OEMCode.maxNode4.description, "OemMaxNode4")
        XCTAssertEqual(OEMCode.maxNode4.mnemonic, "OemMaxNode4")
        XCTAssertEqual(OEMCode.maxNode4.manufacturer, "Martin")
        XCTAssertEqual(OEMCode.maxNode4.product, "Maxxyz Node")
        XCTAssertEqual(OEMCode.maxNode4.dmxIn, 4)
        XCTAssertEqual(OEMCode.maxNode4.dmxOut, 4)
        XCTAssertEqual(OEMCode.maxNode4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.maxNode4.isRDMSupported, false)

        // OemMaxP3SysCon (0x181)
        XCTAssertEqual(OEMCode.maxP3SysCon, 0x181)
        XCTAssertEqual(OEMCode.maxP3SysCon.description, "OemMaxP3SysCon")
        XCTAssertEqual(OEMCode.maxP3SysCon.mnemonic, "OemMaxP3SysCon")
        XCTAssertEqual(OEMCode.maxP3SysCon.manufacturer, "Martin")
        XCTAssertEqual(OEMCode.maxP3SysCon.product, "P3 System Controller")
        XCTAssertEqual(OEMCode.maxP3SysCon.dmxIn, 0)
        XCTAssertEqual(OEMCode.maxP3SysCon.dmxOut, 4)
        XCTAssertEqual(OEMCode.maxP3SysCon.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.maxP3SysCon.isRDMSupported, true)

        // OemMaXPortNode (0x4B6)
        XCTAssertEqual(OEMCode.maXPortNode, 0x4B6)
        XCTAssertEqual(OEMCode.maXPortNode.description, "OemMaXPortNode")
        XCTAssertEqual(OEMCode.maXPortNode.mnemonic, "OemMaXPortNode")
        XCTAssertEqual(OEMCode.maXPortNode.manufacturer, "MA Lighting")
        XCTAssertEqual(OEMCode.maXPortNode.product, "MA 2,4,8 Port Node, programmable io")
        XCTAssertEqual(OEMCode.maXPortNode.dmxIn, 0)
        XCTAssertEqual(OEMCode.maXPortNode.dmxOut, 0)
        XCTAssertEqual(OEMCode.maXPortNode.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.maXPortNode.isRDMSupported, false)

        // OemMcswe1024 (0x1130)
        XCTAssertEqual(OEMCode.mcswe1024, 0x1130)
        XCTAssertEqual(OEMCode.mcswe1024.description, "OemMcswe1024")
        XCTAssertEqual(OEMCode.mcswe1024.mnemonic, "OemMcswe1024")
        XCTAssertNil(OEMCode.mcswe1024.manufacturer)
        XCTAssertEqual(OEMCode.mcswe1024.product, "MCSWE 1024")
        XCTAssertEqual(OEMCode.mcswe1024.dmxIn, 2)
        XCTAssertEqual(OEMCode.mcswe1024.dmxOut, 2)
        XCTAssertEqual(OEMCode.mcswe1024.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.mcswe1024.isRDMSupported, false)

        // OemMcswe2048 (0x1131)
        XCTAssertEqual(OEMCode.mcswe2048, 0x1131)
        XCTAssertEqual(OEMCode.mcswe2048.description, "OemMcswe2048")
        XCTAssertEqual(OEMCode.mcswe2048.mnemonic, "OemMcswe2048")
        XCTAssertNil(OEMCode.mcswe2048.manufacturer)
        XCTAssertEqual(OEMCode.mcswe2048.product, "MCSWE 2048")
        XCTAssertEqual(OEMCode.mcswe2048.dmxIn, 4)
        XCTAssertEqual(OEMCode.mcswe2048.dmxOut, 4)
        XCTAssertEqual(OEMCode.mcswe2048.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.mcswe2048.isRDMSupported, false)

        // OemMedienMg4 (0xBB0)
        XCTAssertEqual(OEMCode.medienMg4, 0xBB0)
        XCTAssertEqual(OEMCode.medienMg4.description, "OemMedienMg4")
        XCTAssertEqual(OEMCode.medienMg4.mnemonic, "OemMedienMg4")
        XCTAssertEqual(OEMCode.medienMg4.manufacturer, "medien technik cords")
        XCTAssertEqual(OEMCode.medienMg4.product, "MGate4")
        XCTAssertEqual(OEMCode.medienMg4.dmxIn, 4)
        XCTAssertEqual(OEMCode.medienMg4.dmxOut, 4)
        XCTAssertEqual(OEMCode.medienMg4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.medienMg4.isRDMSupported, true)

        // OemMlightMidDis1 (0x284C)
        XCTAssertEqual(OEMCode.mlightMidDis1, 0x284C)
        XCTAssertEqual(OEMCode.mlightMidDis1.description, "OemMlightMidDis1")
        XCTAssertEqual(OEMCode.mlightMidDis1.mnemonic, "OemMlightMidDis1")
        XCTAssertEqual(OEMCode.mlightMidDis1.manufacturer, "M-Light")
        XCTAssertEqual(OEMCode.mlightMidDis1.product, "Mini Display 16")
        XCTAssertEqual(OEMCode.mlightMidDis1.dmxIn, 0)
        XCTAssertEqual(OEMCode.mlightMidDis1.dmxOut, 2)
        XCTAssertEqual(OEMCode.mlightMidDis1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.mlightMidDis1.isRDMSupported, false)

        // OemMogees1 (0x1120)
        XCTAssertEqual(OEMCode.mogees1, 0x1120)
        XCTAssertEqual(OEMCode.mogees1.description, "OemMogees1")
        XCTAssertEqual(OEMCode.mogees1.mnemonic, "OemMogees1")
        XCTAssertEqual(OEMCode.mogees1.manufacturer, "Mogees Ltd")
        XCTAssertEqual(OEMCode.mogees1.product, "Mogees")
        XCTAssertEqual(OEMCode.mogees1.dmxIn, 0)
        XCTAssertEqual(OEMCode.mogees1.dmxOut, 4)
        XCTAssertEqual(OEMCode.mogees1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.mogees1.isRDMSupported, false)

        // OemMovArtMnet (0x990)
        XCTAssertEqual(OEMCode.movArtMnet, 0x990)
        XCTAssertEqual(OEMCode.movArtMnet.description, "OemMovArtMnet")
        XCTAssertEqual(OEMCode.movArtMnet.mnemonic, "OemMovArtMnet")
        XCTAssertEqual(OEMCode.movArtMnet.manufacturer, "Moving Art")
        XCTAssertEqual(OEMCode.movArtMnet.product, "M-NET")
        XCTAssertEqual(OEMCode.movArtMnet.dmxIn, 1)
        XCTAssertEqual(OEMCode.movArtMnet.dmxOut, 1)
        XCTAssertEqual(OEMCode.movArtMnet.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.movArtMnet.isRDMSupported, false)

        // OemMthMed1 (0x13E0)
        XCTAssertEqual(OEMCode.mthMed1, 0x13E0)
        XCTAssertEqual(OEMCode.mthMed1.description, "OemMthMed1")
        XCTAssertEqual(OEMCode.mthMed1.mnemonic, "OemMthMed1")
        XCTAssertEqual(OEMCode.mthMed1.manufacturer, "MTH")
        XCTAssertEqual(OEMCode.mthMed1.product, "MED-LDMX512")
        XCTAssertEqual(OEMCode.mthMed1.dmxIn, 1)
        XCTAssertEqual(OEMCode.mthMed1.dmxOut, 1)
        XCTAssertEqual(OEMCode.mthMed1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.mthMed1.isRDMSupported, true)

        // OemMthMed2 (0x13E1)
        XCTAssertEqual(OEMCode.mthMed2, 0x13E1)
        XCTAssertEqual(OEMCode.mthMed2.description, "OemMthMed2")
        XCTAssertEqual(OEMCode.mthMed2.mnemonic, "OemMthMed2")
        XCTAssertEqual(OEMCode.mthMed2.manufacturer, "MTH")
        XCTAssertEqual(OEMCode.mthMed2.product, "MED-LDMX512HUB")
        XCTAssertEqual(OEMCode.mthMed2.dmxIn, 4)
        XCTAssertEqual(OEMCode.mthMed2.dmxOut, 4)
        XCTAssertEqual(OEMCode.mthMed2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.mthMed2.isRDMSupported, true)

        // OemMuelNl1 (0x9E0)
        XCTAssertEqual(OEMCode.muelNl1, 0x9E0)
        XCTAssertEqual(OEMCode.muelNl1.description, "OemMuelNl1")
        XCTAssertEqual(OEMCode.muelNl1.mnemonic, "OemMuelNl1")
        XCTAssertEqual(OEMCode.muelNl1.manufacturer, "Mueller Elektronik")
        XCTAssertEqual(OEMCode.muelNl1.product, "NetLase")
        XCTAssertEqual(OEMCode.muelNl1.dmxIn, 2)
        XCTAssertEqual(OEMCode.muelNl1.dmxOut, 3)
        XCTAssertEqual(OEMCode.muelNl1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.muelNl1.isRDMSupported, false)

        // OemMusicLightsDIAMOND371 (0x28F2)
        XCTAssertEqual(OEMCode.musicLightsDIAMOND371, 0x28F2)
        XCTAssertEqual(OEMCode.musicLightsDIAMOND371.description, "OemMusicLightsDIAMOND371")
        XCTAssertEqual(OEMCode.musicLightsDIAMOND371.mnemonic, "OemMusicLightsDIAMOND371")
        XCTAssertEqual(OEMCode.musicLightsDIAMOND371.manufacturer, "Music&Lights S.R.L.")
        XCTAssertEqual(OEMCode.musicLightsDIAMOND371.product, "DIAMOND37")
        XCTAssertEqual(OEMCode.musicLightsDIAMOND371.dmxIn, 1)
        XCTAssertEqual(OEMCode.musicLightsDIAMOND371.dmxOut, 1)
        XCTAssertEqual(OEMCode.musicLightsDIAMOND371.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.musicLightsDIAMOND371.isRDMSupported, true)

        // OemMusicLightsSTARK10001 (0x28F3)
        XCTAssertEqual(OEMCode.musicLightsSTARK10001, 0x28F3)
        XCTAssertEqual(OEMCode.musicLightsSTARK10001.description, "OemMusicLightsSTARK10001")
        XCTAssertEqual(OEMCode.musicLightsSTARK10001.mnemonic, "OemMusicLightsSTARK10001")
        XCTAssertEqual(OEMCode.musicLightsSTARK10001.manufacturer, "Music&Lights S.R.L.")
        XCTAssertEqual(OEMCode.musicLightsSTARK10001.product, "STARK1000")
        XCTAssertEqual(OEMCode.musicLightsSTARK10001.dmxIn, 1)
        XCTAssertEqual(OEMCode.musicLightsSTARK10001.dmxOut, 1)
        XCTAssertEqual(OEMCode.musicLightsSTARK10001.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.musicLightsSTARK10001.isRDMSupported, true)

        // OemNetgate (0x1)
        XCTAssertEqual(OEMCode.netgate, 0x1)
        XCTAssertEqual(OEMCode.netgate.description, "OemNetgate")
        XCTAssertEqual(OEMCode.netgate.mnemonic, "OemNetgate")
        XCTAssertEqual(OEMCode.netgate.manufacturer, "ADB")
        XCTAssertEqual(OEMCode.netgate.product, "Netgate")
        XCTAssertEqual(OEMCode.netgate.dmxIn, 4)
        XCTAssertEqual(OEMCode.netgate.dmxOut, 4)
        XCTAssertEqual(OEMCode.netgate.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.netgate.isRDMSupported, false)

        // OemNetgateXT (0x8000)
        XCTAssertEqual(OEMCode.netgateXT, 0x8000)
        XCTAssertEqual(OEMCode.netgateXT.description, "OemNetgateXT")
        XCTAssertEqual(OEMCode.netgateXT.mnemonic, "OemNetgateXT")
        XCTAssertEqual(OEMCode.netgateXT.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.netgateXT.product, "Netgate XT")
        XCTAssertEqual(OEMCode.netgateXT.dmxIn, 4)
        XCTAssertEqual(OEMCode.netgateXT.dmxOut, 4)
        XCTAssertEqual(OEMCode.netgateXT.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.netgateXT.isRDMSupported, false)

        // OemNetLinkIp (0x15)
        XCTAssertEqual(OEMCode.netLinkIp, 0x15)
        XCTAssertEqual(OEMCode.netLinkIp.description, "OemNetLinkIp")
        XCTAssertEqual(OEMCode.netLinkIp.mnemonic, "OemNetLinkIp")
        XCTAssertEqual(OEMCode.netLinkIp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.netLinkIp.product, "Net-Link IP")
        XCTAssertEqual(OEMCode.netLinkIp.dmxIn, 2)
        XCTAssertEqual(OEMCode.netLinkIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.netLinkIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.netLinkIp.isRDMSupported, false)

        // OemNetLinkOp (0x14)
        XCTAssertEqual(OEMCode.netLinkOp, 0x14)
        XCTAssertEqual(OEMCode.netLinkOp.description, "OemNetLinkOp")
        XCTAssertEqual(OEMCode.netLinkOp.mnemonic, "OemNetLinkOp")
        XCTAssertEqual(OEMCode.netLinkOp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.netLinkOp.product, "Net-Link OP")
        XCTAssertEqual(OEMCode.netLinkOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.netLinkOp.dmxOut, 2)
        XCTAssertEqual(OEMCode.netLinkOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.netLinkOp.isRDMSupported, false)

        // OemNetLynxIp2 (0x215)
        XCTAssertEqual(OEMCode.netLynxIp2, 0x215)
        XCTAssertEqual(OEMCode.netLynxIp2.description, "OemNetLynxIp2")
        XCTAssertEqual(OEMCode.netLynxIp2.mnemonic, "OemNetLynxIp2")
        XCTAssertEqual(OEMCode.netLynxIp2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.netLynxIp2.product, "Net-Lynx IP 2")
        XCTAssertEqual(OEMCode.netLynxIp2.dmxIn, 2)
        XCTAssertEqual(OEMCode.netLynxIp2.dmxOut, 0)
        XCTAssertEqual(OEMCode.netLynxIp2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.netLynxIp2.isRDMSupported, false)

        // OemNetLynxIp4 (0x20A0)
        XCTAssertEqual(OEMCode.netLynxIp4, 0x20A0)
        XCTAssertEqual(OEMCode.netLynxIp4.description, "OemNetLynxIp4")
        XCTAssertEqual(OEMCode.netLynxIp4.mnemonic, "OemNetLynxIp4")
        XCTAssertEqual(OEMCode.netLynxIp4.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.netLynxIp4.product, "Net-Lynx IP (G4)")
        XCTAssertEqual(OEMCode.netLynxIp4.dmxIn, 2)
        XCTAssertEqual(OEMCode.netLynxIp4.dmxOut, 0)
        XCTAssertEqual(OEMCode.netLynxIp4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.netLynxIp4.isRDMSupported, false)

        // OemNetLynxOp2 (0x214)
        XCTAssertEqual(OEMCode.netLynxOp2, 0x214)
        XCTAssertEqual(OEMCode.netLynxOp2.description, "OemNetLynxOp2")
        XCTAssertEqual(OEMCode.netLynxOp2.mnemonic, "OemNetLynxOp2")
        XCTAssertEqual(OEMCode.netLynxOp2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.netLynxOp2.product, "Net-Lynx OP 2")
        XCTAssertEqual(OEMCode.netLynxOp2.dmxIn, 0)
        XCTAssertEqual(OEMCode.netLynxOp2.dmxOut, 2)
        XCTAssertEqual(OEMCode.netLynxOp2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.netLynxOp2.isRDMSupported, true)

        // OemNetLynxOp4 (0x2040)
        XCTAssertEqual(OEMCode.netLynxOp4, 0x2040)
        XCTAssertEqual(OEMCode.netLynxOp4.description, "OemNetLynxOp4")
        XCTAssertEqual(OEMCode.netLynxOp4.mnemonic, "OemNetLynxOp4")
        XCTAssertEqual(OEMCode.netLynxOp4.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.netLynxOp4.product, "Net-Lynx OP (G4)")
        XCTAssertEqual(OEMCode.netLynxOp4.dmxIn, 0)
        XCTAssertEqual(OEMCode.netLynxOp4.dmxOut, 2)
        XCTAssertEqual(OEMCode.netLynxOp4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.netLynxOp4.isRDMSupported, true)

        // OemNetPatch (0x8001)
        XCTAssertEqual(OEMCode.netPatch, 0x8001)
        XCTAssertEqual(OEMCode.netPatch.description, "OemNetPatch")
        XCTAssertEqual(OEMCode.netPatch.mnemonic, "OemNetPatch")
        XCTAssertEqual(OEMCode.netPatch.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.netPatch.product, "Net-Patch")
        XCTAssertEqual(OEMCode.netPatch.dmxIn, 0)
        XCTAssertEqual(OEMCode.netPatch.dmxOut, 0)
        XCTAssertEqual(OEMCode.netPatch.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.netPatch.isRDMSupported, true)

        // OemNicoTechDi4504 (0x1020)
        XCTAssertEqual(OEMCode.nicoTechDi4504, 0x1020)
        XCTAssertEqual(OEMCode.nicoTechDi4504.description, "OemNicoTechDi4504")
        XCTAssertEqual(OEMCode.nicoTechDi4504.mnemonic, "OemNicoTechDi4504")
        XCTAssertEqual(OEMCode.nicoTechDi4504.manufacturer, "Nico Technology")
        XCTAssertEqual(OEMCode.nicoTechDi4504.product, "Nico DMX interface 4504")
        XCTAssertEqual(OEMCode.nicoTechDi4504.dmxIn, 0)
        XCTAssertEqual(OEMCode.nicoTechDi4504.dmxOut, 4)
        XCTAssertEqual(OEMCode.nicoTechDi4504.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.nicoTechDi4504.isRDMSupported, false)

        // OemNisconRay1 (0x1370)
        XCTAssertEqual(OEMCode.nisconRay1, 0x1370)
        XCTAssertEqual(OEMCode.nisconRay1.description, "OemNisconRay1")
        XCTAssertEqual(OEMCode.nisconRay1.mnemonic, "OemNisconRay1")
        XCTAssertEqual(OEMCode.nisconRay1.manufacturer, "NISCON Inc.")
        XCTAssertEqual(OEMCode.nisconRay1.product, "RAYNOK Motion Control System")
        XCTAssertEqual(OEMCode.nisconRay1.dmxIn, 4)
        XCTAssertEqual(OEMCode.nisconRay1.dmxOut, 4)
        XCTAssertEqual(OEMCode.nisconRay1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.nisconRay1.isRDMSupported, false)

        // OemNseNd1 (0x2816)
        XCTAssertEqual(OEMCode.nseNd1, 0x2816)
        XCTAssertEqual(OEMCode.nseNd1.description, "OemNseNd1")
        XCTAssertEqual(OEMCode.nseNd1.mnemonic, "OemNseNd1")
        XCTAssertEqual(OEMCode.nseNd1.manufacturer, "NightStarry Electronics Co.,LTD.")
        XCTAssertEqual(OEMCode.nseNd1.product, "Net-Dmx")
        XCTAssertEqual(OEMCode.nseNd1.dmxIn, 1)
        XCTAssertEqual(OEMCode.nseNd1.dmxOut, 1)
        XCTAssertEqual(OEMCode.nseNd1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.nseNd1.isRDMSupported, true)

        // OemNseNn16 (0x2818)
        XCTAssertEqual(OEMCode.nseNn16, 0x2818)
        XCTAssertEqual(OEMCode.nseNn16.description, "OemNseNn16")
        XCTAssertEqual(OEMCode.nseNn16.mnemonic, "OemNseNn16")
        XCTAssertEqual(OEMCode.nseNn16.manufacturer, "NightStarry Electronics Co.,LTD.")
        XCTAssertEqual(OEMCode.nseNn16.product, "Net-Node:16")
        XCTAssertEqual(OEMCode.nseNn16.dmxIn, 16)
        XCTAssertEqual(OEMCode.nseNn16.dmxOut, 16)
        XCTAssertEqual(OEMCode.nseNn16.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.nseNn16.isRDMSupported, true)

        // OemNseNn32 (0x2817)
        XCTAssertEqual(OEMCode.nseNn32, 0x2817)
        XCTAssertEqual(OEMCode.nseNn32.description, "OemNseNn32")
        XCTAssertEqual(OEMCode.nseNn32.mnemonic, "OemNseNn32")
        XCTAssertEqual(OEMCode.nseNn32.manufacturer, "NightStarry Electronics Co.,LTD.")
        XCTAssertEqual(OEMCode.nseNn32.product, "Net-Node:32")
        XCTAssertEqual(OEMCode.nseNn32.dmxIn, 32)
        XCTAssertEqual(OEMCode.nseNn32.dmxOut, 32)
        XCTAssertEqual(OEMCode.nseNn32.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.nseNn32.isRDMSupported, true)

        // OemNseNn4 (0x281A)
        XCTAssertEqual(OEMCode.nseNn4, 0x281A)
        XCTAssertEqual(OEMCode.nseNn4.description, "OemNseNn4")
        XCTAssertEqual(OEMCode.nseNn4.mnemonic, "OemNseNn4")
        XCTAssertEqual(OEMCode.nseNn4.manufacturer, "NightStarry Electronics Co.,LTD.")
        XCTAssertEqual(OEMCode.nseNn4.product, "Net-Node:4")
        XCTAssertEqual(OEMCode.nseNn4.dmxIn, 4)
        XCTAssertEqual(OEMCode.nseNn4.dmxOut, 4)
        XCTAssertEqual(OEMCode.nseNn4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.nseNn4.isRDMSupported, true)

        // OemNseNn8 (0x2819)
        XCTAssertEqual(OEMCode.nseNn8, 0x2819)
        XCTAssertEqual(OEMCode.nseNn8.description, "OemNseNn8")
        XCTAssertEqual(OEMCode.nseNn8.mnemonic, "OemNseNn8")
        XCTAssertEqual(OEMCode.nseNn8.manufacturer, "NightStarry Electronics Co.,LTD.")
        XCTAssertEqual(OEMCode.nseNn8.product, "Net-Node:8")
        XCTAssertEqual(OEMCode.nseNn8.dmxIn, 8)
        XCTAssertEqual(OEMCode.nseNn8.dmxOut, 8)
        XCTAssertEqual(OEMCode.nseNn8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.nseNn8.isRDMSupported, true)

        // OemNuDeltaLog1 (0x28A5)
        XCTAssertEqual(OEMCode.nuDeltaLog1, 0x28A5)
        XCTAssertEqual(OEMCode.nuDeltaLog1.description, "OemNuDeltaLog1")
        XCTAssertEqual(OEMCode.nuDeltaLog1.mnemonic, "OemNuDeltaLog1")
        XCTAssertEqual(OEMCode.nuDeltaLog1.manufacturer, "NuDelta Digital")
        XCTAssertEqual(OEMCode.nuDeltaLog1.product, "LogiCue")
        XCTAssertEqual(OEMCode.nuDeltaLog1.dmxIn, 4)
        XCTAssertEqual(OEMCode.nuDeltaLog1.dmxOut, 4)
        XCTAssertEqual(OEMCode.nuDeltaLog1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.nuDeltaLog1.isRDMSupported, true)

        // OemOarwSm1 (0x9D0)
        XCTAssertEqual(OEMCode.oarwSm1, 0x9D0)
        XCTAssertEqual(OEMCode.oarwSm1.description, "OemOarwSm1")
        XCTAssertEqual(OEMCode.oarwSm1.mnemonic, "OemOarwSm1")
        XCTAssertEqual(OEMCode.oarwSm1.manufacturer, "Oarw")
        XCTAssertEqual(OEMCode.oarwSm1.product, "Screen Monkey")
        XCTAssertEqual(OEMCode.oarwSm1.dmxIn, 0)
        XCTAssertEqual(OEMCode.oarwSm1.dmxOut, 1)
        XCTAssertEqual(OEMCode.oarwSm1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.oarwSm1.isRDMSupported, false)

        // OemOpenClear0 (0x490)
        XCTAssertEqual(OEMCode.openClear0, 0x490)
        XCTAssertEqual(OEMCode.openClear0.description, "OemOpenClear0")
        XCTAssertEqual(OEMCode.openClear0.mnemonic, "OemOpenClear0")
        XCTAssertEqual(OEMCode.openClear0.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClear0.product, "OemOpenClear0")
        XCTAssertEqual(OEMCode.openClear0.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClear0.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClear0.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClear0.isRDMSupported, false)

        // OemOpenClear1 (0x491)
        XCTAssertEqual(OEMCode.openClear1, 0x491)
        XCTAssertEqual(OEMCode.openClear1.description, "OemOpenClear1")
        XCTAssertEqual(OEMCode.openClear1.mnemonic, "OemOpenClear1")
        XCTAssertEqual(OEMCode.openClear1.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClear1.product, "OemOpenClear1")
        XCTAssertEqual(OEMCode.openClear1.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClear1.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClear1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClear1.isRDMSupported, false)

        // OemOpenClear2 (0x492)
        XCTAssertEqual(OEMCode.openClear2, 0x492)
        XCTAssertEqual(OEMCode.openClear2.description, "OemOpenClear2")
        XCTAssertEqual(OEMCode.openClear2.mnemonic, "OemOpenClear2")
        XCTAssertEqual(OEMCode.openClear2.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClear2.product, "OemOpenClear2")
        XCTAssertEqual(OEMCode.openClear2.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClear2.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClear2.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClear2.isRDMSupported, false)

        // OemOpenClear3 (0x493)
        XCTAssertEqual(OEMCode.openClear3, 0x493)
        XCTAssertEqual(OEMCode.openClear3.description, "OemOpenClear3")
        XCTAssertEqual(OEMCode.openClear3.mnemonic, "OemOpenClear3")
        XCTAssertEqual(OEMCode.openClear3.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClear3.product, "OemOpenClear3")
        XCTAssertEqual(OEMCode.openClear3.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClear3.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClear3.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClear3.isRDMSupported, false)

        // OemOpenClear4 (0x494)
        XCTAssertEqual(OEMCode.openClear4, 0x494)
        XCTAssertEqual(OEMCode.openClear4.description, "OemOpenClear4")
        XCTAssertEqual(OEMCode.openClear4.mnemonic, "OemOpenClear4")
        XCTAssertEqual(OEMCode.openClear4.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClear4.product, "OemOpenClear4")
        XCTAssertEqual(OEMCode.openClear4.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClear4.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClear4.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClear4.isRDMSupported, false)

        // OemOpenClear5 (0x495)
        XCTAssertEqual(OEMCode.openClear5, 0x495)
        XCTAssertEqual(OEMCode.openClear5.description, "OemOpenClear5")
        XCTAssertEqual(OEMCode.openClear5.mnemonic, "OemOpenClear5")
        XCTAssertEqual(OEMCode.openClear5.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClear5.product, "OemOpenClear5")
        XCTAssertEqual(OEMCode.openClear5.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClear5.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClear5.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClear5.isRDMSupported, false)

        // OemOpenClear6 (0x496)
        XCTAssertEqual(OEMCode.openClear6, 0x496)
        XCTAssertEqual(OEMCode.openClear6.description, "OemOpenClear6")
        XCTAssertEqual(OEMCode.openClear6.mnemonic, "OemOpenClear6")
        XCTAssertEqual(OEMCode.openClear6.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClear6.product, "OemOpenClear6")
        XCTAssertEqual(OEMCode.openClear6.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClear6.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClear6.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClear6.isRDMSupported, false)

        // OemOpenClear7 (0x497)
        XCTAssertEqual(OEMCode.openClear7, 0x497)
        XCTAssertEqual(OEMCode.openClear7.description, "OemOpenClear7")
        XCTAssertEqual(OEMCode.openClear7.mnemonic, "OemOpenClear7")
        XCTAssertEqual(OEMCode.openClear7.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClear7.product, "OemOpenClear7")
        XCTAssertEqual(OEMCode.openClear7.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClear7.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClear7.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClear7.isRDMSupported, false)

        // OemOpenClear8 (0x498)
        XCTAssertEqual(OEMCode.openClear8, 0x498)
        XCTAssertEqual(OEMCode.openClear8.description, "OemOpenClear8")
        XCTAssertEqual(OEMCode.openClear8.mnemonic, "OemOpenClear8")
        XCTAssertEqual(OEMCode.openClear8.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClear8.product, "OemOpenClear8")
        XCTAssertEqual(OEMCode.openClear8.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClear8.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClear8.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClear8.isRDMSupported, false)

        // OemOpenClear9 (0x499)
        XCTAssertEqual(OEMCode.openClear9, 0x499)
        XCTAssertEqual(OEMCode.openClear9.description, "OemOpenClear9")
        XCTAssertEqual(OEMCode.openClear9.mnemonic, "OemOpenClear9")
        XCTAssertEqual(OEMCode.openClear9.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClear9.product, "OemOpenClear9")
        XCTAssertEqual(OEMCode.openClear9.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClear9.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClear9.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClear9.isRDMSupported, false)

        // OemOpenCleara (0x49A)
        XCTAssertEqual(OEMCode.openCleara, 0x49A)
        XCTAssertEqual(OEMCode.openCleara.description, "OemOpenCleara")
        XCTAssertEqual(OEMCode.openCleara.mnemonic, "OemOpenCleara")
        XCTAssertEqual(OEMCode.openCleara.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openCleara.product, "OemOpenCleara")
        XCTAssertEqual(OEMCode.openCleara.dmxIn, 0)
        XCTAssertEqual(OEMCode.openCleara.dmxOut, 0)
        XCTAssertEqual(OEMCode.openCleara.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openCleara.isRDMSupported, false)

        // OemOpenClearb (0x49B)
        XCTAssertEqual(OEMCode.openClearb, 0x49B)
        XCTAssertEqual(OEMCode.openClearb.description, "OemOpenClearb")
        XCTAssertEqual(OEMCode.openClearb.mnemonic, "OemOpenClearb")
        XCTAssertEqual(OEMCode.openClearb.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClearb.product, "OemOpenClearb")
        XCTAssertEqual(OEMCode.openClearb.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClearb.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClearb.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClearb.isRDMSupported, false)

        // OemOpenClearc (0x49C)
        XCTAssertEqual(OEMCode.openClearc, 0x49C)
        XCTAssertEqual(OEMCode.openClearc.description, "OemOpenClearc")
        XCTAssertEqual(OEMCode.openClearc.mnemonic, "OemOpenClearc")
        XCTAssertEqual(OEMCode.openClearc.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClearc.product, "OemOpenClearc")
        XCTAssertEqual(OEMCode.openClearc.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClearc.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClearc.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClearc.isRDMSupported, false)

        // OemOpenCleard (0x49D)
        XCTAssertEqual(OEMCode.openCleard, 0x49D)
        XCTAssertEqual(OEMCode.openCleard.description, "OemOpenCleard")
        XCTAssertEqual(OEMCode.openCleard.mnemonic, "OemOpenCleard")
        XCTAssertEqual(OEMCode.openCleard.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openCleard.product, "OemOpenCleard")
        XCTAssertEqual(OEMCode.openCleard.dmxIn, 0)
        XCTAssertEqual(OEMCode.openCleard.dmxOut, 0)
        XCTAssertEqual(OEMCode.openCleard.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openCleard.isRDMSupported, false)

        // OemOpenCleare (0x49E)
        XCTAssertEqual(OEMCode.openCleare, 0x49E)
        XCTAssertEqual(OEMCode.openCleare.description, "OemOpenCleare")
        XCTAssertEqual(OEMCode.openCleare.mnemonic, "OemOpenCleare")
        XCTAssertEqual(OEMCode.openCleare.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openCleare.product, "OemOpenCleare")
        XCTAssertEqual(OEMCode.openCleare.dmxIn, 0)
        XCTAssertEqual(OEMCode.openCleare.dmxOut, 0)
        XCTAssertEqual(OEMCode.openCleare.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openCleare.isRDMSupported, false)

        // OemOpenClearf (0x49F)
        XCTAssertEqual(OEMCode.openClearf, 0x49F)
        XCTAssertEqual(OEMCode.openClearf.description, "OemOpenClearf")
        XCTAssertEqual(OEMCode.openClearf.mnemonic, "OemOpenClearf")
        XCTAssertEqual(OEMCode.openClearf.manufacturer, "Open Clear")
        XCTAssertEqual(OEMCode.openClearf.product, "OemOpenClearf")
        XCTAssertEqual(OEMCode.openClearf.dmxIn, 0)
        XCTAssertEqual(OEMCode.openClearf.dmxOut, 0)
        XCTAssertEqual(OEMCode.openClearf.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.openClearf.isRDMSupported, false)

        // OemOpenlux (0x1C0)
        XCTAssertEqual(OEMCode.openlux, 0x1C0)
        XCTAssertEqual(OEMCode.openlux.description, "OemOpenlux")
        XCTAssertEqual(OEMCode.openlux.mnemonic, "OemOpenlux")
        XCTAssertEqual(OEMCode.openlux.manufacturer, "Nondim Enterprises")
        XCTAssertEqual(OEMCode.openlux.product, "Openlux")
        XCTAssertEqual(OEMCode.openlux.dmxIn, 4)
        XCTAssertEqual(OEMCode.openlux.dmxOut, 4)
        XCTAssertEqual(OEMCode.openlux.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.openlux.isRDMSupported, false)

        // OemOpenLxEasyDmx1 (0x287A)
        XCTAssertEqual(OEMCode.openLxEasyDmx1, 0x287A)
        XCTAssertEqual(OEMCode.openLxEasyDmx1.description, "OemOpenLxEasyDmx1")
        XCTAssertEqual(OEMCode.openLxEasyDmx1.mnemonic, "OemOpenLxEasyDmx1")
        XCTAssertEqual(OEMCode.openLxEasyDmx1.manufacturer, "OpenLX SP Ltd")
        XCTAssertEqual(OEMCode.openLxEasyDmx1.product, "EasyDMX")
        XCTAssertEqual(OEMCode.openLxEasyDmx1.dmxIn, 0)
        XCTAssertEqual(OEMCode.openLxEasyDmx1.dmxOut, 1)
        XCTAssertEqual(OEMCode.openLxEasyDmx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.openLxEasyDmx1.isRDMSupported, false)

        // OemOpitOct1 (0x13D4)
        XCTAssertEqual(OEMCode.opitOct1, 0x13D4)
        XCTAssertEqual(OEMCode.opitOct1.description, "OemOpitOct1")
        XCTAssertEqual(OEMCode.opitOct1.mnemonic, "OemOpitOct1")
        XCTAssertEqual(OEMCode.opitOct1.manufacturer, "Opito Labs GmbH")
        XCTAssertEqual(OEMCode.opitOct1.product, "Opito Converter Toolkit")
        XCTAssertEqual(OEMCode.opitOct1.dmxIn, 4)
        XCTAssertEqual(OEMCode.opitOct1.dmxOut, 4)
        XCTAssertEqual(OEMCode.opitOct1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.opitOct1.isRDMSupported, false)

        // OemOpitOvc1 (0x13D5)
        XCTAssertEqual(OEMCode.opitOvc1, 0x13D5)
        XCTAssertEqual(OEMCode.opitOvc1.description, "OemOpitOvc1")
        XCTAssertEqual(OEMCode.opitOvc1.mnemonic, "OemOpitOvc1")
        XCTAssertEqual(OEMCode.opitOvc1.manufacturer, "Opito Labs GmbH")
        XCTAssertEqual(OEMCode.opitOvc1.product, "Opito Video Controller")
        XCTAssertEqual(OEMCode.opitOvc1.dmxIn, 0)
        XCTAssertEqual(OEMCode.opitOvc1.dmxOut, 1)
        XCTAssertEqual(OEMCode.opitOvc1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.opitOvc1.isRDMSupported, false)

        // OemOttecFog1 (0x11A0)
        XCTAssertEqual(OEMCode.ottecFog1, 0x11A0)
        XCTAssertEqual(OEMCode.ottecFog1.description, "OemOttecFog1")
        XCTAssertEqual(OEMCode.ottecFog1.mnemonic, "OemOttecFog1")
        XCTAssertEqual(OEMCode.ottecFog1.manufacturer, "OTTEC Technology GmbH")
        XCTAssertEqual(OEMCode.ottecFog1.product, "Fogmachine")
        XCTAssertEqual(OEMCode.ottecFog1.dmxIn, 0)
        XCTAssertEqual(OEMCode.ottecFog1.dmxOut, 1)
        XCTAssertEqual(OEMCode.ottecFog1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ottecFog1.isRDMSupported, true)

        // OemPacNorthClst (0x1220)
        XCTAssertEqual(OEMCode.pacNorthClst, 0x1220)
        XCTAssertEqual(OEMCode.pacNorthClst.description, "OemPacNorthClst")
        XCTAssertEqual(OEMCode.pacNorthClst.mnemonic, "OemPacNorthClst")
        XCTAssertEqual(OEMCode.pacNorthClst.manufacturer, "Pacific Northwest National Laboratory")
        XCTAssertEqual(OEMCode.pacNorthClst.product, "PNNL Connected Lighting System Testbed")
        XCTAssertEqual(OEMCode.pacNorthClst.dmxIn, 1)
        XCTAssertEqual(OEMCode.pacNorthClst.dmxOut, 1)
        XCTAssertEqual(OEMCode.pacNorthClst.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pacNorthClst.isRDMSupported, false)

        // OemPanEmitAx (0xF90)
        XCTAssertEqual(OEMCode.panEmitAx, 0xF90)
        XCTAssertEqual(OEMCode.panEmitAx.description, "OemPanEmitAx")
        XCTAssertEqual(OEMCode.panEmitAx.mnemonic, "OemPanEmitAx")
        XCTAssertEqual(OEMCode.panEmitAx.manufacturer, "Panasonic Corporation")
        XCTAssertEqual(OEMCode.panEmitAx.product, "EMIT-AX")
        XCTAssertEqual(OEMCode.panEmitAx.dmxIn, 2)
        XCTAssertEqual(OEMCode.panEmitAx.dmxOut, 2)
        XCTAssertEqual(OEMCode.panEmitAx.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.panEmitAx.isRDMSupported, false)

        // OemPangoAvrEd (0x11F1)
        XCTAssertEqual(OEMCode.pangoAvrEd, 0x11F1)
        XCTAssertEqual(OEMCode.pangoAvrEd.description, "OemPangoAvrEd")
        XCTAssertEqual(OEMCode.pangoAvrEd.mnemonic, "OemPangoAvrEd")
        XCTAssertEqual(OEMCode.pangoAvrEd.manufacturer, "Pangolin Laser Systems Inc")
        XCTAssertEqual(OEMCode.pangoAvrEd.product, "AVR Ethernet DMX")
        XCTAssertEqual(OEMCode.pangoAvrEd.dmxIn, 1)
        XCTAssertEqual(OEMCode.pangoAvrEd.dmxOut, 1)
        XCTAssertEqual(OEMCode.pangoAvrEd.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pangoAvrEd.isRDMSupported, false)

        // OemPangoFb4se (0x11F0)
        XCTAssertEqual(OEMCode.pangoFb4se, 0x11F0)
        XCTAssertEqual(OEMCode.pangoFb4se.description, "OemPangoFb4se")
        XCTAssertEqual(OEMCode.pangoFb4se.mnemonic, "OemPangoFb4se")
        XCTAssertEqual(OEMCode.pangoFb4se.manufacturer, "Pangolin Laser Systems Inc")
        XCTAssertEqual(OEMCode.pangoFb4se.product, "FB4-SE")
        XCTAssertEqual(OEMCode.pangoFb4se.dmxIn, 1)
        XCTAssertEqual(OEMCode.pangoFb4se.dmxOut, 1)
        XCTAssertEqual(OEMCode.pangoFb4se.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pangoFb4se.isRDMSupported, true)

        // OemPanProj1 (0xF91)
        XCTAssertEqual(OEMCode.panProj1, 0xF91)
        XCTAssertEqual(OEMCode.panProj1.description, "OemPanProj1")
        XCTAssertEqual(OEMCode.panProj1.mnemonic, "OemPanProj1")
        XCTAssertEqual(OEMCode.panProj1.manufacturer, "Panasonic Corporation")
        XCTAssertEqual(OEMCode.panProj1.product, "Projector")
        XCTAssertEqual(OEMCode.panProj1.dmxIn, 1)
        XCTAssertEqual(OEMCode.panProj1.dmxOut, 0)
        XCTAssertEqual(OEMCode.panProj1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.panProj1.isRDMSupported, false)

        // OemPathportI1 (0x413)
        XCTAssertEqual(OEMCode.pathportI1, 0x413)
        XCTAssertEqual(OEMCode.pathportI1.description, "OemPathportI1")
        XCTAssertEqual(OEMCode.pathportI1.mnemonic, "OemPathportI1")
        XCTAssertEqual(OEMCode.pathportI1.manufacturer, "Pathport")
        XCTAssertEqual(OEMCode.pathportI1.product, "1 in")
        XCTAssertEqual(OEMCode.pathportI1.dmxIn, 1)
        XCTAssertEqual(OEMCode.pathportI1.dmxOut, 0)
        XCTAssertEqual(OEMCode.pathportI1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pathportI1.isRDMSupported, true)

        // OemPathportI2 (0x411)
        XCTAssertEqual(OEMCode.pathportI2, 0x411)
        XCTAssertEqual(OEMCode.pathportI2.description, "OemPathportI2")
        XCTAssertEqual(OEMCode.pathportI2.mnemonic, "OemPathportI2")
        XCTAssertEqual(OEMCode.pathportI2.manufacturer, "Pathport")
        XCTAssertEqual(OEMCode.pathportI2.product, "2 in")
        XCTAssertEqual(OEMCode.pathportI2.dmxIn, 2)
        XCTAssertEqual(OEMCode.pathportI2.dmxOut, 0)
        XCTAssertEqual(OEMCode.pathportI2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pathportI2.isRDMSupported, true)

        // OemPathportO1 (0x412)
        XCTAssertEqual(OEMCode.pathportO1, 0x412)
        XCTAssertEqual(OEMCode.pathportO1.description, "OemPathportO1")
        XCTAssertEqual(OEMCode.pathportO1.mnemonic, "OemPathportO1")
        XCTAssertEqual(OEMCode.pathportO1.manufacturer, "Pathport")
        XCTAssertEqual(OEMCode.pathportO1.product, "1 out")
        XCTAssertEqual(OEMCode.pathportO1.dmxIn, 0)
        XCTAssertEqual(OEMCode.pathportO1.dmxOut, 1)
        XCTAssertEqual(OEMCode.pathportO1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pathportO1.isRDMSupported, true)

        // OemPathportO2 (0x410)
        XCTAssertEqual(OEMCode.pathportO2, 0x410)
        XCTAssertEqual(OEMCode.pathportO2.description, "OemPathportO2")
        XCTAssertEqual(OEMCode.pathportO2.mnemonic, "OemPathportO2")
        XCTAssertEqual(OEMCode.pathportO2.manufacturer, "Pathport")
        XCTAssertEqual(OEMCode.pathportO2.product, "2 out")
        XCTAssertEqual(OEMCode.pathportO2.dmxIn, 0)
        XCTAssertEqual(OEMCode.pathportO2.dmxOut, 2)
        XCTAssertEqual(OEMCode.pathportO2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pathportO2.isRDMSupported, true)

        // OemPeterMaesEthDmxD1 (0xD00)
        XCTAssertEqual(OEMCode.peterMaesEthDmxD1, 0xD00)
        XCTAssertEqual(OEMCode.peterMaesEthDmxD1.description, "OemPeterMaesEthDmxD1")
        XCTAssertEqual(OEMCode.peterMaesEthDmxD1.mnemonic, "OemPeterMaesEthDmxD1")
        XCTAssertEqual(OEMCode.peterMaesEthDmxD1.manufacturer, "Peter Maes Technology")
        XCTAssertEqual(OEMCode.peterMaesEthDmxD1.product, "EtherDmxLinkDuo")
        XCTAssertEqual(OEMCode.peterMaesEthDmxD1.dmxIn, 2)
        XCTAssertEqual(OEMCode.peterMaesEthDmxD1.dmxOut, 2)
        XCTAssertEqual(OEMCode.peterMaesEthDmxD1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.peterMaesEthDmxD1.isRDMSupported, true)

        // OemPeterMeyProDmxD1 (0x1290)
        XCTAssertEqual(OEMCode.peterMeyProDmxD1, 0x1290)
        XCTAssertEqual(OEMCode.peterMeyProDmxD1.description, "OemPeterMeyProDmxD1")
        XCTAssertEqual(OEMCode.peterMeyProDmxD1.mnemonic, "OemPeterMeyProDmxD1")
        XCTAssertEqual(OEMCode.peterMeyProDmxD1.manufacturer, "Peter Meyer Project Management Adviser GmbH")
        XCTAssertEqual(OEMCode.peterMeyProDmxD1.product, "PMA DMX Driver")
        XCTAssertEqual(OEMCode.peterMeyProDmxD1.dmxIn, 0)
        XCTAssertEqual(OEMCode.peterMeyProDmxD1.dmxOut, 1)
        XCTAssertEqual(OEMCode.peterMeyProDmxD1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.peterMeyProDmxD1.isRDMSupported, true)

        // OemPharos3 (0x4F3)
        XCTAssertEqual(OEMCode.pharos3, 0x4F3)
        XCTAssertEqual(OEMCode.pharos3.description, "OemPharos3")
        XCTAssertEqual(OEMCode.pharos3.mnemonic, "OemPharos3")
        XCTAssertEqual(OEMCode.pharos3.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharos3.product, "OemPharos3")
        XCTAssertEqual(OEMCode.pharos3.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharos3.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharos3.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharos3.isRDMSupported, false)

        // OemPharos4 (0x4F4)
        XCTAssertEqual(OEMCode.pharos4, 0x4F4)
        XCTAssertEqual(OEMCode.pharos4.description, "OemPharos4")
        XCTAssertEqual(OEMCode.pharos4.mnemonic, "OemPharos4")
        XCTAssertEqual(OEMCode.pharos4.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharos4.product, "OemPharos4")
        XCTAssertEqual(OEMCode.pharos4.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharos4.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharos4.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharos4.isRDMSupported, false)

        // OemPharos5 (0x4F5)
        XCTAssertEqual(OEMCode.pharos5, 0x4F5)
        XCTAssertEqual(OEMCode.pharos5.description, "OemPharos5")
        XCTAssertEqual(OEMCode.pharos5.mnemonic, "OemPharos5")
        XCTAssertEqual(OEMCode.pharos5.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharos5.product, "OemPharos5")
        XCTAssertEqual(OEMCode.pharos5.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharos5.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharos5.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharos5.isRDMSupported, false)

        // OemPharos6 (0x4F6)
        XCTAssertEqual(OEMCode.pharos6, 0x4F6)
        XCTAssertEqual(OEMCode.pharos6.description, "OemPharos6")
        XCTAssertEqual(OEMCode.pharos6.mnemonic, "OemPharos6")
        XCTAssertEqual(OEMCode.pharos6.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharos6.product, "OemPharos6")
        XCTAssertEqual(OEMCode.pharos6.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharos6.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharos6.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharos6.isRDMSupported, false)

        // OemPharos7 (0x4F7)
        XCTAssertEqual(OEMCode.pharos7, 0x4F7)
        XCTAssertEqual(OEMCode.pharos7.description, "OemPharos7")
        XCTAssertEqual(OEMCode.pharos7.mnemonic, "OemPharos7")
        XCTAssertEqual(OEMCode.pharos7.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharos7.product, "OemPharos7")
        XCTAssertEqual(OEMCode.pharos7.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharos7.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharos7.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharos7.isRDMSupported, false)

        // OemPharos8 (0x4F8)
        XCTAssertEqual(OEMCode.pharos8, 0x4F8)
        XCTAssertEqual(OEMCode.pharos8.description, "OemPharos8")
        XCTAssertEqual(OEMCode.pharos8.mnemonic, "OemPharos8")
        XCTAssertEqual(OEMCode.pharos8.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharos8.product, "OemPharos8")
        XCTAssertEqual(OEMCode.pharos8.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharos8.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharos8.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharos8.isRDMSupported, false)

        // OemPharos9 (0x4F9)
        XCTAssertEqual(OEMCode.pharos9, 0x4F9)
        XCTAssertEqual(OEMCode.pharos9.description, "OemPharos9")
        XCTAssertEqual(OEMCode.pharos9.mnemonic, "OemPharos9")
        XCTAssertEqual(OEMCode.pharos9.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharos9.product, "OemPharos9")
        XCTAssertEqual(OEMCode.pharos9.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharos9.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharos9.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharos9.isRDMSupported, false)

        // OemPharosa (0x4FA)
        XCTAssertEqual(OEMCode.pharosa, 0x4FA)
        XCTAssertEqual(OEMCode.pharosa.description, "OemPharosa")
        XCTAssertEqual(OEMCode.pharosa.mnemonic, "OemPharosa")
        XCTAssertEqual(OEMCode.pharosa.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharosa.product, "OemPharosa")
        XCTAssertEqual(OEMCode.pharosa.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharosa.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharosa.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharosa.isRDMSupported, false)

        // OemPharosb (0x4FB)
        XCTAssertEqual(OEMCode.pharosb, 0x4FB)
        XCTAssertEqual(OEMCode.pharosb.description, "OemPharosb")
        XCTAssertEqual(OEMCode.pharosb.mnemonic, "OemPharosb")
        XCTAssertEqual(OEMCode.pharosb.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharosb.product, "OemPharosb")
        XCTAssertEqual(OEMCode.pharosb.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharosb.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharosb.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharosb.isRDMSupported, false)

        // OemPharosc (0x4FC)
        XCTAssertEqual(OEMCode.pharosc, 0x4FC)
        XCTAssertEqual(OEMCode.pharosc.description, "OemPharosc")
        XCTAssertEqual(OEMCode.pharosc.mnemonic, "OemPharosc")
        XCTAssertEqual(OEMCode.pharosc.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharosc.product, "OemPharosc")
        XCTAssertEqual(OEMCode.pharosc.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharosc.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharosc.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharosc.isRDMSupported, false)

        // OemPharosd (0x4FD)
        XCTAssertEqual(OEMCode.pharosd, 0x4FD)
        XCTAssertEqual(OEMCode.pharosd.description, "OemPharosd")
        XCTAssertEqual(OEMCode.pharosd.mnemonic, "OemPharosd")
        XCTAssertEqual(OEMCode.pharosd.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharosd.product, "OemPharosd")
        XCTAssertEqual(OEMCode.pharosd.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharosd.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharosd.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharosd.isRDMSupported, false)

        // OemPharose (0x4FE)
        XCTAssertEqual(OEMCode.pharose, 0x4FE)
        XCTAssertEqual(OEMCode.pharose.description, "OemPharose")
        XCTAssertEqual(OEMCode.pharose.mnemonic, "OemPharose")
        XCTAssertEqual(OEMCode.pharose.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharose.product, "OemPharose")
        XCTAssertEqual(OEMCode.pharose.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharose.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharose.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharose.isRDMSupported, false)

        // OemPharosf (0x4FF)
        XCTAssertEqual(OEMCode.pharosf, 0x4FF)
        XCTAssertEqual(OEMCode.pharosf.description, "OemPharosf")
        XCTAssertEqual(OEMCode.pharosf.mnemonic, "OemPharosf")
        XCTAssertEqual(OEMCode.pharosf.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharosf.product, "OemPharosf")
        XCTAssertEqual(OEMCode.pharosf.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharosf.dmxOut, 0)
        XCTAssertEqual(OEMCode.pharosf.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharosf.isRDMSupported, false)

        // OemPharosLpc1 (0x4F1)
        XCTAssertEqual(OEMCode.pharosLpc1, 0x4F1)
        XCTAssertEqual(OEMCode.pharosLpc1.description, "OemPharosLpc1")
        XCTAssertEqual(OEMCode.pharosLpc1.mnemonic, "OemPharosLpc1")
        XCTAssertEqual(OEMCode.pharosLpc1.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharosLpc1.product, "OemPharosLpc1")
        XCTAssertEqual(OEMCode.pharosLpc1.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharosLpc1.dmxOut, 1)
        XCTAssertEqual(OEMCode.pharosLpc1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharosLpc1.isRDMSupported, false)

        // OemPharosLpc2 (0x4F2)
        XCTAssertEqual(OEMCode.pharosLpc2, 0x4F2)
        XCTAssertEqual(OEMCode.pharosLpc2.description, "OemPharosLpc2")
        XCTAssertEqual(OEMCode.pharosLpc2.mnemonic, "OemPharosLpc2")
        XCTAssertEqual(OEMCode.pharosLpc2.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharosLpc2.product, "OemPharosLpc2")
        XCTAssertEqual(OEMCode.pharosLpc2.dmxIn, 0)
        XCTAssertEqual(OEMCode.pharosLpc2.dmxOut, 2)
        XCTAssertEqual(OEMCode.pharosLpc2.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharosLpc2.isRDMSupported, false)

        // OemPharosLpcx (0x4F0)
        XCTAssertEqual(OEMCode.pharosLpcx, 0x4F0)
        XCTAssertEqual(OEMCode.pharosLpcx.description, "OemPharosLpcx")
        XCTAssertEqual(OEMCode.pharosLpcx.mnemonic, "OemPharosLpcx")
        XCTAssertEqual(OEMCode.pharosLpcx.manufacturer, "Pharos Architectural Controls")
        XCTAssertEqual(OEMCode.pharosLpcx.product, "LPCX")
        XCTAssertEqual(OEMCode.pharosLpcx.dmxIn, 1)
        XCTAssertEqual(OEMCode.pharosLpcx.dmxOut, 4)
        XCTAssertEqual(OEMCode.pharosLpcx.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pharosLpcx.isRDMSupported, false)

        // OemPhilColKinBlazeTrx (0xE40)
        XCTAssertEqual(OEMCode.philColKinBlazeTrx, 0xE40)
        XCTAssertEqual(OEMCode.philColKinBlazeTrx.description, "OemPhilColKinBlazeTrx")
        XCTAssertEqual(OEMCode.philColKinBlazeTrx.mnemonic, "OemPhilColKinBlazeTrx")
        XCTAssertEqual(OEMCode.philColKinBlazeTrx.manufacturer, "Philips Color Kinetics")
        XCTAssertEqual(OEMCode.philColKinBlazeTrx.product, "ColorBlaze TRX")
        XCTAssertEqual(OEMCode.philColKinBlazeTrx.dmxIn, 1)
        XCTAssertEqual(OEMCode.philColKinBlazeTrx.dmxOut, 1)
        XCTAssertEqual(OEMCode.philColKinBlazeTrx.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.philColKinBlazeTrx.isRDMSupported, false)

        // OemPhilipsLtp1 (0xF70)
        XCTAssertEqual(OEMCode.philipsLtp1, 0xF70)
        XCTAssertEqual(OEMCode.philipsLtp1.description, "OemPhilipsLtp1")
        XCTAssertEqual(OEMCode.philipsLtp1.mnemonic, "OemPhilipsLtp1")
        XCTAssertEqual(OEMCode.philipsLtp1.manufacturer, "Philips Large Luminous Surfaces")
        XCTAssertEqual(OEMCode.philipsLtp1.product, "Luminous Textile Panel")
        XCTAssertEqual(OEMCode.philipsLtp1.dmxIn, 0)
        XCTAssertEqual(OEMCode.philipsLtp1.dmxOut, 4)
        XCTAssertEqual(OEMCode.philipsLtp1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.philipsLtp1.isRDMSupported, false)

        // OemPhoenixShGa (0x890)
        XCTAssertEqual(OEMCode.phoenixShGa, 0x890)
        XCTAssertEqual(OEMCode.phoenixShGa.description, "OemPhoenixShGa")
        XCTAssertEqual(OEMCode.phoenixShGa.mnemonic, "OemPhoenixShGa")
        XCTAssertEqual(OEMCode.phoenixShGa.manufacturer, "PHOENIXstudios Remsfeld")
        XCTAssertEqual(OEMCode.phoenixShGa.product, "DIMMER ShowGate")
        XCTAssertEqual(OEMCode.phoenixShGa.dmxIn, 4)
        XCTAssertEqual(OEMCode.phoenixShGa.dmxOut, 4)
        XCTAssertEqual(OEMCode.phoenixShGa.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.phoenixShGa.isRDMSupported, false)

        // OemPig1 (0x8E)
        XCTAssertEqual(OEMCode.pig1, 0x8E)
        XCTAssertEqual(OEMCode.pig1.description, "OemPig1")
        XCTAssertEqual(OEMCode.pig1.mnemonic, "OemPig1")
        XCTAssertEqual(OEMCode.pig1.manufacturer, "Flying Pig Systems")
        XCTAssertEqual(OEMCode.pig1.product, "FP Out2")
        XCTAssertEqual(OEMCode.pig1.dmxIn, 0)
        XCTAssertEqual(OEMCode.pig1.dmxOut, 2)
        XCTAssertEqual(OEMCode.pig1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pig1.isRDMSupported, false)

        // OemPig2 (0x8F)
        XCTAssertEqual(OEMCode.pig2, 0x8F)
        XCTAssertEqual(OEMCode.pig2.description, "OemPig2")
        XCTAssertEqual(OEMCode.pig2.mnemonic, "OemPig2")
        XCTAssertEqual(OEMCode.pig2.manufacturer, "Flying Pig Systems")
        XCTAssertEqual(OEMCode.pig2.product, "FP In2")
        XCTAssertEqual(OEMCode.pig2.dmxIn, 2)
        XCTAssertEqual(OEMCode.pig2.dmxOut, 0)
        XCTAssertEqual(OEMCode.pig2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pig2.isRDMSupported, false)

        // OemPixiPowerF1a (0x120)
        XCTAssertEqual(OEMCode.pixiPowerF1a, 0x120)
        XCTAssertEqual(OEMCode.pixiPowerF1a.description, "OemPixiPowerF1a")
        XCTAssertEqual(OEMCode.pixiPowerF1a.mnemonic, "OemPixiPowerF1a")
        XCTAssertEqual(OEMCode.pixiPowerF1a.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.pixiPowerF1a.product, "Pixi-Power F1a")
        XCTAssertEqual(OEMCode.pixiPowerF1a.dmxIn, 0)
        XCTAssertEqual(OEMCode.pixiPowerF1a.dmxOut, 2)
        XCTAssertEqual(OEMCode.pixiPowerF1a.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.pixiPowerF1a.isRDMSupported, true)

        // OemPrismRev (0x980)
        XCTAssertEqual(OEMCode.prismRev, 0x980)
        XCTAssertEqual(OEMCode.prismRev.description, "OemPrismRev")
        XCTAssertEqual(OEMCode.prismRev.mnemonic, "OemPrismRev")
        XCTAssertEqual(OEMCode.prismRev.manufacturer, "Prism Projection")
        XCTAssertEqual(OEMCode.prismRev.product, "RevEAL")
        XCTAssertEqual(OEMCode.prismRev.dmxIn, 1)
        XCTAssertEqual(OEMCode.prismRev.dmxOut, 1)
        XCTAssertEqual(OEMCode.prismRev.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.prismRev.isRDMSupported, true)

        // OemProPlexIq1 (0xD70)
        XCTAssertEqual(OEMCode.proPlexIq1, 0xD70)
        XCTAssertEqual(OEMCode.proPlexIq1.description, "OemProPlexIq1")
        XCTAssertEqual(OEMCode.proPlexIq1.mnemonic, "OemProPlexIq1")
        XCTAssertEqual(OEMCode.proPlexIq1.manufacturer, "TMB")
        XCTAssertEqual(OEMCode.proPlexIq1.product, "ProPlex IQ")
        XCTAssertEqual(OEMCode.proPlexIq1.dmxIn, 4)
        XCTAssertEqual(OEMCode.proPlexIq1.dmxOut, 4)
        XCTAssertEqual(OEMCode.proPlexIq1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.proPlexIq1.isRDMSupported, true)

        // OemProPlexMozMz40 (0xD71)
        XCTAssertEqual(OEMCode.proPlexMozMz40, 0xD71)
        XCTAssertEqual(OEMCode.proPlexMozMz40.description, "OemProPlexMozMz40")
        XCTAssertEqual(OEMCode.proPlexMozMz40.mnemonic, "OemProPlexMozMz40")
        XCTAssertEqual(OEMCode.proPlexMozMz40.manufacturer, "TMB")
        XCTAssertEqual(OEMCode.proPlexMozMz40.product, "Mozart MZ 40")
        XCTAssertEqual(OEMCode.proPlexMozMz40.dmxIn, 0)
        XCTAssertEqual(OEMCode.proPlexMozMz40.dmxOut, 4)
        XCTAssertEqual(OEMCode.proPlexMozMz40.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.proPlexMozMz40.isRDMSupported, true)

        // OemProSolDmxPro01 (0xEE1)
        XCTAssertEqual(OEMCode.proSolDmxPro01, 0xEE1)
        XCTAssertEqual(OEMCode.proSolDmxPro01.description, "OemProSolDmxPro01")
        XCTAssertEqual(OEMCode.proSolDmxPro01.mnemonic, "OemProSolDmxPro01")
        XCTAssertEqual(OEMCode.proSolDmxPro01.manufacturer, "PRO-SOLUTIONS")
        XCTAssertEqual(OEMCode.proSolDmxPro01.product, "DMX-PRO Net-01")
        XCTAssertEqual(OEMCode.proSolDmxPro01.dmxIn, 0)
        XCTAssertEqual(OEMCode.proSolDmxPro01.dmxOut, 1)
        XCTAssertEqual(OEMCode.proSolDmxPro01.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.proSolDmxPro01.isRDMSupported, false)

        // OemProSolDmxPro02 (0xEE0)
        XCTAssertEqual(OEMCode.proSolDmxPro02, 0xEE0)
        XCTAssertEqual(OEMCode.proSolDmxPro02.description, "OemProSolDmxPro02")
        XCTAssertEqual(OEMCode.proSolDmxPro02.mnemonic, "OemProSolDmxPro02")
        XCTAssertEqual(OEMCode.proSolDmxPro02.manufacturer, "PRO-SOLUTIONS")
        XCTAssertEqual(OEMCode.proSolDmxPro02.product, "DMX-PRO Net-02")
        XCTAssertEqual(OEMCode.proSolDmxPro02.dmxIn, 0)
        XCTAssertEqual(OEMCode.proSolDmxPro02.dmxOut, 2)
        XCTAssertEqual(OEMCode.proSolDmxPro02.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.proSolDmxPro02.isRDMSupported, false)

        // OemProSolDmxPro04 (0xEE4)
        XCTAssertEqual(OEMCode.proSolDmxPro04, 0xEE4)
        XCTAssertEqual(OEMCode.proSolDmxPro04.description, "OemProSolDmxPro04")
        XCTAssertEqual(OEMCode.proSolDmxPro04.mnemonic, "OemProSolDmxPro04")
        XCTAssertEqual(OEMCode.proSolDmxPro04.manufacturer, "PRO-SOLUTIONS")
        XCTAssertEqual(OEMCode.proSolDmxPro04.product, "DMX-PRO Net-04")
        XCTAssertEqual(OEMCode.proSolDmxPro04.dmxIn, 0)
        XCTAssertEqual(OEMCode.proSolDmxPro04.dmxOut, 4)
        XCTAssertEqual(OEMCode.proSolDmxPro04.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.proSolDmxPro04.isRDMSupported, false)

        // OemProSolDmxPro10 (0xEE2)
        XCTAssertEqual(OEMCode.proSolDmxPro10, 0xEE2)
        XCTAssertEqual(OEMCode.proSolDmxPro10.description, "OemProSolDmxPro10")
        XCTAssertEqual(OEMCode.proSolDmxPro10.mnemonic, "OemProSolDmxPro10")
        XCTAssertEqual(OEMCode.proSolDmxPro10.manufacturer, "PRO-SOLUTIONS")
        XCTAssertEqual(OEMCode.proSolDmxPro10.product, "DMX-PRO Net-10")
        XCTAssertEqual(OEMCode.proSolDmxPro10.dmxIn, 1)
        XCTAssertEqual(OEMCode.proSolDmxPro10.dmxOut, 0)
        XCTAssertEqual(OEMCode.proSolDmxPro10.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.proSolDmxPro10.isRDMSupported, false)

        // OemProSolDmxPro11 (0xEE3)
        XCTAssertEqual(OEMCode.proSolDmxPro11, 0xEE3)
        XCTAssertEqual(OEMCode.proSolDmxPro11.description, "OemProSolDmxPro11")
        XCTAssertEqual(OEMCode.proSolDmxPro11.mnemonic, "OemProSolDmxPro11")
        XCTAssertEqual(OEMCode.proSolDmxPro11.manufacturer, "PRO-SOLUTIONS")
        XCTAssertEqual(OEMCode.proSolDmxPro11.product, "DMX-PRO Net-11")
        XCTAssertEqual(OEMCode.proSolDmxPro11.dmxIn, 1)
        XCTAssertEqual(OEMCode.proSolDmxPro11.dmxOut, 1)
        XCTAssertEqual(OEMCode.proSolDmxPro11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.proSolDmxPro11.isRDMSupported, false)

        // OemProSolDmxPro14 (0xEE5)
        XCTAssertEqual(OEMCode.proSolDmxPro14, 0xEE5)
        XCTAssertEqual(OEMCode.proSolDmxPro14.description, "OemProSolDmxPro14")
        XCTAssertEqual(OEMCode.proSolDmxPro14.mnemonic, "OemProSolDmxPro14")
        XCTAssertEqual(OEMCode.proSolDmxPro14.manufacturer, "PRO-SOLUTIONS")
        XCTAssertEqual(OEMCode.proSolDmxPro14.product, "DMX-PRO Net-14")
        XCTAssertEqual(OEMCode.proSolDmxPro14.dmxIn, 1)
        XCTAssertEqual(OEMCode.proSolDmxPro14.dmxOut, 4)
        XCTAssertEqual(OEMCode.proSolDmxPro14.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.proSolDmxPro14.isRDMSupported, false)

        // OemPxmPx314 (0x1190)
        XCTAssertEqual(OEMCode.pxmPx314, 0x1190)
        XCTAssertEqual(OEMCode.pxmPx314.description, "OemPxmPx314")
        XCTAssertEqual(OEMCode.pxmPx314.mnemonic, "OemPxmPx314")
        XCTAssertEqual(OEMCode.pxmPx314.manufacturer, "PXM")
        XCTAssertEqual(OEMCode.pxmPx314.product, "Px314")
        XCTAssertEqual(OEMCode.pxmPx314.dmxIn, 0)
        XCTAssertEqual(OEMCode.pxmPx314.dmxOut, 3)
        XCTAssertEqual(OEMCode.pxmPx314.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pxmPx314.isRDMSupported, false)

        // OemPxmPx357 (0x1191)
        XCTAssertEqual(OEMCode.pxmPx357, 0x1191)
        XCTAssertEqual(OEMCode.pxmPx357.description, "OemPxmPx357")
        XCTAssertEqual(OEMCode.pxmPx357.mnemonic, "OemPxmPx357")
        XCTAssertEqual(OEMCode.pxmPx357.manufacturer, "PXM")
        XCTAssertEqual(OEMCode.pxmPx357.product, "Px357")
        XCTAssertEqual(OEMCode.pxmPx357.dmxIn, 0)
        XCTAssertEqual(OEMCode.pxmPx357.dmxOut, 4)
        XCTAssertEqual(OEMCode.pxmPx357.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pxmPx357.isRDMSupported, false)

        // OemPxmPx724 (0x2874)
        XCTAssertEqual(OEMCode.pxmPx724, 0x2874)
        XCTAssertEqual(OEMCode.pxmPx724.description, "OemPxmPx724")
        XCTAssertEqual(OEMCode.pxmPx724.mnemonic, "OemPxmPx724")
        XCTAssertEqual(OEMCode.pxmPx724.manufacturer, "PXM")
        XCTAssertEqual(OEMCode.pxmPx724.product, "Px724")
        XCTAssertEqual(OEMCode.pxmPx724.dmxIn, 4)
        XCTAssertEqual(OEMCode.pxmPx724.dmxOut, 4)
        XCTAssertEqual(OEMCode.pxmPx724.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.pxmPx724.isRDMSupported, true)

        // OemQdotLightingLimitedQnet1024 (0x289C)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet1024, 0x289C)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet1024.description, "OemQdotLightingLimitedQnet1024")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet1024.mnemonic, "OemQdotLightingLimitedQnet1024")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet1024.manufacturer, "Qdot Lighting Limited")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet1024.product, "QNET 1024")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet1024.dmxIn, 2)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet1024.dmxOut, 2)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet1024.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet1024.isRDMSupported, true)

        // OemQdotLightingLimitedQnet16W (0x2899)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet16W, 0x2899)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet16W.description, "OemQdotLightingLimitedQnet16W")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet16W.mnemonic, "OemQdotLightingLimitedQnet16W")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet16W.manufacturer, "Qdot Lighting Limited")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet16W.product, "QNET 16W")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet16W.dmxIn, 16)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet16W.dmxOut, 16)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet16W.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet16W.isRDMSupported, true)

        // OemQdotLightingLimitedQnet2048 (0x289B)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet2048, 0x289B)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet2048.description, "OemQdotLightingLimitedQnet2048")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet2048.mnemonic, "OemQdotLightingLimitedQnet2048")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet2048.manufacturer, "Qdot Lighting Limited")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet2048.product, "QNET 2048")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet2048.dmxIn, 4)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet2048.dmxOut, 4)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet2048.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet2048.isRDMSupported, true)

        // OemQdotLightingLimitedQnet8W (0x289A)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet8W, 0x289A)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet8W.description, "OemQdotLightingLimitedQnet8W")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet8W.mnemonic, "OemQdotLightingLimitedQnet8W")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet8W.manufacturer, "Qdot Lighting Limited")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet8W.product, "QNET 8W")
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet8W.dmxIn, 8)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet8W.dmxOut, 8)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet8W.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.qdotLightingLimitedQnet8W.isRDMSupported, true)

        // OemQme700p (0x870)
        XCTAssertEqual(OEMCode.qme700p, 0x870)
        XCTAssertEqual(OEMCode.qme700p.description, "OemQme700p")
        XCTAssertEqual(OEMCode.qme700p.mnemonic, "OemQme700p")
        XCTAssertEqual(OEMCode.qme700p.manufacturer, "Qmaxz Lighting")
        XCTAssertEqual(OEMCode.qme700p.product, "QME700P")
        XCTAssertEqual(OEMCode.qme700p.dmxIn, 1)
        XCTAssertEqual(OEMCode.qme700p.dmxOut, 1)
        XCTAssertEqual(OEMCode.qme700p.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.qme700p.isRDMSupported, true)

        // OemQqpWrkLm3e (0x901)
        XCTAssertEqual(OEMCode.qqpWrkLm3e, 0x901)
        XCTAssertEqual(OEMCode.qqpWrkLm3e.description, "OemQqpWrkLm3e")
        XCTAssertEqual(OEMCode.qqpWrkLm3e.mnemonic, "OemQqpWrkLm3e")
        XCTAssertEqual(OEMCode.qqpWrkLm3e.manufacturer, "EQUIPSON S.A.")
        XCTAssertEqual(OEMCode.qqpWrkLm3e.product, "WORK LM-3E")
        XCTAssertEqual(OEMCode.qqpWrkLm3e.dmxIn, 1)
        XCTAssertEqual(OEMCode.qqpWrkLm3e.dmxOut, 0)
        XCTAssertEqual(OEMCode.qqpWrkLm3e.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.qqpWrkLm3e.isRDMSupported, false)

        // OemQqpWrkLm3r (0x900)
        XCTAssertEqual(OEMCode.qqpWrkLm3r, 0x900)
        XCTAssertEqual(OEMCode.qqpWrkLm3r.description, "OemQqpWrkLm3r")
        XCTAssertEqual(OEMCode.qqpWrkLm3r.mnemonic, "OemQqpWrkLm3r")
        XCTAssertEqual(OEMCode.qqpWrkLm3r.manufacturer, "EQUIPSON S.A.")
        XCTAssertEqual(OEMCode.qqpWrkLm3r.product, "WORK LM-3R")
        XCTAssertEqual(OEMCode.qqpWrkLm3r.dmxIn, 0)
        XCTAssertEqual(OEMCode.qqpWrkLm3r.dmxOut, 1)
        XCTAssertEqual(OEMCode.qqpWrkLm3r.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.qqpWrkLm3r.isRDMSupported, false)

        // OemQuantDen (0x840)
        XCTAssertEqual(OEMCode.quantDen, 0x840)
        XCTAssertEqual(OEMCode.quantDen.description, "OemQuantDen")
        XCTAssertEqual(OEMCode.quantDen.mnemonic, "OemQuantDen")
        XCTAssertEqual(OEMCode.quantDen.manufacturer, "Quantukm Logic")
        XCTAssertEqual(OEMCode.quantDen.product, "DMX Ethernet Node")
        XCTAssertEqual(OEMCode.quantDen.dmxIn, 2)
        XCTAssertEqual(OEMCode.quantDen.dmxOut, 2)
        XCTAssertEqual(OEMCode.quantDen.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.quantDen.isRDMSupported, false)

        // OemRadigEdc01 (0x1110)
        XCTAssertEqual(OEMCode.radigEdc01, 0x1110)
        XCTAssertEqual(OEMCode.radigEdc01.description, "OemRadigEdc01")
        XCTAssertEqual(OEMCode.radigEdc01.mnemonic, "OemRadigEdc01")
        XCTAssertEqual(OEMCode.radigEdc01.manufacturer, "Radig Hard - Software")
        XCTAssertEqual(OEMCode.radigEdc01.product, "EDC-01")
        XCTAssertEqual(OEMCode.radigEdc01.dmxIn, 1)
        XCTAssertEqual(OEMCode.radigEdc01.dmxOut, 4)
        XCTAssertEqual(OEMCode.radigEdc01.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.radigEdc01.isRDMSupported, false)

        // OemRadioLinkIp (0x17)
        XCTAssertEqual(OEMCode.radioLinkIp, 0x17)
        XCTAssertEqual(OEMCode.radioLinkIp.description, "OemRadioLinkIp")
        XCTAssertEqual(OEMCode.radioLinkIp.mnemonic, "OemRadioLinkIp")
        XCTAssertEqual(OEMCode.radioLinkIp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.radioLinkIp.product, "Radio-Link IP")
        XCTAssertEqual(OEMCode.radioLinkIp.dmxIn, 2)
        XCTAssertEqual(OEMCode.radioLinkIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.radioLinkIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.radioLinkIp.isRDMSupported, false)

        // OemRadioLinkOp (0x16)
        XCTAssertEqual(OEMCode.radioLinkOp, 0x16)
        XCTAssertEqual(OEMCode.radioLinkOp.description, "OemRadioLinkOp")
        XCTAssertEqual(OEMCode.radioLinkOp.mnemonic, "OemRadioLinkOp")
        XCTAssertEqual(OEMCode.radioLinkOp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.radioLinkOp.product, "Radio-Link OP")
        XCTAssertEqual(OEMCode.radioLinkOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.radioLinkOp.dmxOut, 2)
        XCTAssertEqual(OEMCode.radioLinkOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.radioLinkOp.isRDMSupported, false)

        // OemRadioLynxIp2 (0x217)
        XCTAssertEqual(OEMCode.radioLynxIp2, 0x217)
        XCTAssertEqual(OEMCode.radioLynxIp2.description, "OemRadioLynxIp2")
        XCTAssertEqual(OEMCode.radioLynxIp2.mnemonic, "OemRadioLynxIp2")
        XCTAssertEqual(OEMCode.radioLynxIp2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.radioLynxIp2.product, "Radio-Lynx IP 2")
        XCTAssertEqual(OEMCode.radioLynxIp2.dmxIn, 2)
        XCTAssertEqual(OEMCode.radioLynxIp2.dmxOut, 0)
        XCTAssertEqual(OEMCode.radioLynxIp2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.radioLynxIp2.isRDMSupported, false)

        // OemRadioLynxOp2 (0x216)
        XCTAssertEqual(OEMCode.radioLynxOp2, 0x216)
        XCTAssertEqual(OEMCode.radioLynxOp2.description, "OemRadioLynxOp2")
        XCTAssertEqual(OEMCode.radioLynxOp2.mnemonic, "OemRadioLynxOp2")
        XCTAssertEqual(OEMCode.radioLynxOp2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.radioLynxOp2.product, "Radio-Lynx OP 2")
        XCTAssertEqual(OEMCode.radioLynxOp2.dmxIn, 0)
        XCTAssertEqual(OEMCode.radioLynxOp2.dmxOut, 2)
        XCTAssertEqual(OEMCode.radioLynxOp2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.radioLynxOp2.isRDMSupported, true)

        // OemRailLynxIp (0x2080)
        XCTAssertEqual(OEMCode.railLynxIp, 0x2080)
        XCTAssertEqual(OEMCode.railLynxIp.description, "OemRailLynxIp")
        XCTAssertEqual(OEMCode.railLynxIp.mnemonic, "OemRailLynxIp")
        XCTAssertEqual(OEMCode.railLynxIp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.railLynxIp.product, "Rail-Lynx IP")
        XCTAssertEqual(OEMCode.railLynxIp.dmxIn, 2)
        XCTAssertEqual(OEMCode.railLynxIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.railLynxIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.railLynxIp.isRDMSupported, false)

        // OemRailLynxOp (0x2020)
        XCTAssertEqual(OEMCode.railLynxOp, 0x2020)
        XCTAssertEqual(OEMCode.railLynxOp.description, "OemRailLynxOp")
        XCTAssertEqual(OEMCode.railLynxOp.mnemonic, "OemRailLynxOp")
        XCTAssertEqual(OEMCode.railLynxOp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.railLynxOp.product, "Rail-Lynx OP")
        XCTAssertEqual(OEMCode.railLynxOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.railLynxOp.dmxOut, 0)
        XCTAssertEqual(OEMCode.railLynxOp.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.railLynxOp.isRDMSupported, false)

        // OemRaven1 (0xAA1)
        XCTAssertEqual(OEMCode.raven1, 0xAA1)
        XCTAssertEqual(OEMCode.raven1.description, "OemRaven1")
        XCTAssertEqual(OEMCode.raven1.mnemonic, "OemRaven1")
        XCTAssertEqual(OEMCode.raven1.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.raven1.product, "OemRaven1")
        XCTAssertEqual(OEMCode.raven1.dmxIn, 0)
        XCTAssertEqual(OEMCode.raven1.dmxOut, 0)
        XCTAssertEqual(OEMCode.raven1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.raven1.isRDMSupported, false)

        // OemRaven2 (0xAA2)
        XCTAssertEqual(OEMCode.raven2, 0xAA2)
        XCTAssertEqual(OEMCode.raven2.description, "OemRaven2")
        XCTAssertEqual(OEMCode.raven2.mnemonic, "OemRaven2")
        XCTAssertEqual(OEMCode.raven2.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.raven2.product, "OemRaven2")
        XCTAssertEqual(OEMCode.raven2.dmxIn, 0)
        XCTAssertEqual(OEMCode.raven2.dmxOut, 0)
        XCTAssertEqual(OEMCode.raven2.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.raven2.isRDMSupported, false)

        // OemRaven3 (0xAA3)
        XCTAssertEqual(OEMCode.raven3, 0xAA3)
        XCTAssertEqual(OEMCode.raven3.description, "OemRaven3")
        XCTAssertEqual(OEMCode.raven3.mnemonic, "OemRaven3")
        XCTAssertEqual(OEMCode.raven3.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.raven3.product, "OemRaven3")
        XCTAssertEqual(OEMCode.raven3.dmxIn, 0)
        XCTAssertEqual(OEMCode.raven3.dmxOut, 0)
        XCTAssertEqual(OEMCode.raven3.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.raven3.isRDMSupported, false)

        // OemRaven4 (0xAA4)
        XCTAssertEqual(OEMCode.raven4, 0xAA4)
        XCTAssertEqual(OEMCode.raven4.description, "OemRaven4")
        XCTAssertEqual(OEMCode.raven4.mnemonic, "OemRaven4")
        XCTAssertEqual(OEMCode.raven4.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.raven4.product, "OemRaven4")
        XCTAssertEqual(OEMCode.raven4.dmxIn, 0)
        XCTAssertEqual(OEMCode.raven4.dmxOut, 0)
        XCTAssertEqual(OEMCode.raven4.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.raven4.isRDMSupported, false)

        // OemRaven5 (0xAA5)
        XCTAssertEqual(OEMCode.raven5, 0xAA5)
        XCTAssertEqual(OEMCode.raven5.description, "OemRaven5")
        XCTAssertEqual(OEMCode.raven5.mnemonic, "OemRaven5")
        XCTAssertEqual(OEMCode.raven5.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.raven5.product, "OemRaven5")
        XCTAssertEqual(OEMCode.raven5.dmxIn, 0)
        XCTAssertEqual(OEMCode.raven5.dmxOut, 0)
        XCTAssertEqual(OEMCode.raven5.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.raven5.isRDMSupported, false)

        // OemRaven6 (0xAA6)
        XCTAssertEqual(OEMCode.raven6, 0xAA6)
        XCTAssertEqual(OEMCode.raven6.description, "OemRaven6")
        XCTAssertEqual(OEMCode.raven6.mnemonic, "OemRaven6")
        XCTAssertEqual(OEMCode.raven6.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.raven6.product, "OemRaven6")
        XCTAssertEqual(OEMCode.raven6.dmxIn, 0)
        XCTAssertEqual(OEMCode.raven6.dmxOut, 0)
        XCTAssertEqual(OEMCode.raven6.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.raven6.isRDMSupported, false)

        // OemRaven7 (0xAA7)
        XCTAssertEqual(OEMCode.raven7, 0xAA7)
        XCTAssertEqual(OEMCode.raven7.description, "OemRaven7")
        XCTAssertEqual(OEMCode.raven7.mnemonic, "OemRaven7")
        XCTAssertEqual(OEMCode.raven7.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.raven7.product, "OemRaven7")
        XCTAssertEqual(OEMCode.raven7.dmxIn, 0)
        XCTAssertEqual(OEMCode.raven7.dmxOut, 0)
        XCTAssertEqual(OEMCode.raven7.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.raven7.isRDMSupported, false)

        // OemRaven8 (0xAA8)
        XCTAssertEqual(OEMCode.raven8, 0xAA8)
        XCTAssertEqual(OEMCode.raven8.description, "OemRaven8")
        XCTAssertEqual(OEMCode.raven8.mnemonic, "OemRaven8")
        XCTAssertEqual(OEMCode.raven8.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.raven8.product, "OemRaven8")
        XCTAssertEqual(OEMCode.raven8.dmxIn, 0)
        XCTAssertEqual(OEMCode.raven8.dmxOut, 0)
        XCTAssertEqual(OEMCode.raven8.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.raven8.isRDMSupported, false)

        // OemRaven9 (0xAA9)
        XCTAssertEqual(OEMCode.raven9, 0xAA9)
        XCTAssertEqual(OEMCode.raven9.description, "OemRaven9")
        XCTAssertEqual(OEMCode.raven9.mnemonic, "OemRaven9")
        XCTAssertEqual(OEMCode.raven9.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.raven9.product, "OemRaven9")
        XCTAssertEqual(OEMCode.raven9.dmxIn, 0)
        XCTAssertEqual(OEMCode.raven9.dmxOut, 0)
        XCTAssertEqual(OEMCode.raven9.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.raven9.isRDMSupported, false)

        // OemRavena (0xAAA)
        XCTAssertEqual(OEMCode.ravena, 0xAAA)
        XCTAssertEqual(OEMCode.ravena.description, "OemRavena")
        XCTAssertEqual(OEMCode.ravena.mnemonic, "OemRavena")
        XCTAssertEqual(OEMCode.ravena.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.ravena.product, "OemRavena")
        XCTAssertEqual(OEMCode.ravena.dmxIn, 0)
        XCTAssertEqual(OEMCode.ravena.dmxOut, 0)
        XCTAssertEqual(OEMCode.ravena.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ravena.isRDMSupported, false)

        // OemRavenAquaDuct (0xAA0)
        XCTAssertEqual(OEMCode.ravenAquaDuct, 0xAA0)
        XCTAssertEqual(OEMCode.ravenAquaDuct.description, "OemRavenAquaDuct")
        XCTAssertEqual(OEMCode.ravenAquaDuct.mnemonic, "OemRavenAquaDuct")
        XCTAssertEqual(OEMCode.ravenAquaDuct.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.ravenAquaDuct.product, "AquaDuct Fountain")
        XCTAssertEqual(OEMCode.ravenAquaDuct.dmxIn, 0)
        XCTAssertEqual(OEMCode.ravenAquaDuct.dmxOut, 1)
        XCTAssertEqual(OEMCode.ravenAquaDuct.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ravenAquaDuct.isRDMSupported, false)

        // OemRavenb (0xAAB)
        XCTAssertEqual(OEMCode.ravenb, 0xAAB)
        XCTAssertEqual(OEMCode.ravenb.description, "OemRavenb")
        XCTAssertEqual(OEMCode.ravenb.mnemonic, "OemRavenb")
        XCTAssertEqual(OEMCode.ravenb.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.ravenb.product, "OemRavenb")
        XCTAssertEqual(OEMCode.ravenb.dmxIn, 0)
        XCTAssertEqual(OEMCode.ravenb.dmxOut, 0)
        XCTAssertEqual(OEMCode.ravenb.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ravenb.isRDMSupported, false)

        // OemRavenc (0xAAC)
        XCTAssertEqual(OEMCode.ravenc, 0xAAC)
        XCTAssertEqual(OEMCode.ravenc.description, "OemRavenc")
        XCTAssertEqual(OEMCode.ravenc.mnemonic, "OemRavenc")
        XCTAssertEqual(OEMCode.ravenc.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.ravenc.product, "OemRavenc")
        XCTAssertEqual(OEMCode.ravenc.dmxIn, 0)
        XCTAssertEqual(OEMCode.ravenc.dmxOut, 0)
        XCTAssertEqual(OEMCode.ravenc.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ravenc.isRDMSupported, false)

        // OemRavend (0xAAD)
        XCTAssertEqual(OEMCode.ravend, 0xAAD)
        XCTAssertEqual(OEMCode.ravend.description, "OemRavend")
        XCTAssertEqual(OEMCode.ravend.mnemonic, "OemRavend")
        XCTAssertEqual(OEMCode.ravend.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.ravend.product, "OemRavend")
        XCTAssertEqual(OEMCode.ravend.dmxIn, 0)
        XCTAssertEqual(OEMCode.ravend.dmxOut, 0)
        XCTAssertEqual(OEMCode.ravend.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ravend.isRDMSupported, false)

        // OemRavene (0xAAE)
        XCTAssertEqual(OEMCode.ravene, 0xAAE)
        XCTAssertEqual(OEMCode.ravene.description, "OemRavene")
        XCTAssertEqual(OEMCode.ravene.mnemonic, "OemRavene")
        XCTAssertEqual(OEMCode.ravene.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.ravene.product, "OemRavene")
        XCTAssertEqual(OEMCode.ravene.dmxIn, 0)
        XCTAssertEqual(OEMCode.ravene.dmxOut, 0)
        XCTAssertEqual(OEMCode.ravene.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ravene.isRDMSupported, false)

        // OemRavenf (0xAAF)
        XCTAssertEqual(OEMCode.ravenf, 0xAAF)
        XCTAssertEqual(OEMCode.ravenf.description, "OemRavenf")
        XCTAssertEqual(OEMCode.ravenf.mnemonic, "OemRavenf")
        XCTAssertEqual(OEMCode.ravenf.manufacturer, "Raven Systems Design, Inc.")
        XCTAssertEqual(OEMCode.ravenf.product, "OemRavenf")
        XCTAssertEqual(OEMCode.ravenf.dmxIn, 0)
        XCTAssertEqual(OEMCode.ravenf.dmxOut, 0)
        XCTAssertEqual(OEMCode.ravenf.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.ravenf.isRDMSupported, false)

        // OemRayCompNet (0xE01)
        XCTAssertEqual(OEMCode.rayCompNet, 0xE01)
        XCTAssertEqual(OEMCode.rayCompNet.description, "OemRayCompNet")
        XCTAssertEqual(OEMCode.rayCompNet.mnemonic, "OemRayCompNet")
        XCTAssertEqual(OEMCode.rayCompNet.manufacturer, "RayComposer - R. Adams")
        XCTAssertEqual(OEMCode.rayCompNet.product, "RayComposer NET")
        XCTAssertEqual(OEMCode.rayCompNet.dmxIn, 1)
        XCTAssertEqual(OEMCode.rayCompNet.dmxOut, 1)
        XCTAssertEqual(OEMCode.rayCompNet.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rayCompNet.isRDMSupported, true)

        // OemRayCompSoft (0xE00)
        XCTAssertEqual(OEMCode.rayCompSoft, 0xE00)
        XCTAssertEqual(OEMCode.rayCompSoft.description, "OemRayCompSoft")
        XCTAssertEqual(OEMCode.rayCompSoft.mnemonic, "OemRayCompSoft")
        XCTAssertEqual(OEMCode.rayCompSoft.manufacturer, "RayComposer - R. Adams")
        XCTAssertEqual(OEMCode.rayCompSoft.product, "RayComposer Software")
        XCTAssertEqual(OEMCode.rayCompSoft.dmxIn, 4)
        XCTAssertEqual(OEMCode.rayCompSoft.dmxOut, 1)
        XCTAssertEqual(OEMCode.rayCompSoft.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rayCompSoft.isRDMSupported, true)

        // OemRbPixelMad1 (0x3D0)
        XCTAssertEqual(OEMCode.rbPixelMad1, 0x3D0)
        XCTAssertEqual(OEMCode.rbPixelMad1.description, "OemRbPixelMad1")
        XCTAssertEqual(OEMCode.rbPixelMad1.mnemonic, "OemRbPixelMad1")
        XCTAssertEqual(OEMCode.rbPixelMad1.manufacturer, "Bleasdale")
        XCTAssertEqual(OEMCode.rbPixelMad1.product, "PixelMad")
        XCTAssertEqual(OEMCode.rbPixelMad1.dmxIn, 0)
        XCTAssertEqual(OEMCode.rbPixelMad1.dmxOut, 0)
        XCTAssertEqual(OEMCode.rbPixelMad1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rbPixelMad1.isRDMSupported, false)

        // OemRdfM4 (0x13D7)
        XCTAssertEqual(OEMCode.rdfM4, 0x13D7)
        XCTAssertEqual(OEMCode.rdfM4.description, "OemRdfM4")
        XCTAssertEqual(OEMCode.rdfM4.mnemonic, "OemRdfM4")
        XCTAssertEqual(OEMCode.rdfM4.manufacturer, "ROF Electronics")
        XCTAssertEqual(OEMCode.rdfM4.product, "Multi4verse")
        XCTAssertEqual(OEMCode.rdfM4.dmxIn, 0)
        XCTAssertEqual(OEMCode.rdfM4.dmxOut, 4)
        XCTAssertEqual(OEMCode.rdfM4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rdfM4.isRDMSupported, false)

        // OemRenaB2PPDC (0x11C0)
        XCTAssertEqual(OEMCode.renaB2PPDC, 0x11C0)
        XCTAssertEqual(OEMCode.renaB2PPDC.description, "OemRenaB2PPDC")
        XCTAssertEqual(OEMCode.renaB2PPDC.mnemonic, "OemRenaB2PPDC")
        XCTAssertEqual(OEMCode.renaB2PPDC.manufacturer, "Rena Electronica B.V.")
        XCTAssertEqual(OEMCode.renaB2PPDC.product, "Bits2Power Power Data Controller")
        XCTAssertEqual(OEMCode.renaB2PPDC.dmxIn, 0)
        XCTAssertEqual(OEMCode.renaB2PPDC.dmxOut, 1)
        XCTAssertEqual(OEMCode.renaB2PPDC.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.renaB2PPDC.isRDMSupported, true)

        // OemResolArena1 (0x2828)
        XCTAssertEqual(OEMCode.resolArena1, 0x2828)
        XCTAssertEqual(OEMCode.resolArena1.description, "OemResolArena1")
        XCTAssertEqual(OEMCode.resolArena1.mnemonic, "OemResolArena1")
        XCTAssertEqual(OEMCode.resolArena1.manufacturer, "Resolume")
        XCTAssertEqual(OEMCode.resolArena1.product, "Arena")
        XCTAssertEqual(OEMCode.resolArena1.dmxIn, 32)
        XCTAssertEqual(OEMCode.resolArena1.dmxOut, 32)
        XCTAssertEqual(OEMCode.resolArena1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.resolArena1.isRDMSupported, false)

        // OemRevoDisp1 (0xDB0)
        XCTAssertEqual(OEMCode.revoDisp1, 0xDB0)
        XCTAssertEqual(OEMCode.revoDisp1.description, "OemRevoDisp1")
        XCTAssertEqual(OEMCode.revoDisp1.mnemonic, "OemRevoDisp1")
        XCTAssertEqual(OEMCode.revoDisp1.manufacturer, "Revolution Display, Inc")
        XCTAssertEqual(OEMCode.revoDisp1.product, "Navigator")
        XCTAssertEqual(OEMCode.revoDisp1.dmxIn, 1)
        XCTAssertEqual(OEMCode.revoDisp1.dmxOut, 0)
        XCTAssertEqual(OEMCode.revoDisp1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.revoDisp1.isRDMSupported, false)

        // OemRgbG3Net (0x13F7)
        XCTAssertEqual(OEMCode.rgbG3Net, 0x13F7)
        XCTAssertEqual(OEMCode.rgbG3Net.description, "OemRgbG3Net")
        XCTAssertEqual(OEMCode.rgbG3Net.mnemonic, "OemRgbG3Net")
        XCTAssertEqual(OEMCode.rgbG3Net.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.rgbG3Net.product, "G 3 Net")
        XCTAssertEqual(OEMCode.rgbG3Net.dmxIn, 0)
        XCTAssertEqual(OEMCode.rgbG3Net.dmxOut, 0)
        XCTAssertEqual(OEMCode.rgbG3Net.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rgbG3Net.isRDMSupported, false)

        // OemRgbVenusX7 (0x13F6)
        XCTAssertEqual(OEMCode.rgbVenusX7, 0x13F6)
        XCTAssertEqual(OEMCode.rgbVenusX7.description, "OemRgbVenusX7")
        XCTAssertEqual(OEMCode.rgbVenusX7.mnemonic, "OemRgbVenusX7")
        XCTAssertEqual(OEMCode.rgbVenusX7.manufacturer, "RGBlink")
        XCTAssertEqual(OEMCode.rgbVenusX7.product, "Venus X7")
        XCTAssertEqual(OEMCode.rgbVenusX7.dmxIn, 0)
        XCTAssertEqual(OEMCode.rgbVenusX7.dmxOut, 0)
        XCTAssertEqual(OEMCode.rgbVenusX7.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rgbVenusX7.isRDMSupported, false)

        // OemRnetRnet1 (0xE84)
        XCTAssertEqual(OEMCode.rnetRnet1, 0xE84)
        XCTAssertEqual(OEMCode.rnetRnet1.description, "OemRnetRnet1")
        XCTAssertEqual(OEMCode.rnetRnet1.mnemonic, "OemRnetRnet1")
        XCTAssertEqual(OEMCode.rnetRnet1.manufacturer, "Rnet")
        XCTAssertEqual(OEMCode.rnetRnet1.product, "Rnet-1")
        XCTAssertEqual(OEMCode.rnetRnet1.dmxIn, 4)
        XCTAssertEqual(OEMCode.rnetRnet1.dmxOut, 4)
        XCTAssertEqual(OEMCode.rnetRnet1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rnetRnet1.isRDMSupported, true)

        // OemRnetRnet2 (0xE83)
        XCTAssertEqual(OEMCode.rnetRnet2, 0xE83)
        XCTAssertEqual(OEMCode.rnetRnet2.description, "OemRnetRnet2")
        XCTAssertEqual(OEMCode.rnetRnet2.mnemonic, "OemRnetRnet2")
        XCTAssertEqual(OEMCode.rnetRnet2.manufacturer, "Rnet")
        XCTAssertEqual(OEMCode.rnetRnet2.product, "Rnet-2")
        XCTAssertEqual(OEMCode.rnetRnet2.dmxIn, 4)
        XCTAssertEqual(OEMCode.rnetRnet2.dmxOut, 4)
        XCTAssertEqual(OEMCode.rnetRnet2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rnetRnet2.isRDMSupported, true)

        // OemRnetRnet4 (0xE82)
        XCTAssertEqual(OEMCode.rnetRnet4, 0xE82)
        XCTAssertEqual(OEMCode.rnetRnet4.description, "OemRnetRnet4")
        XCTAssertEqual(OEMCode.rnetRnet4.mnemonic, "OemRnetRnet4")
        XCTAssertEqual(OEMCode.rnetRnet4.manufacturer, "Rnet")
        XCTAssertEqual(OEMCode.rnetRnet4.product, "Rnet-4")
        XCTAssertEqual(OEMCode.rnetRnet4.dmxIn, 4)
        XCTAssertEqual(OEMCode.rnetRnet4.dmxOut, 4)
        XCTAssertEqual(OEMCode.rnetRnet4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rnetRnet4.isRDMSupported, true)

        // OemRnetRnet6 (0xE81)
        XCTAssertEqual(OEMCode.rnetRnet6, 0xE81)
        XCTAssertEqual(OEMCode.rnetRnet6.description, "OemRnetRnet6")
        XCTAssertEqual(OEMCode.rnetRnet6.mnemonic, "OemRnetRnet6")
        XCTAssertEqual(OEMCode.rnetRnet6.manufacturer, "Rnet")
        XCTAssertEqual(OEMCode.rnetRnet6.product, "Rnet-6")
        XCTAssertEqual(OEMCode.rnetRnet6.dmxIn, 4)
        XCTAssertEqual(OEMCode.rnetRnet6.dmxOut, 4)
        XCTAssertEqual(OEMCode.rnetRnet6.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rnetRnet6.isRDMSupported, true)

        // OemRnetRnet8 (0xE80)
        XCTAssertEqual(OEMCode.rnetRnet8, 0xE80)
        XCTAssertEqual(OEMCode.rnetRnet8.description, "OemRnetRnet8")
        XCTAssertEqual(OEMCode.rnetRnet8.mnemonic, "OemRnetRnet8")
        XCTAssertEqual(OEMCode.rnetRnet8.manufacturer, "Rnet")
        XCTAssertEqual(OEMCode.rnetRnet8.product, "Rnet-8")
        XCTAssertEqual(OEMCode.rnetRnet8.dmxIn, 4)
        XCTAssertEqual(OEMCode.rnetRnet8.dmxOut, 4)
        XCTAssertEqual(OEMCode.rnetRnet8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rnetRnet8.isRDMSupported, true)

        // OemRobeController (0x1F1)
        XCTAssertEqual(OEMCode.robeController, 0x1F1)
        XCTAssertEqual(OEMCode.robeController.description, "OemRobeController")
        XCTAssertEqual(OEMCode.robeController.mnemonic, "OemRobeController")
        XCTAssertEqual(OEMCode.robeController.manufacturer, "Robe")
        XCTAssertEqual(OEMCode.robeController.product, "Robe 4-4")
        XCTAssertEqual(OEMCode.robeController.dmxIn, 4)
        XCTAssertEqual(OEMCode.robeController.dmxOut, 4)
        XCTAssertEqual(OEMCode.robeController.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.robeController.isRDMSupported, false)

        // OemRobeIle (0x1F0)
        XCTAssertEqual(OEMCode.robeIle, 0x1F0)
        XCTAssertEqual(OEMCode.robeIle.description, "OemRobeIle")
        XCTAssertEqual(OEMCode.robeIle.mnemonic, "OemRobeIle")
        XCTAssertEqual(OEMCode.robeIle.manufacturer, "Robe")
        XCTAssertEqual(OEMCode.robeIle.product, "ILE")
        XCTAssertEqual(OEMCode.robeIle.dmxIn, 1)
        XCTAssertEqual(OEMCode.robeIle.dmxOut, 1)
        XCTAssertEqual(OEMCode.robeIle.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.robeIle.isRDMSupported, false)

        // OemRobertJulDalis1 (0x12A0)
        XCTAssertEqual(OEMCode.robertJulDalis1, 0x12A0)
        XCTAssertEqual(OEMCode.robertJulDalis1.description, "OemRobertJulDalis1")
        XCTAssertEqual(OEMCode.robertJulDalis1.mnemonic, "OemRobertJulDalis1")
        XCTAssertEqual(OEMCode.robertJulDalis1.manufacturer, "Robert Juliat")
        XCTAssertEqual(OEMCode.robertJulDalis1.product, "Dalis Reference : 860")
        XCTAssertEqual(OEMCode.robertJulDalis1.dmxIn, 1)
        XCTAssertEqual(OEMCode.robertJulDalis1.dmxOut, 1)
        XCTAssertEqual(OEMCode.robertJulDalis1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.robertJulDalis1.isRDMSupported, true)

        // OemRobertJulDalis8611 (0x2852)
        XCTAssertEqual(OEMCode.robertJulDalis8611, 0x2852)
        XCTAssertEqual(OEMCode.robertJulDalis8611.description, "OemRobertJulDalis8611")
        XCTAssertEqual(OEMCode.robertJulDalis8611.mnemonic, "OemRobertJulDalis8611")
        XCTAssertEqual(OEMCode.robertJulDalis8611.manufacturer, "ROBERT JULIAT")
        XCTAssertEqual(OEMCode.robertJulDalis8611.product, "DALIS 861")
        XCTAssertEqual(OEMCode.robertJulDalis8611.dmxIn, 1)
        XCTAssertEqual(OEMCode.robertJulDalis8611.dmxOut, 1)
        XCTAssertEqual(OEMCode.robertJulDalis8611.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.robertJulDalis8611.isRDMSupported, true)

        // OemRobertJulDalis8621 (0x2851)
        XCTAssertEqual(OEMCode.robertJulDalis8621, 0x2851)
        XCTAssertEqual(OEMCode.robertJulDalis8621.description, "OemRobertJulDalis8621")
        XCTAssertEqual(OEMCode.robertJulDalis8621.mnemonic, "OemRobertJulDalis8621")
        XCTAssertEqual(OEMCode.robertJulDalis8621.manufacturer, "ROBERT JULIAT")
        XCTAssertEqual(OEMCode.robertJulDalis8621.product, "DALIS 862")
        XCTAssertEqual(OEMCode.robertJulDalis8621.dmxIn, 1)
        XCTAssertEqual(OEMCode.robertJulDalis8621.dmxOut, 1)
        XCTAssertEqual(OEMCode.robertJulDalis8621.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.robertJulDalis8621.isRDMSupported, true)

        // OemRobertJulMerlin1 (0x12A1)
        XCTAssertEqual(OEMCode.robertJulMerlin1, 0x12A1)
        XCTAssertEqual(OEMCode.robertJulMerlin1.description, "OemRobertJulMerlin1")
        XCTAssertEqual(OEMCode.robertJulMerlin1.mnemonic, "OemRobertJulMerlin1")
        XCTAssertEqual(OEMCode.robertJulMerlin1.manufacturer, "Robert Juliat")
        XCTAssertEqual(OEMCode.robertJulMerlin1.product, "Merlin")
        XCTAssertEqual(OEMCode.robertJulMerlin1.dmxIn, 1)
        XCTAssertEqual(OEMCode.robertJulMerlin1.dmxOut, 0)
        XCTAssertEqual(OEMCode.robertJulMerlin1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.robertJulMerlin1.isRDMSupported, true)

        // OemRobertJulOz11691 (0x2850)
        XCTAssertEqual(OEMCode.robertJulOz11691, 0x2850)
        XCTAssertEqual(OEMCode.robertJulOz11691.description, "OemRobertJulOz11691")
        XCTAssertEqual(OEMCode.robertJulOz11691.mnemonic, "OemRobertJulOz11691")
        XCTAssertEqual(OEMCode.robertJulOz11691.manufacturer, "ROBERT JULIAT")
        XCTAssertEqual(OEMCode.robertJulOz11691.product, "OZ 1169")
        XCTAssertEqual(OEMCode.robertJulOz11691.dmxIn, 1)
        XCTAssertEqual(OEMCode.robertJulOz11691.dmxOut, 1)
        XCTAssertEqual(OEMCode.robertJulOz11691.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.robertJulOz11691.isRDMSupported, true)

        // OemRobertJulSpotAlice14691 (0x284F)
        XCTAssertEqual(OEMCode.robertJulSpotAlice14691, 0x284F)
        XCTAssertEqual(OEMCode.robertJulSpotAlice14691.description, "OemRobertJulSpotAlice14691")
        XCTAssertEqual(OEMCode.robertJulSpotAlice14691.mnemonic, "OemRobertJulSpotAlice14691")
        XCTAssertEqual(OEMCode.robertJulSpotAlice14691.manufacturer, "ROBERT JULIAT")
        XCTAssertEqual(OEMCode.robertJulSpotAlice14691.product, "ALICE 1469")
        XCTAssertEqual(OEMCode.robertJulSpotAlice14691.dmxIn, 1)
        XCTAssertEqual(OEMCode.robertJulSpotAlice14691.dmxOut, 1)
        XCTAssertEqual(OEMCode.robertJulSpotAlice14691.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.robertJulSpotAlice14691.isRDMSupported, true)

        // OemRobertJulSpotMe1 (0x284E)
        XCTAssertEqual(OEMCode.robertJulSpotMe1, 0x284E)
        XCTAssertEqual(OEMCode.robertJulSpotMe1.description, "OemRobertJulSpotMe1")
        XCTAssertEqual(OEMCode.robertJulSpotMe1.mnemonic, "OemRobertJulSpotMe1")
        XCTAssertEqual(OEMCode.robertJulSpotMe1.manufacturer, "ROBERT JULIAT")
        XCTAssertEqual(OEMCode.robertJulSpotMe1.product, "SpotME")
        XCTAssertEqual(OEMCode.robertJulSpotMe1.dmxIn, 1)
        XCTAssertEqual(OEMCode.robertJulSpotMe1.dmxOut, 1)
        XCTAssertEqual(OEMCode.robertJulSpotMe1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.robertJulSpotMe1.isRDMSupported, true)

        // OemRocrailDay1 (0x1180)
        XCTAssertEqual(OEMCode.rocrailDay1, 0x1180)
        XCTAssertEqual(OEMCode.rocrailDay1.description, "OemRocrailDay1")
        XCTAssertEqual(OEMCode.rocrailDay1.mnemonic, "OemRocrailDay1")
        XCTAssertEqual(OEMCode.rocrailDay1.manufacturer, "Rocrail")
        XCTAssertEqual(OEMCode.rocrailDay1.product, "Rocrail DMX Daylight")
        XCTAssertEqual(OEMCode.rocrailDay1.dmxIn, 0)
        XCTAssertEqual(OEMCode.rocrailDay1.dmxOut, 1)
        XCTAssertEqual(OEMCode.rocrailDay1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.rocrailDay1.isRDMSupported, false)

        // OemRofBf2 (0x2844)
        XCTAssertEqual(OEMCode.rofBf2, 0x2844)
        XCTAssertEqual(OEMCode.rofBf2.description, "OemRofBf2")
        XCTAssertEqual(OEMCode.rofBf2.mnemonic, "OemRofBf2")
        XCTAssertEqual(OEMCode.rofBf2.manufacturer, "ROF Electronics")
        XCTAssertEqual(OEMCode.rofBf2.product, "Big Foot II")
        XCTAssertEqual(OEMCode.rofBf2.dmxIn, 0)
        XCTAssertEqual(OEMCode.rofBf2.dmxOut, 2)
        XCTAssertEqual(OEMCode.rofBf2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rofBf2.isRDMSupported, false)

        // OemRofBf4 (0x2843)
        XCTAssertEqual(OEMCode.rofBf4, 0x2843)
        XCTAssertEqual(OEMCode.rofBf4.description, "OemRofBf4")
        XCTAssertEqual(OEMCode.rofBf4.mnemonic, "OemRofBf4")
        XCTAssertEqual(OEMCode.rofBf4.manufacturer, "ROF Electronics")
        XCTAssertEqual(OEMCode.rofBf4.product, "Big Foot IV")
        XCTAssertEqual(OEMCode.rofBf4.dmxIn, 0)
        XCTAssertEqual(OEMCode.rofBf4.dmxOut, 4)
        XCTAssertEqual(OEMCode.rofBf4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rofBf4.isRDMSupported, false)

        // OemRofM21 (0x2848)
        XCTAssertEqual(OEMCode.rofM21, 0x2848)
        XCTAssertEqual(OEMCode.rofM21.description, "OemRofM21")
        XCTAssertEqual(OEMCode.rofM21.mnemonic, "OemRofM21")
        XCTAssertEqual(OEMCode.rofM21.manufacturer, "ROF Electronics")
        XCTAssertEqual(OEMCode.rofM21.product, "Multi2verse")
        XCTAssertEqual(OEMCode.rofM21.dmxIn, 0)
        XCTAssertEqual(OEMCode.rofM21.dmxOut, 2)
        XCTAssertEqual(OEMCode.rofM21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rofM21.isRDMSupported, false)

        // OemRofM61 (0x2847)
        XCTAssertEqual(OEMCode.rofM61, 0x2847)
        XCTAssertEqual(OEMCode.rofM61.description, "OemRofM61")
        XCTAssertEqual(OEMCode.rofM61.mnemonic, "OemRofM61")
        XCTAssertEqual(OEMCode.rofM61.manufacturer, "ROF Electronics")
        XCTAssertEqual(OEMCode.rofM61.product, "Multi6verse")
        XCTAssertEqual(OEMCode.rofM61.dmxIn, 0)
        XCTAssertEqual(OEMCode.rofM61.dmxOut, 6)
        XCTAssertEqual(OEMCode.rofM61.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rofM61.isRDMSupported, false)

        // OemRofM81 (0x2846)
        XCTAssertEqual(OEMCode.rofM81, 0x2846)
        XCTAssertEqual(OEMCode.rofM81.description, "OemRofM81")
        XCTAssertEqual(OEMCode.rofM81.mnemonic, "OemRofM81")
        XCTAssertEqual(OEMCode.rofM81.manufacturer, "ROF Electronics")
        XCTAssertEqual(OEMCode.rofM81.product, "Multi8verse")
        XCTAssertEqual(OEMCode.rofM81.dmxIn, 0)
        XCTAssertEqual(OEMCode.rofM81.dmxOut, 8)
        XCTAssertEqual(OEMCode.rofM81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rofM81.isRDMSupported, false)

        // OemRofTnt (0x2845)
        XCTAssertEqual(OEMCode.rofTnt, 0x2845)
        XCTAssertEqual(OEMCode.rofTnt.description, "OemRofTnt")
        XCTAssertEqual(OEMCode.rofTnt.mnemonic, "OemRofTnt")
        XCTAssertEqual(OEMCode.rofTnt.manufacturer, "ROF Electronics")
        XCTAssertEqual(OEMCode.rofTnt.product, "TNT")
        XCTAssertEqual(OEMCode.rofTnt.dmxIn, 0)
        XCTAssertEqual(OEMCode.rofTnt.dmxOut, 2)
        XCTAssertEqual(OEMCode.rofTnt.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.rofTnt.isRDMSupported, false)

        // OemSandB1 (0x9C0)
        XCTAssertEqual(OEMCode.sandB1, 0x9C0)
        XCTAssertEqual(OEMCode.sandB1.description, "OemSandB1")
        XCTAssertEqual(OEMCode.sandB1.mnemonic, "OemSandB1")
        XCTAssertEqual(OEMCode.sandB1.manufacturer, "SAND Network Systems")
        XCTAssertEqual(OEMCode.sandB1.product, "SandPort/SandBox")
        XCTAssertEqual(OEMCode.sandB1.dmxIn, 2)
        XCTAssertEqual(OEMCode.sandB1.dmxOut, 2)
        XCTAssertEqual(OEMCode.sandB1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sandB1.isRDMSupported, false)

        // OemSanDevicesE680 (0xEB0)
        XCTAssertEqual(OEMCode.sanDevicesE680, 0xEB0)
        XCTAssertEqual(OEMCode.sanDevicesE680.description, "OemSanDevicesE680")
        XCTAssertEqual(OEMCode.sanDevicesE680.mnemonic, "OemSanDevicesE680")
        XCTAssertEqual(OEMCode.sanDevicesE680.manufacturer, "SanDevices")
        XCTAssertEqual(OEMCode.sanDevicesE680.product, "E680 pixel controllers")
        XCTAssertEqual(OEMCode.sanDevicesE680.dmxIn, 0)
        XCTAssertEqual(OEMCode.sanDevicesE680.dmxOut, 4)
        XCTAssertEqual(OEMCode.sanDevicesE680.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sanDevicesE680.isRDMSupported, false)

        // OemSanDevicesE6804 (0xEB3)
        XCTAssertEqual(OEMCode.sanDevicesE6804, 0xEB3)
        XCTAssertEqual(OEMCode.sanDevicesE6804.description, "OemSanDevicesE6804")
        XCTAssertEqual(OEMCode.sanDevicesE6804.mnemonic, "OemSanDevicesE6804")
        XCTAssertEqual(OEMCode.sanDevicesE6804.manufacturer, "SanDevices")
        XCTAssertEqual(OEMCode.sanDevicesE6804.product, "E6804 pixel controllers")
        XCTAssertEqual(OEMCode.sanDevicesE6804.dmxIn, 0)
        XCTAssertEqual(OEMCode.sanDevicesE6804.dmxOut, 4)
        XCTAssertEqual(OEMCode.sanDevicesE6804.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sanDevicesE6804.isRDMSupported, false)

        // OemSanDevicesE681 (0xEB1)
        XCTAssertEqual(OEMCode.sanDevicesE681, 0xEB1)
        XCTAssertEqual(OEMCode.sanDevicesE681.description, "OemSanDevicesE681")
        XCTAssertEqual(OEMCode.sanDevicesE681.mnemonic, "OemSanDevicesE681")
        XCTAssertEqual(OEMCode.sanDevicesE681.manufacturer, "SanDevices")
        XCTAssertEqual(OEMCode.sanDevicesE681.product, "E681 pixel controllers")
        XCTAssertEqual(OEMCode.sanDevicesE681.dmxIn, 0)
        XCTAssertEqual(OEMCode.sanDevicesE681.dmxOut, 4)
        XCTAssertEqual(OEMCode.sanDevicesE681.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sanDevicesE681.isRDMSupported, false)

        // OemSanDevicesE682 (0xEB2)
        XCTAssertEqual(OEMCode.sanDevicesE682, 0xEB2)
        XCTAssertEqual(OEMCode.sanDevicesE682.description, "OemSanDevicesE682")
        XCTAssertEqual(OEMCode.sanDevicesE682.mnemonic, "OemSanDevicesE682")
        XCTAssertEqual(OEMCode.sanDevicesE682.manufacturer, "SanDevices")
        XCTAssertEqual(OEMCode.sanDevicesE682.product, "E682 pixel controllers")
        XCTAssertEqual(OEMCode.sanDevicesE682.dmxIn, 0)
        XCTAssertEqual(OEMCode.sanDevicesE682.dmxOut, 4)
        XCTAssertEqual(OEMCode.sanDevicesE682.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sanDevicesE682.isRDMSupported, false)

        // OemSavantSystemsSmartDMX1 (0x28D5)
        XCTAssertEqual(OEMCode.savantSystemsSmartDMX1, 0x28D5)
        XCTAssertEqual(OEMCode.savantSystemsSmartDMX1.description, "OemSavantSystemsSmartDMX1")
        XCTAssertEqual(OEMCode.savantSystemsSmartDMX1.mnemonic, "OemSavantSystemsSmartDMX1")
        XCTAssertEqual(OEMCode.savantSystemsSmartDMX1.manufacturer, "Savant Systems LLC")
        XCTAssertEqual(OEMCode.savantSystemsSmartDMX1.product, "SmartDMX")
        XCTAssertEqual(OEMCode.savantSystemsSmartDMX1.dmxIn, 1)
        XCTAssertEqual(OEMCode.savantSystemsSmartDMX1.dmxOut, 1)
        XCTAssertEqual(OEMCode.savantSystemsSmartDMX1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.savantSystemsSmartDMX1.isRDMSupported, true)

        // OemSbSopraText1 (0x287B)
        XCTAssertEqual(OEMCode.sbSopraText1, 0x287B)
        XCTAssertEqual(OEMCode.sbSopraText1.description, "OemSbSopraText1")
        XCTAssertEqual(OEMCode.sbSopraText1.mnemonic, "OemSbSopraText1")
        XCTAssertEqual(OEMCode.sbSopraText1.manufacturer, "Signblazer Ltd.")
        XCTAssertEqual(OEMCode.sbSopraText1.product, "SopraText")
        XCTAssertEqual(OEMCode.sbSopraText1.dmxIn, 1)
        XCTAssertEqual(OEMCode.sbSopraText1.dmxOut, 0)
        XCTAssertEqual(OEMCode.sbSopraText1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.sbSopraText1.isRDMSupported, false)

        // OemSeaD2000 (0xA40)
        XCTAssertEqual(OEMCode.seaD2000, 0xA40)
        XCTAssertEqual(OEMCode.seaD2000.description, "OemSeaD2000")
        XCTAssertEqual(OEMCode.seaD2000.mnemonic, "OemSeaD2000")
        XCTAssertEqual(OEMCode.seaD2000.manufacturer, "Shanghai SeaChip Electronics Co.,Ltd.")
        XCTAssertEqual(OEMCode.seaD2000.product, "SC-DMX-2000")
        XCTAssertEqual(OEMCode.seaD2000.dmxIn, 2)
        XCTAssertEqual(OEMCode.seaD2000.dmxOut, 2)
        XCTAssertEqual(OEMCode.seaD2000.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.seaD2000.isRDMSupported, true)

        // OemSeanChrisLxRem (0x471)
        XCTAssertEqual(OEMCode.seanChrisLxRem, 0x471)
        XCTAssertEqual(OEMCode.seanChrisLxRem.description, "OemSeanChrisLxRem")
        XCTAssertEqual(OEMCode.seanChrisLxRem.mnemonic, "OemSeanChrisLxRem")
        XCTAssertEqual(OEMCode.seanChrisLxRem.manufacturer, "Sean Christopher")
        XCTAssertEqual(OEMCode.seanChrisLxRem.product, "The Lighting Remote")
        XCTAssertEqual(OEMCode.seanChrisLxRem.dmxIn, 4)
        XCTAssertEqual(OEMCode.seanChrisLxRem.dmxOut, 4)
        XCTAssertEqual(OEMCode.seanChrisLxRem.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.seanChrisLxRem.isRDMSupported, false)

        // OemSeanChrisProjPal (0x470)
        XCTAssertEqual(OEMCode.seanChrisProjPal, 0x470)
        XCTAssertEqual(OEMCode.seanChrisProjPal.description, "OemSeanChrisProjPal")
        XCTAssertEqual(OEMCode.seanChrisProjPal.mnemonic, "OemSeanChrisProjPal")
        XCTAssertEqual(OEMCode.seanChrisProjPal.manufacturer, "Sean Christopher")
        XCTAssertEqual(OEMCode.seanChrisProjPal.product, "Projection Pal")
        XCTAssertEqual(OEMCode.seanChrisProjPal.dmxIn, 1)
        XCTAssertEqual(OEMCode.seanChrisProjPal.dmxOut, 0)
        XCTAssertEqual(OEMCode.seanChrisProjPal.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.seanChrisProjPal.isRDMSupported, true)

        // OemSeikoEpPro (0x1340)
        XCTAssertEqual(OEMCode.seikoEpPro, 0x1340)
        XCTAssertEqual(OEMCode.seikoEpPro.description, "OemSeikoEpPro")
        XCTAssertEqual(OEMCode.seikoEpPro.mnemonic, "OemSeikoEpPro")
        XCTAssertEqual(OEMCode.seikoEpPro.manufacturer, "Seiko Epson Corporation")
        XCTAssertEqual(OEMCode.seikoEpPro.product, "Projector")
        XCTAssertEqual(OEMCode.seikoEpPro.dmxIn, 0)
        XCTAssertEqual(OEMCode.seikoEpPro.dmxOut, 4)
        XCTAssertEqual(OEMCode.seikoEpPro.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.seikoEpPro.isRDMSupported, false)

        // OemSghMartin1 (0x13C1)
        XCTAssertEqual(OEMCode.sghMartin1, 0x13C1)
        XCTAssertEqual(OEMCode.sghMartin1.description, "OemSghMartin1")
        XCTAssertEqual(OEMCode.sghMartin1.mnemonic, "OemSghMartin1")
        XCTAssertEqual(OEMCode.sghMartin1.manufacturer, "SGH")
        XCTAssertEqual(OEMCode.sghMartin1.product, "Martin")
        XCTAssertEqual(OEMCode.sghMartin1.dmxIn, 4)
        XCTAssertEqual(OEMCode.sghMartin1.dmxOut, 4)
        XCTAssertEqual(OEMCode.sghMartin1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sghMartin1.isRDMSupported, true)

        // OemShowJockeySje16 (0x2898)
        XCTAssertEqual(OEMCode.showJockeySje16, 0x2898)
        XCTAssertEqual(OEMCode.showJockeySje16.description, "OemShowJockeySje16")
        XCTAssertEqual(OEMCode.showJockeySje16.mnemonic, "OemShowJockeySje16")
        XCTAssertEqual(OEMCode.showJockeySje16.manufacturer, "showjockey")
        XCTAssertEqual(OEMCode.showJockeySje16.product, "SJ-DMX-E16")
        XCTAssertEqual(OEMCode.showJockeySje16.dmxIn, 0)
        XCTAssertEqual(OEMCode.showJockeySje16.dmxOut, 16)
        XCTAssertEqual(OEMCode.showJockeySje16.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.showJockeySje16.isRDMSupported, false)

        // OemShowLec31 (0x28B0)
        XCTAssertEqual(OEMCode.showLec31, 0x28B0)
        XCTAssertEqual(OEMCode.showLec31.description, "OemShowLec31")
        XCTAssertEqual(OEMCode.showLec31.mnemonic, "OemShowLec31")
        XCTAssertEqual(OEMCode.showLec31.manufacturer, "Showtacle Ltd.")
        XCTAssertEqual(OEMCode.showLec31.product, "LEC3")
        XCTAssertEqual(OEMCode.showLec31.dmxIn, 29)
        XCTAssertEqual(OEMCode.showLec31.dmxOut, 1)
        XCTAssertEqual(OEMCode.showLec31.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showLec31.isRDMSupported, false)

        // OemShowSpiMatrix1 (0x28AF)
        XCTAssertEqual(OEMCode.showSpiMatrix1, 0x28AF)
        XCTAssertEqual(OEMCode.showSpiMatrix1.description, "OemShowSpiMatrix1")
        XCTAssertEqual(OEMCode.showSpiMatrix1.mnemonic, "OemShowSpiMatrix1")
        XCTAssertEqual(OEMCode.showSpiMatrix1.manufacturer, "Showtacle Ltd.")
        XCTAssertEqual(OEMCode.showSpiMatrix1.product, "SPI Matrix")
        XCTAssertEqual(OEMCode.showSpiMatrix1.dmxIn, 29)
        XCTAssertEqual(OEMCode.showSpiMatrix1.dmxOut, 1)
        XCTAssertEqual(OEMCode.showSpiMatrix1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showSpiMatrix1.isRDMSupported, false)

        // OemShowTecN1 (0x281E)
        XCTAssertEqual(OEMCode.showTecN1, 0x281E)
        XCTAssertEqual(OEMCode.showTecN1.description, "OemShowTecN1")
        XCTAssertEqual(OEMCode.showTecN1.mnemonic, "OemShowTecN1")
        XCTAssertEqual(OEMCode.showTecN1.manufacturer, "Showtec")
        XCTAssertEqual(OEMCode.showTecN1.product, "Node-1")
        XCTAssertEqual(OEMCode.showTecN1.dmxIn, 1)
        XCTAssertEqual(OEMCode.showTecN1.dmxOut, 1)
        XCTAssertEqual(OEMCode.showTecN1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showTecN1.isRDMSupported, true)

        // OemShowTecN83 (0x2876)
        XCTAssertEqual(OEMCode.showTecN83, 0x2876)
        XCTAssertEqual(OEMCode.showTecN83.description, "OemShowTecN83")
        XCTAssertEqual(OEMCode.showTecN83.mnemonic, "OemShowTecN83")
        XCTAssertEqual(OEMCode.showTecN83.manufacturer, "Showtec")
        XCTAssertEqual(OEMCode.showTecN83.product, "NET-8-3")
        XCTAssertEqual(OEMCode.showTecN83.dmxIn, 8)
        XCTAssertEqual(OEMCode.showTecN83.dmxOut, 8)
        XCTAssertEqual(OEMCode.showTecN83.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showTecN83.isRDMSupported, false)

        // OemShowTecN83a (0x2878)
        XCTAssertEqual(OEMCode.showTecN83a, 0x2878)
        XCTAssertEqual(OEMCode.showTecN83a.description, "OemShowTecN83a")
        XCTAssertEqual(OEMCode.showTecN83a.mnemonic, "OemShowTecN83a")
        XCTAssertEqual(OEMCode.showTecN83a.manufacturer, "Showtec")
        XCTAssertEqual(OEMCode.showTecN83a.product, "NET-8-3a")
        XCTAssertEqual(OEMCode.showTecN83a.dmxIn, 8)
        XCTAssertEqual(OEMCode.showTecN83a.dmxOut, 8)
        XCTAssertEqual(OEMCode.showTecN83a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showTecN83a.isRDMSupported, false)

        // OemShowTecN85 (0x2877)
        XCTAssertEqual(OEMCode.showTecN85, 0x2877)
        XCTAssertEqual(OEMCode.showTecN85.description, "OemShowTecN85")
        XCTAssertEqual(OEMCode.showTecN85.mnemonic, "OemShowTecN85")
        XCTAssertEqual(OEMCode.showTecN85.manufacturer, "Showtec")
        XCTAssertEqual(OEMCode.showTecN85.product, "NET-8-5")
        XCTAssertEqual(OEMCode.showTecN85.dmxIn, 8)
        XCTAssertEqual(OEMCode.showTecN85.dmxOut, 8)
        XCTAssertEqual(OEMCode.showTecN85.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showTecN85.isRDMSupported, false)

        // OemShowTecPb801 (0x281B)
        XCTAssertEqual(OEMCode.showTecPb801, 0x281B)
        XCTAssertEqual(OEMCode.showTecPb801.description, "OemShowTecPb801")
        XCTAssertEqual(OEMCode.showTecPb801.mnemonic, "OemShowTecPb801")
        XCTAssertEqual(OEMCode.showTecPb801.manufacturer, "Showtec")
        XCTAssertEqual(OEMCode.showTecPb801.product, "Pixel Bubble 80 MKII")
        XCTAssertEqual(OEMCode.showTecPb801.dmxIn, 1)
        XCTAssertEqual(OEMCode.showTecPb801.dmxOut, 0)
        XCTAssertEqual(OEMCode.showTecPb801.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showTecPb801.isRDMSupported, false)

        // OemShowTecPh300Lm1 (0x2821)
        XCTAssertEqual(OEMCode.showTecPh300Lm1, 0x2821)
        XCTAssertEqual(OEMCode.showTecPh300Lm1.description, "OemShowTecPh300Lm1")
        XCTAssertEqual(OEMCode.showTecPh300Lm1.mnemonic, "OemShowTecPh300Lm1")
        XCTAssertEqual(OEMCode.showTecPh300Lm1.manufacturer, "Showtec")
        XCTAssertEqual(OEMCode.showTecPh300Lm1.product, "Phantom 300 LED Matrix")
        XCTAssertEqual(OEMCode.showTecPh300Lm1.dmxIn, 1)
        XCTAssertEqual(OEMCode.showTecPh300Lm1.dmxOut, 0)
        XCTAssertEqual(OEMCode.showTecPh300Lm1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showTecPh300Lm1.isRDMSupported, false)

        // OemShowTecPts96 (0x2875)
        XCTAssertEqual(OEMCode.showTecPts96, 0x2875)
        XCTAssertEqual(OEMCode.showTecPts96.description, "OemShowTecPts96")
        XCTAssertEqual(OEMCode.showTecPts96.mnemonic, "OemShowTecPts96")
        XCTAssertEqual(OEMCode.showTecPts96.manufacturer, "Showtec")
        XCTAssertEqual(OEMCode.showTecPts96.product, "Pixel Tube Set 96")
        XCTAssertEqual(OEMCode.showTecPts96.dmxIn, 1)
        XCTAssertEqual(OEMCode.showTecPts96.dmxOut, 0)
        XCTAssertEqual(OEMCode.showTecPts96.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showTecPts96.isRDMSupported, false)

        // OemShowTecRt200 (0x2879)
        XCTAssertEqual(OEMCode.showTecRt200, 0x2879)
        XCTAssertEqual(OEMCode.showTecRt200.description, "OemShowTecRt200")
        XCTAssertEqual(OEMCode.showTecRt200.mnemonic, "OemShowTecRt200")
        XCTAssertEqual(OEMCode.showTecRt200.manufacturer, "Showtec")
        XCTAssertEqual(OEMCode.showTecRt200.product, "RT-200")
        XCTAssertEqual(OEMCode.showTecRt200.dmxIn, 1)
        XCTAssertEqual(OEMCode.showTecRt200.dmxOut, 1)
        XCTAssertEqual(OEMCode.showTecRt200.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showTecRt200.isRDMSupported, true)

        // OemShowTecWp1 (0x281D)
        XCTAssertEqual(OEMCode.showTecWp1, 0x281D)
        XCTAssertEqual(OEMCode.showTecWp1.description, "OemShowTecWp1")
        XCTAssertEqual(OEMCode.showTecWp1.mnemonic, "OemShowTecWp1")
        XCTAssertEqual(OEMCode.showTecWp1.manufacturer, "Showtec")
        XCTAssertEqual(OEMCode.showTecWp1.product, "White-PIX")
        XCTAssertEqual(OEMCode.showTecWp1.dmxIn, 1)
        XCTAssertEqual(OEMCode.showTecWp1.dmxOut, 0)
        XCTAssertEqual(OEMCode.showTecWp1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.showTecWp1.isRDMSupported, false)

        // OemSigmaNetAm8 (0xFC0)
        XCTAssertEqual(OEMCode.sigmaNetAm8, 0xFC0)
        XCTAssertEqual(OEMCode.sigmaNetAm8.description, "OemSigmaNetAm8")
        XCTAssertEqual(OEMCode.sigmaNetAm8.mnemonic, "OemSigmaNetAm8")
        XCTAssertEqual(OEMCode.sigmaNetAm8.manufacturer, "Sigma Net")
        XCTAssertEqual(OEMCode.sigmaNetAm8.product, "AM-8")
        XCTAssertEqual(OEMCode.sigmaNetAm8.dmxIn, 1)
        XCTAssertEqual(OEMCode.sigmaNetAm8.dmxOut, 3)
        XCTAssertEqual(OEMCode.sigmaNetAm8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sigmaNetAm8.isRDMSupported, false)

        // OemSigmaNetE81 (0x1100)
        XCTAssertEqual(OEMCode.sigmaNetE81, 0x1100)
        XCTAssertEqual(OEMCode.sigmaNetE81.description, "OemSigmaNetE81")
        XCTAssertEqual(OEMCode.sigmaNetE81.mnemonic, "OemSigmaNetE81")
        XCTAssertEqual(OEMCode.sigmaNetE81.manufacturer, "Sigma Net")
        XCTAssertEqual(OEMCode.sigmaNetE81.product, "E-NODE 8-1")
        XCTAssertEqual(OEMCode.sigmaNetE81.dmxIn, 0)
        XCTAssertEqual(OEMCode.sigmaNetE81.dmxOut, 4)
        XCTAssertEqual(OEMCode.sigmaNetE81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sigmaNetE81.isRDMSupported, false)

        // OemSjaekDmxCons1 (0xC14)
        XCTAssertEqual(OEMCode.sjaekDmxCons1, 0xC14)
        XCTAssertEqual(OEMCode.sjaekDmxCons1.description, "OemSjaekDmxCons1")
        XCTAssertEqual(OEMCode.sjaekDmxCons1.mnemonic, "OemSjaekDmxCons1")
        XCTAssertEqual(OEMCode.sjaekDmxCons1.manufacturer, "s-jaekel")
        XCTAssertEqual(OEMCode.sjaekDmxCons1.product, "DmxConsole")
        XCTAssertEqual(OEMCode.sjaekDmxCons1.dmxIn, 4)
        XCTAssertEqual(OEMCode.sjaekDmxCons1.dmxOut, 4)
        XCTAssertEqual(OEMCode.sjaekDmxCons1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sjaekDmxCons1.isRDMSupported, false)

        // OemSjaekDmxScreen (0xC10)
        XCTAssertEqual(OEMCode.sjaekDmxScreen, 0xC10)
        XCTAssertEqual(OEMCode.sjaekDmxScreen.description, "OemSjaekDmxScreen")
        XCTAssertEqual(OEMCode.sjaekDmxScreen.mnemonic, "OemSjaekDmxScreen")
        XCTAssertEqual(OEMCode.sjaekDmxScreen.manufacturer, "s-jaekel")
        XCTAssertEqual(OEMCode.sjaekDmxScreen.product, "DmxScreen")
        XCTAssertEqual(OEMCode.sjaekDmxScreen.dmxIn, 0)
        XCTAssertEqual(OEMCode.sjaekDmxScreen.dmxOut, 4)
        XCTAssertEqual(OEMCode.sjaekDmxScreen.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sjaekDmxScreen.isRDMSupported, false)

        // OemSjaekDmxSnuf (0xC13)
        XCTAssertEqual(OEMCode.sjaekDmxSnuf, 0xC13)
        XCTAssertEqual(OEMCode.sjaekDmxSnuf.description, "OemSjaekDmxSnuf")
        XCTAssertEqual(OEMCode.sjaekDmxSnuf.mnemonic, "OemSjaekDmxSnuf")
        XCTAssertEqual(OEMCode.sjaekDmxSnuf.manufacturer, "s-jaekel")
        XCTAssertEqual(OEMCode.sjaekDmxSnuf.product, "DmxSnuffler")
        XCTAssertEqual(OEMCode.sjaekDmxSnuf.dmxIn, 1)
        XCTAssertEqual(OEMCode.sjaekDmxSnuf.dmxOut, 1)
        XCTAssertEqual(OEMCode.sjaekDmxSnuf.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sjaekDmxSnuf.isRDMSupported, false)

        // OemSjaekTcsaPlayer (0xC15)
        XCTAssertEqual(OEMCode.sjaekTcsaPlayer, 0xC15)
        XCTAssertEqual(OEMCode.sjaekTcsaPlayer.description, "OemSjaekTcsaPlayer")
        XCTAssertEqual(OEMCode.sjaekTcsaPlayer.mnemonic, "OemSjaekTcsaPlayer")
        XCTAssertEqual(OEMCode.sjaekTcsaPlayer.manufacturer, "s-jaekel")
        XCTAssertEqual(OEMCode.sjaekTcsaPlayer.product, "TimecodeSyncAudioPlayer")
        XCTAssertEqual(OEMCode.sjaekTcsaPlayer.dmxIn, 0)
        XCTAssertEqual(OEMCode.sjaekTcsaPlayer.dmxOut, 0)
        XCTAssertEqual(OEMCode.sjaekTcsaPlayer.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.sjaekTcsaPlayer.isRDMSupported, false)

        // OemSjaekTcSend (0xC11)
        XCTAssertEqual(OEMCode.sjaekTcSend, 0xC11)
        XCTAssertEqual(OEMCode.sjaekTcSend.description, "OemSjaekTcSend")
        XCTAssertEqual(OEMCode.sjaekTcSend.mnemonic, "OemSjaekTcSend")
        XCTAssertEqual(OEMCode.sjaekTcSend.manufacturer, "s-jaekel")
        XCTAssertEqual(OEMCode.sjaekTcSend.product, "TimecodeSender")
        XCTAssertEqual(OEMCode.sjaekTcSend.dmxIn, 0)
        XCTAssertEqual(OEMCode.sjaekTcSend.dmxOut, 0)
        XCTAssertEqual(OEMCode.sjaekTcSend.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sjaekTcSend.isRDMSupported, false)

        // OemSjaekTcView (0xC12)
        XCTAssertEqual(OEMCode.sjaekTcView, 0xC12)
        XCTAssertEqual(OEMCode.sjaekTcView.description, "OemSjaekTcView")
        XCTAssertEqual(OEMCode.sjaekTcView.mnemonic, "OemSjaekTcView")
        XCTAssertEqual(OEMCode.sjaekTcView.manufacturer, "s-jaekel")
        XCTAssertEqual(OEMCode.sjaekTcView.product, "TimecodeViewer")
        XCTAssertEqual(OEMCode.sjaekTcView.dmxIn, 0)
        XCTAssertEqual(OEMCode.sjaekTcView.dmxOut, 0)
        XCTAssertEqual(OEMCode.sjaekTcView.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sjaekTcView.isRDMSupported, false)

        // OemSlForte1501 (0x287C)
        XCTAssertEqual(OEMCode.slForte1501, 0x287C)
        XCTAssertEqual(OEMCode.slForte1501.description, "OemSlForte1501")
        XCTAssertEqual(OEMCode.slForte1501.mnemonic, "OemSlForte1501")
        XCTAssertEqual(OEMCode.slForte1501.manufacturer, "Sam light")
        XCTAssertEqual(OEMCode.slForte1501.product, "Forte 150")
        XCTAssertEqual(OEMCode.slForte1501.dmxIn, 1)
        XCTAssertEqual(OEMCode.slForte1501.dmxOut, 4)
        XCTAssertEqual(OEMCode.slForte1501.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.slForte1501.isRDMSupported, true)

        // OemSmoothD1281 (0x2855)
        XCTAssertEqual(OEMCode.smoothD1281, 0x2855)
        XCTAssertEqual(OEMCode.smoothD1281.description, "OemSmoothD1281")
        XCTAssertEqual(OEMCode.smoothD1281.mnemonic, "OemSmoothD1281")
        XCTAssertEqual(OEMCode.smoothD1281.manufacturer, "SmoothLUX B.V.")
        XCTAssertEqual(OEMCode.smoothD1281.product, "SmoothDMX 128")
        XCTAssertEqual(OEMCode.smoothD1281.dmxIn, 0)
        XCTAssertEqual(OEMCode.smoothD1281.dmxOut, 1)
        XCTAssertEqual(OEMCode.smoothD1281.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.smoothD1281.isRDMSupported, false)

        // OemSmoothD5121 (0x2856)
        XCTAssertEqual(OEMCode.smoothD5121, 0x2856)
        XCTAssertEqual(OEMCode.smoothD5121.description, "OemSmoothD5121")
        XCTAssertEqual(OEMCode.smoothD5121.mnemonic, "OemSmoothD5121")
        XCTAssertEqual(OEMCode.smoothD5121.manufacturer, "SmoothLUX B.V.")
        XCTAssertEqual(OEMCode.smoothD5121.product, "SmoothDMX 512")
        XCTAssertEqual(OEMCode.smoothD5121.dmxIn, 0)
        XCTAssertEqual(OEMCode.smoothD5121.dmxOut, 1)
        XCTAssertEqual(OEMCode.smoothD5121.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.smoothD5121.isRDMSupported, false)

        // OemSnLibArtNet (0x430)
        XCTAssertEqual(OEMCode.snLibArtNet, 0x430)
        XCTAssertEqual(OEMCode.snLibArtNet.description, "OemSnLibArtNet")
        XCTAssertEqual(OEMCode.snLibArtNet.mnemonic, "OemSnLibArtNet")
        XCTAssertEqual(OEMCode.snLibArtNet.manufacturer, "Simon Newton")
        XCTAssertEqual(OEMCode.snLibArtNet.product, "LibArtNet")
        XCTAssertEqual(OEMCode.snLibArtNet.dmxIn, 4)
        XCTAssertEqual(OEMCode.snLibArtNet.dmxOut, 4)
        XCTAssertEqual(OEMCode.snLibArtNet.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.snLibArtNet.isRDMSupported, true)

        // OemSnLlaLive (0x431)
        XCTAssertEqual(OEMCode.snLlaLive, 0x431)
        XCTAssertEqual(OEMCode.snLlaLive.description, "OemSnLlaLive")
        XCTAssertEqual(OEMCode.snLlaLive.mnemonic, "OemSnLlaLive")
        XCTAssertEqual(OEMCode.snLlaLive.manufacturer, "Simon Newton")
        XCTAssertEqual(OEMCode.snLlaLive.product, "LLA Live")
        XCTAssertEqual(OEMCode.snLlaLive.dmxIn, 4)
        XCTAssertEqual(OEMCode.snLlaLive.dmxOut, 4)
        XCTAssertEqual(OEMCode.snLlaLive.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.snLlaLive.isRDMSupported, true)

        // OemSoundlight4portNode1 (0x140C)
        XCTAssertEqual(OEMCode.soundlight4portNode1, 0x140C)
        XCTAssertEqual(OEMCode.soundlight4portNode1.description, "OemSoundlight4portNode1")
        XCTAssertEqual(OEMCode.soundlight4portNode1.mnemonic, "OemSoundlight4portNode1")
        XCTAssertEqual(OEMCode.soundlight4portNode1.manufacturer, "Soundlight")
        XCTAssertEqual(OEMCode.soundlight4portNode1.product, "Soundlight 4port node")
        XCTAssertEqual(OEMCode.soundlight4portNode1.dmxIn, 0)
        XCTAssertEqual(OEMCode.soundlight4portNode1.dmxOut, 4)
        XCTAssertEqual(OEMCode.soundlight4portNode1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.soundlight4portNode1.isRDMSupported, true)

        // OemSoundlightUsbDmx2 (0xD10)
        XCTAssertEqual(OEMCode.soundlightUsbDmx2, 0xD10)
        XCTAssertEqual(OEMCode.soundlightUsbDmx2.description, "OemSoundlightUsbDmx2")
        XCTAssertEqual(OEMCode.soundlightUsbDmx2.mnemonic, "OemSoundlightUsbDmx2")
        XCTAssertEqual(OEMCode.soundlightUsbDmx2.manufacturer, "SOUNDLIGHT")
        XCTAssertEqual(OEMCode.soundlightUsbDmx2.product, "USBDMX-TWO")
        XCTAssertEqual(OEMCode.soundlightUsbDmx2.dmxIn, 2)
        XCTAssertEqual(OEMCode.soundlightUsbDmx2.dmxOut, 2)
        XCTAssertEqual(OEMCode.soundlightUsbDmx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.soundlightUsbDmx2.isRDMSupported, true)

        // OemSpectP32 (0x600)
        XCTAssertEqual(OEMCode.spectP32, 0x600)
        XCTAssertEqual(OEMCode.spectP32.description, "OemSpectP32")
        XCTAssertEqual(OEMCode.spectP32.mnemonic, "OemSpectP32")
        XCTAssertEqual(OEMCode.spectP32.manufacturer, "Spectrum Manufacturing")
        XCTAssertEqual(OEMCode.spectP32.product, "Chroma-Q PSU32")
        XCTAssertEqual(OEMCode.spectP32.dmxIn, 0)
        XCTAssertEqual(OEMCode.spectP32.dmxOut, 2)
        XCTAssertEqual(OEMCode.spectP32.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.spectP32.isRDMSupported, true)

        // OemSrsNdp12 (0xA00)
        XCTAssertEqual(OEMCode.srsNdp12, 0xA00)
        XCTAssertEqual(OEMCode.srsNdp12.description, "OemSrsNdp12")
        XCTAssertEqual(OEMCode.srsNdp12.mnemonic, "OemSrsNdp12")
        XCTAssertEqual(OEMCode.srsNdp12.manufacturer, "SRS Light Design")
        XCTAssertEqual(OEMCode.srsNdp12.product, "NDP12 - Network Dimmer Pack")
        XCTAssertEqual(OEMCode.srsNdp12.dmxIn, 2)
        XCTAssertEqual(OEMCode.srsNdp12.dmxOut, 2)
        XCTAssertEqual(OEMCode.srsNdp12.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.srsNdp12.isRDMSupported, true)

        // OemStageEyesTriEng1 (0x2835)
        XCTAssertEqual(OEMCode.stageEyesTriEng1, 0x2835)
        XCTAssertEqual(OEMCode.stageEyesTriEng1.description, "OemStageEyesTriEng1")
        XCTAssertEqual(OEMCode.stageEyesTriEng1.mnemonic, "OemStageEyesTriEng1")
        XCTAssertEqual(OEMCode.stageEyesTriEng1.manufacturer, "Stage-Eyes")
        XCTAssertEqual(OEMCode.stageEyesTriEng1.product, "Tri-Engine")
        XCTAssertEqual(OEMCode.stageEyesTriEng1.dmxIn, 0)
        XCTAssertEqual(OEMCode.stageEyesTriEng1.dmxOut, 0)
        XCTAssertEqual(OEMCode.stageEyesTriEng1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.stageEyesTriEng1.isRDMSupported, false)

        // OemStageTeamMagicNode1 (0x28CF)
        XCTAssertEqual(OEMCode.stageTeamMagicNode1, 0x28CF)
        XCTAssertEqual(OEMCode.stageTeamMagicNode1.description, "OemStageTeamMagicNode1")
        XCTAssertEqual(OEMCode.stageTeamMagicNode1.mnemonic, "OemStageTeamMagicNode1")
        XCTAssertEqual(OEMCode.stageTeamMagicNode1.manufacturer, "Stage Team")
        XCTAssertEqual(OEMCode.stageTeamMagicNode1.product, "MagicNode")
        XCTAssertEqual(OEMCode.stageTeamMagicNode1.dmxIn, 0)
        XCTAssertEqual(OEMCode.stageTeamMagicNode1.dmxOut, 1)
        XCTAssertEqual(OEMCode.stageTeamMagicNode1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.stageTeamMagicNode1.isRDMSupported, false)

        // OemStarGate (0x310)
        XCTAssertEqual(OEMCode.starGate, 0x310)
        XCTAssertEqual(OEMCode.starGate.description, "OemStarGate")
        XCTAssertEqual(OEMCode.starGate.mnemonic, "OemStarGate")
        XCTAssertEqual(OEMCode.starGate.manufacturer, "Sunset Dynamics")
        XCTAssertEqual(OEMCode.starGate.product, "StarGateDMX")
        XCTAssertEqual(OEMCode.starGate.dmxIn, 4)
        XCTAssertEqual(OEMCode.starGate.dmxOut, 4)
        XCTAssertEqual(OEMCode.starGate.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.starGate.isRDMSupported, false)

        // OemStcDdr2404 (0xB00)
        XCTAssertEqual(OEMCode.stcDdr2404, 0xB00)
        XCTAssertEqual(OEMCode.stcDdr2404.description, "OemStcDdr2404")
        XCTAssertEqual(OEMCode.stcDdr2404.mnemonic, "OemStcDdr2404")
        XCTAssertEqual(OEMCode.stcDdr2404.manufacturer, "STC Mecatronica")
        XCTAssertEqual(OEMCode.stcDdr2404.product, "DDR 2404 Digital Dimmer Rack")
        XCTAssertEqual(OEMCode.stcDdr2404.dmxIn, 2)
        XCTAssertEqual(OEMCode.stcDdr2404.dmxOut, 0)
        XCTAssertEqual(OEMCode.stcDdr2404.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.stcDdr2404.isRDMSupported, true)

        // OemSteinEYE371 (0x28F4)
        XCTAssertEqual(OEMCode.steinEYE371, 0x28F4)
        XCTAssertEqual(OEMCode.steinEYE371.description, "OemSteinEYE371")
        XCTAssertEqual(OEMCode.steinEYE371.mnemonic, "OemSteinEYE371")
        XCTAssertEqual(OEMCode.steinEYE371.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinEYE371.product, "EYE-37")
        XCTAssertEqual(OEMCode.steinEYE371.dmxIn, 1)
        XCTAssertEqual(OEMCode.steinEYE371.dmxOut, 0)
        XCTAssertEqual(OEMCode.steinEYE371.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinEYE371.isRDMSupported, true)

        // OemSteinigkeN1 (0x1151)
        XCTAssertEqual(OEMCode.steinigkeN1, 0x1151)
        XCTAssertEqual(OEMCode.steinigkeN1.description, "OemSteinigkeN1")
        XCTAssertEqual(OEMCode.steinigkeN1.mnemonic, "OemSteinigkeN1")
        XCTAssertEqual(OEMCode.steinigkeN1.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinigkeN1.product, "Node 1")
        XCTAssertEqual(OEMCode.steinigkeN1.dmxIn, 0)
        XCTAssertEqual(OEMCode.steinigkeN1.dmxOut, 1)
        XCTAssertEqual(OEMCode.steinigkeN1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinigkeN1.isRDMSupported, false)

        // OemSteinigkeP8 (0x1150)
        XCTAssertEqual(OEMCode.steinigkeP8, 0x1150)
        XCTAssertEqual(OEMCode.steinigkeP8.description, "OemSteinigkeP8")
        XCTAssertEqual(OEMCode.steinigkeP8.mnemonic, "OemSteinigkeP8")
        XCTAssertEqual(OEMCode.steinigkeP8.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinigkeP8.product, "PSU-8A")
        XCTAssertEqual(OEMCode.steinigkeP8.dmxIn, 0)
        XCTAssertEqual(OEMCode.steinigkeP8.dmxOut, 4)
        XCTAssertEqual(OEMCode.steinigkeP8.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.steinigkeP8.isRDMSupported, false)

        // OemSteinigkePix1 (0x1152)
        XCTAssertEqual(OEMCode.steinigkePix1, 0x1152)
        XCTAssertEqual(OEMCode.steinigkePix1.description, "OemSteinigkePix1")
        XCTAssertEqual(OEMCode.steinigkePix1.mnemonic, "OemSteinigkePix1")
        XCTAssertEqual(OEMCode.steinigkePix1.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinigkePix1.product, "Pixel Ball")
        XCTAssertEqual(OEMCode.steinigkePix1.dmxIn, 0)
        XCTAssertEqual(OEMCode.steinigkePix1.dmxOut, 1)
        XCTAssertEqual(OEMCode.steinigkePix1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinigkePix1.isRDMSupported, false)

        // OemSteinigkeSb10 (0x1155)
        XCTAssertEqual(OEMCode.steinigkeSb10, 0x1155)
        XCTAssertEqual(OEMCode.steinigkeSb10.description, "OemSteinigkeSb10")
        XCTAssertEqual(OEMCode.steinigkeSb10.mnemonic, "OemSteinigkeSb10")
        XCTAssertEqual(OEMCode.steinigkeSb10.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinigkeSb10.product, "Stage Bar 10")
        XCTAssertEqual(OEMCode.steinigkeSb10.dmxIn, 0)
        XCTAssertEqual(OEMCode.steinigkeSb10.dmxOut, 1)
        XCTAssertEqual(OEMCode.steinigkeSb10.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.steinigkeSb10.isRDMSupported, false)

        // OemSteinigkeSb5 (0x1154)
        XCTAssertEqual(OEMCode.steinigkeSb5, 0x1154)
        XCTAssertEqual(OEMCode.steinigkeSb5.description, "OemSteinigkeSb5")
        XCTAssertEqual(OEMCode.steinigkeSb5.mnemonic, "OemSteinigkeSb5")
        XCTAssertEqual(OEMCode.steinigkeSb5.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinigkeSb5.product, "Stage Bar 5")
        XCTAssertEqual(OEMCode.steinigkeSb5.dmxIn, 0)
        XCTAssertEqual(OEMCode.steinigkeSb5.dmxOut, 1)
        XCTAssertEqual(OEMCode.steinigkeSb5.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.steinigkeSb5.isRDMSupported, false)

        // OemSteinigkeZ1 (0x1153)
        XCTAssertEqual(OEMCode.steinigkeZ1, 0x1153)
        XCTAssertEqual(OEMCode.steinigkeZ1.description, "OemSteinigkeZ1")
        XCTAssertEqual(OEMCode.steinigkeZ1.mnemonic, "OemSteinigkeZ1")
        XCTAssertEqual(OEMCode.steinigkeZ1.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinigkeZ1.product, "Zeitgeist PMC-16")
        XCTAssertEqual(OEMCode.steinigkeZ1.dmxIn, 1)
        XCTAssertEqual(OEMCode.steinigkeZ1.dmxOut, 0)
        XCTAssertEqual(OEMCode.steinigkeZ1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinigkeZ1.isRDMSupported, false)

        // OemSteinLedTmhX25Xl1 (0x2810)
        XCTAssertEqual(OEMCode.steinLedTmhX25Xl1, 0x2810)
        XCTAssertEqual(OEMCode.steinLedTmhX25Xl1.description, "OemSteinLedTmhX25Xl1")
        XCTAssertEqual(OEMCode.steinLedTmhX25Xl1.mnemonic, "OemSteinLedTmhX25Xl1")
        XCTAssertEqual(OEMCode.steinLedTmhX25Xl1.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinLedTmhX25Xl1.product, "LED TMH-X25 XL")
        XCTAssertEqual(OEMCode.steinLedTmhX25Xl1.dmxIn, 1)
        XCTAssertEqual(OEMCode.steinLedTmhX25Xl1.dmxOut, 0)
        XCTAssertEqual(OEMCode.steinLedTmhX25Xl1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinLedTmhX25Xl1.isRDMSupported, false)

        // OemSteinP4a (0x1310)
        XCTAssertEqual(OEMCode.steinP4a, 0x1310)
        XCTAssertEqual(OEMCode.steinP4a.description, "OemSteinP4a")
        XCTAssertEqual(OEMCode.steinP4a.mnemonic, "OemSteinP4a")
        XCTAssertEqual(OEMCode.steinP4a.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinP4a.product, "PSU-4A")
        XCTAssertEqual(OEMCode.steinP4a.dmxIn, 1)
        XCTAssertEqual(OEMCode.steinP4a.dmxOut, 0)
        XCTAssertEqual(OEMCode.steinP4a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinP4a.isRDMSupported, false)

        // OemSteinShowMode82 (0x2808)
        XCTAssertEqual(OEMCode.steinShowMode82, 0x2808)
        XCTAssertEqual(OEMCode.steinShowMode82.description, "OemSteinShowMode82")
        XCTAssertEqual(OEMCode.steinShowMode82.mnemonic, "OemSteinShowMode82")
        XCTAssertEqual(OEMCode.steinShowMode82.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinShowMode82.product, "Node 8 MK2")
        XCTAssertEqual(OEMCode.steinShowMode82.dmxIn, 2)
        XCTAssertEqual(OEMCode.steinShowMode82.dmxOut, 8)
        XCTAssertEqual(OEMCode.steinShowMode82.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinShowMode82.isRDMSupported, false)

        // OemSteinSunbar101 (0x28D3)
        XCTAssertEqual(OEMCode.steinSunbar101, 0x28D3)
        XCTAssertEqual(OEMCode.steinSunbar101.description, "OemSteinSunbar101")
        XCTAssertEqual(OEMCode.steinSunbar101.mnemonic, "OemSteinSunbar101")
        XCTAssertEqual(OEMCode.steinSunbar101.manufacturer, "Steinigke Showtechnic GmbH")
        XCTAssertEqual(OEMCode.steinSunbar101.product, "Sunbar 10")
        XCTAssertEqual(OEMCode.steinSunbar101.dmxIn, 1)
        XCTAssertEqual(OEMCode.steinSunbar101.dmxOut, 0)
        XCTAssertEqual(OEMCode.steinSunbar101.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.steinSunbar101.isRDMSupported, true)

        // OemStrand65161 (0x12E0)
        XCTAssertEqual(OEMCode.strand65161, 0x12E0)
        XCTAssertEqual(OEMCode.strand65161.description, "OemStrand65161")
        XCTAssertEqual(OEMCode.strand65161.mnemonic, "OemStrand65161")
        XCTAssertEqual(OEMCode.strand65161.manufacturer, "Philips Strand Lighting")
        XCTAssertEqual(OEMCode.strand65161.product, "Single Gang Node, PN 65161")
        XCTAssertEqual(OEMCode.strand65161.dmxIn, 1)
        XCTAssertEqual(OEMCode.strand65161.dmxOut, 1)
        XCTAssertEqual(OEMCode.strand65161.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.strand65161.isRDMSupported, true)

        // OemStrand65162 (0x12E5)
        XCTAssertEqual(OEMCode.strand65162, 0x12E5)
        XCTAssertEqual(OEMCode.strand65162.description, "OemStrand65162")
        XCTAssertEqual(OEMCode.strand65162.mnemonic, "OemStrand65162")
        XCTAssertEqual(OEMCode.strand65162.manufacturer, "Philips Strand Lighting")
        XCTAssertEqual(OEMCode.strand65162.product, "2 Port Node, PN 65162")
        XCTAssertEqual(OEMCode.strand65162.dmxIn, 2)
        XCTAssertEqual(OEMCode.strand65162.dmxOut, 2)
        XCTAssertEqual(OEMCode.strand65162.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.strand65162.isRDMSupported, true)

        // OemStrand65163 (0x12E1)
        XCTAssertEqual(OEMCode.strand65163, 0x12E1)
        XCTAssertEqual(OEMCode.strand65163.description, "OemStrand65163")
        XCTAssertEqual(OEMCode.strand65163.mnemonic, "OemStrand65163")
        XCTAssertEqual(OEMCode.strand65163.manufacturer, "Philips Strand Lighting")
        XCTAssertEqual(OEMCode.strand65163.product, "3 Port Node, PN 65163")
        XCTAssertEqual(OEMCode.strand65163.dmxIn, 3)
        XCTAssertEqual(OEMCode.strand65163.dmxOut, 3)
        XCTAssertEqual(OEMCode.strand65163.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.strand65163.isRDMSupported, true)

        // OemStrand65168 (0x12E4)
        XCTAssertEqual(OEMCode.strand65168, 0x12E4)
        XCTAssertEqual(OEMCode.strand65168.description, "OemStrand65168")
        XCTAssertEqual(OEMCode.strand65168.mnemonic, "OemStrand65168")
        XCTAssertEqual(OEMCode.strand65168.manufacturer, "Philips Strand Lighting")
        XCTAssertEqual(OEMCode.strand65168.product, "8 Port Node, PN 65168")
        XCTAssertEqual(OEMCode.strand65168.dmxIn, 4)
        XCTAssertEqual(OEMCode.strand65168.dmxOut, 4)
        XCTAssertEqual(OEMCode.strand65168.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.strand65168.isRDMSupported, true)

        // OemStrand74261 (0x12E3)
        XCTAssertEqual(OEMCode.strand74261, 0x12E3)
        XCTAssertEqual(OEMCode.strand74261.description, "OemStrand74261")
        XCTAssertEqual(OEMCode.strand74261.mnemonic, "OemStrand74261")
        XCTAssertEqual(OEMCode.strand74261.manufacturer, "Philips Strand Lighting")
        XCTAssertEqual(OEMCode.strand74261.product, "3 Port Embedded PCB, PN 74261")
        XCTAssertEqual(OEMCode.strand74261.dmxIn, 3)
        XCTAssertEqual(OEMCode.strand74261.dmxOut, 3)
        XCTAssertEqual(OEMCode.strand74261.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.strand74261.isRDMSupported, true)

        // OemStrand970387 (0x12E2)
        XCTAssertEqual(OEMCode.strand970387, 0x12E2)
        XCTAssertEqual(OEMCode.strand970387.description, "OemStrand970387")
        XCTAssertEqual(OEMCode.strand970387.mnemonic, "OemStrand970387")
        XCTAssertEqual(OEMCode.strand970387.manufacturer, "Philips Strand Lighting")
        XCTAssertEqual(OEMCode.strand970387.product, "3 Port DIN PCB, PN 97-0387")
        XCTAssertEqual(OEMCode.strand970387.dmxIn, 3)
        XCTAssertEqual(OEMCode.strand970387.dmxOut, 3)
        XCTAssertEqual(OEMCode.strand970387.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.strand970387.isRDMSupported, true)

        // OemStXn2 (0x2868)
        XCTAssertEqual(OEMCode.stXn2, 0x2868)
        XCTAssertEqual(OEMCode.stXn2.description, "OemStXn2")
        XCTAssertEqual(OEMCode.stXn2.mnemonic, "OemStXn2")
        XCTAssertEqual(OEMCode.stXn2.manufacturer, "Starlight")
        XCTAssertEqual(OEMCode.stXn2.product, "XNET-2")
        XCTAssertEqual(OEMCode.stXn2.dmxIn, 2)
        XCTAssertEqual(OEMCode.stXn2.dmxOut, 2)
        XCTAssertEqual(OEMCode.stXn2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.stXn2.isRDMSupported, true)

        // OemStXn4 (0x2867)
        XCTAssertEqual(OEMCode.stXn4, 0x2867)
        XCTAssertEqual(OEMCode.stXn4.description, "OemStXn4")
        XCTAssertEqual(OEMCode.stXn4.mnemonic, "OemStXn4")
        XCTAssertEqual(OEMCode.stXn4.manufacturer, "Starlight")
        XCTAssertEqual(OEMCode.stXn4.product, "XNET-4")
        XCTAssertEqual(OEMCode.stXn4.dmxIn, 4)
        XCTAssertEqual(OEMCode.stXn4.dmxOut, 4)
        XCTAssertEqual(OEMCode.stXn4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.stXn4.isRDMSupported, true)

        // OemStXn8 (0x2866)
        XCTAssertEqual(OEMCode.stXn8, 0x2866)
        XCTAssertEqual(OEMCode.stXn8.description, "OemStXn8")
        XCTAssertEqual(OEMCode.stXn8.mnemonic, "OemStXn8")
        XCTAssertEqual(OEMCode.stXn8.manufacturer, "Starlight")
        XCTAssertEqual(OEMCode.stXn8.product, "XNET-8")
        XCTAssertEqual(OEMCode.stXn8.dmxIn, 8)
        XCTAssertEqual(OEMCode.stXn8.dmxOut, 8)
        XCTAssertEqual(OEMCode.stXn8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.stXn8.isRDMSupported, true)

        // OemSunLiteEsaip (0x3B0)
        XCTAssertEqual(OEMCode.sunLiteEsaip, 0x3B0)
        XCTAssertEqual(OEMCode.sunLiteEsaip.description, "OemSunLiteEsaip")
        XCTAssertEqual(OEMCode.sunLiteEsaip.mnemonic, "OemSunLiteEsaip")
        XCTAssertEqual(OEMCode.sunLiteEsaip.manufacturer, "Nicolaudie")
        XCTAssertEqual(OEMCode.sunLiteEsaip.product, "Easy")
        XCTAssertEqual(OEMCode.sunLiteEsaip.dmxIn, 0)
        XCTAssertEqual(OEMCode.sunLiteEsaip.dmxOut, 1)
        XCTAssertEqual(OEMCode.sunLiteEsaip.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sunLiteEsaip.isRDMSupported, false)

        // OemSunLiteMagic3d (0x3B1)
        XCTAssertEqual(OEMCode.sunLiteMagic3d, 0x3B1)
        XCTAssertEqual(OEMCode.sunLiteMagic3d.description, "OemSunLiteMagic3d")
        XCTAssertEqual(OEMCode.sunLiteMagic3d.mnemonic, "OemSunLiteMagic3d")
        XCTAssertEqual(OEMCode.sunLiteMagic3d.manufacturer, "Nicolaudie")
        XCTAssertEqual(OEMCode.sunLiteMagic3d.product, "Magic 3D")
        XCTAssertEqual(OEMCode.sunLiteMagic3d.dmxIn, 0)
        XCTAssertEqual(OEMCode.sunLiteMagic3d.dmxOut, 4)
        XCTAssertEqual(OEMCode.sunLiteMagic3d.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.sunLiteMagic3d.isRDMSupported, false)

        // OemSwgEasy1 (0x13C4)
        XCTAssertEqual(OEMCode.swgEasy1, 0x13C4)
        XCTAssertEqual(OEMCode.swgEasy1.description, "OemSwgEasy1")
        XCTAssertEqual(OEMCode.swgEasy1.mnemonic, "OemSwgEasy1")
        XCTAssertEqual(OEMCode.swgEasy1.manufacturer, "SWGroup")
        XCTAssertEqual(OEMCode.swgEasy1.product, "Easydim")
        XCTAssertEqual(OEMCode.swgEasy1.dmxIn, 0)
        XCTAssertEqual(OEMCode.swgEasy1.dmxOut, 1)
        XCTAssertEqual(OEMCode.swgEasy1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.swgEasy1.isRDMSupported, false)

        // OemSwissXnd4 (0x13D6)
        XCTAssertEqual(OEMCode.swissXnd4, 0x13D6)
        XCTAssertEqual(OEMCode.swissXnd4.description, "OemSwissXnd4")
        XCTAssertEqual(OEMCode.swissXnd4.mnemonic, "OemSwissXnd4")
        XCTAssertEqual(OEMCode.swissXnd4.manufacturer, "Swisson AG")
        XCTAssertEqual(OEMCode.swissXnd4.product, "XND-4")
        XCTAssertEqual(OEMCode.swissXnd4.dmxIn, 0)
        XCTAssertEqual(OEMCode.swissXnd4.dmxOut, 4)
        XCTAssertEqual(OEMCode.swissXnd4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.swissXnd4.isRDMSupported, false)

        // OemSwissXnd81 (0x28C1)
        XCTAssertEqual(OEMCode.swissXnd81, 0x28C1)
        XCTAssertEqual(OEMCode.swissXnd81.description, "OemSwissXnd81")
        XCTAssertEqual(OEMCode.swissXnd81.mnemonic, "OemSwissXnd81")
        XCTAssertEqual(OEMCode.swissXnd81.manufacturer, "Swisson AG")
        XCTAssertEqual(OEMCode.swissXnd81.product, "XND-8")
        XCTAssertEqual(OEMCode.swissXnd81.dmxIn, 0)
        XCTAssertEqual(OEMCode.swissXnd81.dmxOut, 8)
        XCTAssertEqual(OEMCode.swissXnd81.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.swissXnd81.isRDMSupported, true)

        // OemSynthLumin (0xA50)
        XCTAssertEqual(OEMCode.synthLumin, 0xA50)
        XCTAssertEqual(OEMCode.synthLumin.description, "OemSynthLumin")
        XCTAssertEqual(OEMCode.synthLumin.mnemonic, "OemSynthLumin")
        XCTAssertEqual(OEMCode.synthLumin.manufacturer, "Synthe FX")
        XCTAssertEqual(OEMCode.synthLumin.product, "Luminair")
        XCTAssertEqual(OEMCode.synthLumin.dmxIn, 1)
        XCTAssertEqual(OEMCode.synthLumin.dmxOut, 1)
        XCTAssertEqual(OEMCode.synthLumin.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.synthLumin.isRDMSupported, false)

        // OemSynthPixNode (0xA51)
        XCTAssertEqual(OEMCode.synthPixNode, 0xA51)
        XCTAssertEqual(OEMCode.synthPixNode.description, "OemSynthPixNode")
        XCTAssertEqual(OEMCode.synthPixNode.mnemonic, "OemSynthPixNode")
        XCTAssertEqual(OEMCode.synthPixNode.manufacturer, "Synthe FX")
        XCTAssertEqual(OEMCode.synthPixNode.product, "Pixelnode")
        XCTAssertEqual(OEMCode.synthPixNode.dmxIn, 1)
        XCTAssertEqual(OEMCode.synthPixNode.dmxOut, 0)
        XCTAssertEqual(OEMCode.synthPixNode.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.synthPixNode.isRDMSupported, false)

        // OemSystemDmxPixRout1 (0x2833)
        XCTAssertEqual(OEMCode.systemDmxPixRout1, 0x2833)
        XCTAssertEqual(OEMCode.systemDmxPixRout1.description, "OemSystemDmxPixRout1")
        XCTAssertEqual(OEMCode.systemDmxPixRout1.mnemonic, "OemSystemDmxPixRout1")
        XCTAssertEqual(OEMCode.systemDmxPixRout1.manufacturer, "Schnick-Schnack-Systems GmbH")
        XCTAssertEqual(OEMCode.systemDmxPixRout1.product, "DMX Pixel-Router")
        XCTAssertEqual(OEMCode.systemDmxPixRout1.dmxIn, 0)
        XCTAssertEqual(OEMCode.systemDmxPixRout1.dmxOut, 4)
        XCTAssertEqual(OEMCode.systemDmxPixRout1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.systemDmxPixRout1.isRDMSupported, false)

        // OemSystemDpbPixRout1 (0x2834)
        XCTAssertEqual(OEMCode.systemDpbPixRout1, 0x2834)
        XCTAssertEqual(OEMCode.systemDpbPixRout1.description, "OemSystemDpbPixRout1")
        XCTAssertEqual(OEMCode.systemDpbPixRout1.mnemonic, "OemSystemDpbPixRout1")
        XCTAssertEqual(OEMCode.systemDpbPixRout1.manufacturer, "Schnick-Schnack-Systems GmbH")
        XCTAssertEqual(OEMCode.systemDpbPixRout1.product, "DPB Pixel-Router")
        XCTAssertEqual(OEMCode.systemDpbPixRout1.dmxIn, 0)
        XCTAssertEqual(OEMCode.systemDpbPixRout1.dmxOut, 4)
        XCTAssertEqual(OEMCode.systemDpbPixRout1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.systemDpbPixRout1.isRDMSupported, false)

        // OemSystemNet4e (0x450)
        XCTAssertEqual(OEMCode.systemNet4e, 0x450)
        XCTAssertEqual(OEMCode.systemNet4e.description, "OemSystemNet4e")
        XCTAssertEqual(OEMCode.systemNet4e.mnemonic, "OemSystemNet4e")
        XCTAssertEqual(OEMCode.systemNet4e.manufacturer, "Schnick-Schnack-Systems")
        XCTAssertEqual(OEMCode.systemNet4e.product, "Systemnetzteil 4E")
        XCTAssertEqual(OEMCode.systemNet4e.dmxIn, 0)
        XCTAssertEqual(OEMCode.systemNet4e.dmxOut, 4)
        XCTAssertEqual(OEMCode.systemNet4e.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.systemNet4e.isRDMSupported, false)

        // OemSystemOne (0x451)
        XCTAssertEqual(OEMCode.systemOne, 0x451)
        XCTAssertEqual(OEMCode.systemOne.description, "OemSystemOne")
        XCTAssertEqual(OEMCode.systemOne.mnemonic, "OemSystemOne")
        XCTAssertEqual(OEMCode.systemOne.manufacturer, "Schnick-Schnack-Systems")
        XCTAssertEqual(OEMCode.systemOne.product, "SysOne")
        XCTAssertEqual(OEMCode.systemOne.dmxIn, 0)
        XCTAssertEqual(OEMCode.systemOne.dmxOut, 2)
        XCTAssertEqual(OEMCode.systemOne.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.systemOne.isRDMSupported, false)

        // OemSystemPixGate (0x452)
        XCTAssertEqual(OEMCode.systemPixGate, 0x452)
        XCTAssertEqual(OEMCode.systemPixGate.description, "OemSystemPixGate")
        XCTAssertEqual(OEMCode.systemPixGate.mnemonic, "OemSystemPixGate")
        XCTAssertEqual(OEMCode.systemPixGate.manufacturer, "Schnick-Schnack-Systems")
        XCTAssertEqual(OEMCode.systemPixGate.product, "Pix Gate")
        XCTAssertEqual(OEMCode.systemPixGate.dmxIn, 0)
        XCTAssertEqual(OEMCode.systemPixGate.dmxOut, 4)
        XCTAssertEqual(OEMCode.systemPixGate.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.systemPixGate.isRDMSupported, false)

        // OemSyvtYmrx8031 (0x28CB)
        XCTAssertEqual(OEMCode.syvtYmrx8031, 0x28CB)
        XCTAssertEqual(OEMCode.syvtYmrx8031.description, "OemSyvtYmrx8031")
        XCTAssertEqual(OEMCode.syvtYmrx8031.mnemonic, "OemSyvtYmrx8031")
        XCTAssertEqual(OEMCode.syvtYmrx8031.manufacturer, "Shenzhen Yuming Vision Technology Co.,Ltd.")
        XCTAssertEqual(OEMCode.syvtYmrx8031.product, "YM-RX803")
        XCTAssertEqual(OEMCode.syvtYmrx8031.dmxIn, 0)
        XCTAssertEqual(OEMCode.syvtYmrx8031.dmxOut, 4)
        XCTAssertEqual(OEMCode.syvtYmrx8031.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.syvtYmrx8031.isRDMSupported, true)

        // OemTeamXlntIp (0x440)
        XCTAssertEqual(OEMCode.teamXlntIp, 0x440)
        XCTAssertEqual(OEMCode.teamXlntIp.description, "OemTeamXlntIp")
        XCTAssertEqual(OEMCode.teamXlntIp.mnemonic, "OemTeamXlntIp")
        XCTAssertEqual(OEMCode.teamXlntIp.manufacturer, "XLNT")
        XCTAssertEqual(OEMCode.teamXlntIp.product, "OemTeamXlntIp")
        XCTAssertEqual(OEMCode.teamXlntIp.dmxIn, 2)
        XCTAssertEqual(OEMCode.teamXlntIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.teamXlntIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.teamXlntIp.isRDMSupported, false)

        // OemTeamXlntOp (0x441)
        XCTAssertEqual(OEMCode.teamXlntOp, 0x441)
        XCTAssertEqual(OEMCode.teamXlntOp.description, "OemTeamXlntOp")
        XCTAssertEqual(OEMCode.teamXlntOp.mnemonic, "OemTeamXlntOp")
        XCTAssertEqual(OEMCode.teamXlntOp.manufacturer, "XLNT")
        XCTAssertEqual(OEMCode.teamXlntOp.product, "OemTeamXlntOp")
        XCTAssertEqual(OEMCode.teamXlntOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.teamXlntOp.dmxOut, 2)
        XCTAssertEqual(OEMCode.teamXlntOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.teamXlntOp.isRDMSupported, false)

        // OemTecArt1chn (0x910)
        XCTAssertEqual(OEMCode.tecArt1chn, 0x910)
        XCTAssertEqual(OEMCode.tecArt1chn.description, "OemTecArt1chn")
        XCTAssertEqual(OEMCode.tecArt1chn.mnemonic, "OemTecArt1chn")
        XCTAssertEqual(OEMCode.tecArt1chn.manufacturer, "TecArt Lighting")
        XCTAssertEqual(OEMCode.tecArt1chn.product, "1CH Node")
        XCTAssertEqual(OEMCode.tecArt1chn.dmxIn, 1)
        XCTAssertEqual(OEMCode.tecArt1chn.dmxOut, 1)
        XCTAssertEqual(OEMCode.tecArt1chn.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.tecArt1chn.isRDMSupported, true)

        // OemTecArt2chn (0x912)
        XCTAssertEqual(OEMCode.tecArt2chn, 0x912)
        XCTAssertEqual(OEMCode.tecArt2chn.description, "OemTecArt2chn")
        XCTAssertEqual(OEMCode.tecArt2chn.mnemonic, "OemTecArt2chn")
        XCTAssertEqual(OEMCode.tecArt2chn.manufacturer, "TecArt Lighting")
        XCTAssertEqual(OEMCode.tecArt2chn.product, "2CH Node")
        XCTAssertEqual(OEMCode.tecArt2chn.dmxIn, 2)
        XCTAssertEqual(OEMCode.tecArt2chn.dmxOut, 2)
        XCTAssertEqual(OEMCode.tecArt2chn.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.tecArt2chn.isRDMSupported, true)

        // OemTecArtMerge (0x911)
        XCTAssertEqual(OEMCode.tecArtMerge, 0x911)
        XCTAssertEqual(OEMCode.tecArtMerge.description, "OemTecArtMerge")
        XCTAssertEqual(OEMCode.tecArtMerge.mnemonic, "OemTecArtMerge")
        XCTAssertEqual(OEMCode.tecArtMerge.manufacturer, "TecArt Lighting")
        XCTAssertEqual(OEMCode.tecArtMerge.product, "Ethernet Merger")
        XCTAssertEqual(OEMCode.tecArtMerge.dmxIn, 0)
        XCTAssertEqual(OEMCode.tecArtMerge.dmxOut, 1)
        XCTAssertEqual(OEMCode.tecArtMerge.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.tecArtMerge.isRDMSupported, true)

        // OemTechKnowRx1 (0xFE2)
        XCTAssertEqual(OEMCode.techKnowRx1, 0xFE2)
        XCTAssertEqual(OEMCode.techKnowRx1.description, "OemTechKnowRx1")
        XCTAssertEqual(OEMCode.techKnowRx1.mnemonic, "OemTechKnowRx1")
        XCTAssertEqual(OEMCode.techKnowRx1.manufacturer, "techKnow Design")
        XCTAssertEqual(OEMCode.techKnowRx1.product, "techNodeRx1")
        XCTAssertEqual(OEMCode.techKnowRx1.dmxIn, 1)
        XCTAssertEqual(OEMCode.techKnowRx1.dmxOut, 0)
        XCTAssertEqual(OEMCode.techKnowRx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.techKnowRx1.isRDMSupported, false)

        // OemTechKnowRx2 (0xFE3)
        XCTAssertEqual(OEMCode.techKnowRx2, 0xFE3)
        XCTAssertEqual(OEMCode.techKnowRx2.description, "OemTechKnowRx2")
        XCTAssertEqual(OEMCode.techKnowRx2.mnemonic, "OemTechKnowRx2")
        XCTAssertEqual(OEMCode.techKnowRx2.manufacturer, "techKnow Design")
        XCTAssertEqual(OEMCode.techKnowRx2.product, "techNodeRx2")
        XCTAssertEqual(OEMCode.techKnowRx2.dmxIn, 2)
        XCTAssertEqual(OEMCode.techKnowRx2.dmxOut, 0)
        XCTAssertEqual(OEMCode.techKnowRx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.techKnowRx2.isRDMSupported, false)

        // OemTechKnowTx1 (0xFE0)
        XCTAssertEqual(OEMCode.techKnowTx1, 0xFE0)
        XCTAssertEqual(OEMCode.techKnowTx1.description, "OemTechKnowTx1")
        XCTAssertEqual(OEMCode.techKnowTx1.mnemonic, "OemTechKnowTx1")
        XCTAssertEqual(OEMCode.techKnowTx1.manufacturer, "techKnow Design")
        XCTAssertEqual(OEMCode.techKnowTx1.product, "techNodeTx1")
        XCTAssertEqual(OEMCode.techKnowTx1.dmxIn, 0)
        XCTAssertEqual(OEMCode.techKnowTx1.dmxOut, 1)
        XCTAssertEqual(OEMCode.techKnowTx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.techKnowTx1.isRDMSupported, true)

        // OemTechKnowTx2 (0xFE1)
        XCTAssertEqual(OEMCode.techKnowTx2, 0xFE1)
        XCTAssertEqual(OEMCode.techKnowTx2.description, "OemTechKnowTx2")
        XCTAssertEqual(OEMCode.techKnowTx2.mnemonic, "OemTechKnowTx2")
        XCTAssertEqual(OEMCode.techKnowTx2.manufacturer, "techKnow Design")
        XCTAssertEqual(OEMCode.techKnowTx2.product, "techNodeTx2")
        XCTAssertEqual(OEMCode.techKnowTx2.dmxIn, 0)
        XCTAssertEqual(OEMCode.techKnowTx2.dmxOut, 2)
        XCTAssertEqual(OEMCode.techKnowTx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.techKnowTx2.isRDMSupported, true)

        // OemThbAmx1 (0x2865)
        XCTAssertEqual(OEMCode.thbAmx1, 0x2865)
        XCTAssertEqual(OEMCode.thbAmx1.description, "OemThbAmx1")
        XCTAssertEqual(OEMCode.thbAmx1.mnemonic, "OemThbAmx1")
        XCTAssertEqual(OEMCode.thbAmx1.manufacturer, "Tian Hai BeiFang")
        XCTAssertEqual(OEMCode.thbAmx1.product, "AMX")
        XCTAssertEqual(OEMCode.thbAmx1.dmxIn, 12)
        XCTAssertEqual(OEMCode.thbAmx1.dmxOut, 12)
        XCTAssertEqual(OEMCode.thbAmx1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.thbAmx1.isRDMSupported, true)

        // OemThornArtLynxOp (0xD30)
        XCTAssertEqual(OEMCode.thornArtLynxOp, 0xD30)
        XCTAssertEqual(OEMCode.thornArtLynxOp.description, "OemThornArtLynxOp")
        XCTAssertEqual(OEMCode.thornArtLynxOp.mnemonic, "OemThornArtLynxOp")
        XCTAssertEqual(OEMCode.thornArtLynxOp.manufacturer, "Thorn Lighting Ltd")
        XCTAssertEqual(OEMCode.thornArtLynxOp.product, "SensaPro eDMX")
        XCTAssertEqual(OEMCode.thornArtLynxOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.thornArtLynxOp.dmxOut, 2)
        XCTAssertEqual(OEMCode.thornArtLynxOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.thornArtLynxOp.isRDMSupported, true)

        // OemTitlE8 (0x2859)
        XCTAssertEqual(OEMCode.titlE8, 0x2859)
        XCTAssertEqual(OEMCode.titlE8.description, "OemTitlE8")
        XCTAssertEqual(OEMCode.titlE8.mnemonic, "OemTitlE8")
        XCTAssertEqual(OEMCode.titlE8.manufacturer, "Total Light")
        XCTAssertEqual(OEMCode.titlE8.product, "Etherstrip 8")
        XCTAssertEqual(OEMCode.titlE8.dmxIn, 0)
        XCTAssertEqual(OEMCode.titlE8.dmxOut, 8)
        XCTAssertEqual(OEMCode.titlE8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.titlE8.isRDMSupported, false)

        // OemTitlEda (0x285A)
        XCTAssertEqual(OEMCode.titlEda, 0x285A)
        XCTAssertEqual(OEMCode.titlEda.description, "OemTitlEda")
        XCTAssertEqual(OEMCode.titlEda.mnemonic, "OemTitlEda")
        XCTAssertEqual(OEMCode.titlEda.manufacturer, "Total Light")
        XCTAssertEqual(OEMCode.titlEda.product, "Ether Dual A")
        XCTAssertEqual(OEMCode.titlEda.dmxIn, 2)
        XCTAssertEqual(OEMCode.titlEda.dmxOut, 2)
        XCTAssertEqual(OEMCode.titlEda.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.titlEda.isRDMSupported, true)

        // OemTitlEdb (0x285B)
        XCTAssertEqual(OEMCode.titlEdb, 0x285B)
        XCTAssertEqual(OEMCode.titlEdb.description, "OemTitlEdb")
        XCTAssertEqual(OEMCode.titlEdb.mnemonic, "OemTitlEdb")
        XCTAssertEqual(OEMCode.titlEdb.manufacturer, "Total Light")
        XCTAssertEqual(OEMCode.titlEdb.product, "Ether Dual B")
        XCTAssertEqual(OEMCode.titlEdb.dmxIn, 2)
        XCTAssertEqual(OEMCode.titlEdb.dmxOut, 2)
        XCTAssertEqual(OEMCode.titlEdb.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.titlEdb.isRDMSupported, true)

        // OemTlNzTlde2 (0xAB1)
        XCTAssertEqual(OEMCode.tlNzTlde2, 0xAB1)
        XCTAssertEqual(OEMCode.tlNzTlde2.description, "OemTlNzTlde2")
        XCTAssertEqual(OEMCode.tlNzTlde2.mnemonic, "OemTlNzTlde2")
        XCTAssertEqual(OEMCode.tlNzTlde2.manufacturer, "Theatrelight New Zealand")
        XCTAssertEqual(OEMCode.tlNzTlde2.product, "TLDE2- Isolated DMX to Ethernet converter")
        XCTAssertEqual(OEMCode.tlNzTlde2.dmxIn, 2)
        XCTAssertEqual(OEMCode.tlNzTlde2.dmxOut, 0)
        XCTAssertEqual(OEMCode.tlNzTlde2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.tlNzTlde2.isRDMSupported, false)

        // OemTlNzTled2 (0xAB0)
        XCTAssertEqual(OEMCode.tlNzTled2, 0xAB0)
        XCTAssertEqual(OEMCode.tlNzTled2.description, "OemTlNzTled2")
        XCTAssertEqual(OEMCode.tlNzTled2.mnemonic, "OemTlNzTled2")
        XCTAssertEqual(OEMCode.tlNzTled2.manufacturer, "Theatrelight New Zealand")
        XCTAssertEqual(OEMCode.tlNzTled2.product, "TLED2- Ethernet to isolated DMX converter")
        XCTAssertEqual(OEMCode.tlNzTled2.dmxIn, 0)
        XCTAssertEqual(OEMCode.tlNzTled2.dmxOut, 2)
        XCTAssertEqual(OEMCode.tlNzTled2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.tlNzTled2.isRDMSupported, false)

        // OemTlNzTlpid120 (0xAB4)
        XCTAssertEqual(OEMCode.tlNzTlpid120, 0xAB4)
        XCTAssertEqual(OEMCode.tlNzTlpid120.description, "OemTlNzTlpid120")
        XCTAssertEqual(OEMCode.tlNzTlpid120.mnemonic, "OemTlNzTlpid120")
        XCTAssertEqual(OEMCode.tlNzTlpid120.manufacturer, "Theatrelight New Zealand")
        XCTAssertEqual(OEMCode.tlNzTlpid120.product, "TLPID II 120- Plugin Dimmer Cabinet")
        XCTAssertEqual(OEMCode.tlNzTlpid120.dmxIn, 1)
        XCTAssertEqual(OEMCode.tlNzTlpid120.dmxOut, 0)
        XCTAssertEqual(OEMCode.tlNzTlpid120.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.tlNzTlpid120.isRDMSupported, false)

        // OemTlNzTlpid192 (0xAB5)
        XCTAssertEqual(OEMCode.tlNzTlpid192, 0xAB5)
        XCTAssertEqual(OEMCode.tlNzTlpid192.description, "OemTlNzTlpid192")
        XCTAssertEqual(OEMCode.tlNzTlpid192.mnemonic, "OemTlNzTlpid192")
        XCTAssertEqual(OEMCode.tlNzTlpid192.manufacturer, "Theatrelight New Zealand")
        XCTAssertEqual(OEMCode.tlNzTlpid192.product, "TLPID II 192- Plugin Dimmer Cabinet")
        XCTAssertEqual(OEMCode.tlNzTlpid192.dmxIn, 1)
        XCTAssertEqual(OEMCode.tlNzTlpid192.dmxOut, 0)
        XCTAssertEqual(OEMCode.tlNzTlpid192.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.tlNzTlpid192.isRDMSupported, false)

        // OemTlNzTlpid60 (0xAB2)
        XCTAssertEqual(OEMCode.tlNzTlpid60, 0xAB2)
        XCTAssertEqual(OEMCode.tlNzTlpid60.description, "OemTlNzTlpid60")
        XCTAssertEqual(OEMCode.tlNzTlpid60.mnemonic, "OemTlNzTlpid60")
        XCTAssertEqual(OEMCode.tlNzTlpid60.manufacturer, "Theatrelight New Zealand")
        XCTAssertEqual(OEMCode.tlNzTlpid60.product, "TLPID II 60- Plugin Dimmer Cabinet")
        XCTAssertEqual(OEMCode.tlNzTlpid60.dmxIn, 1)
        XCTAssertEqual(OEMCode.tlNzTlpid60.dmxOut, 0)
        XCTAssertEqual(OEMCode.tlNzTlpid60.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.tlNzTlpid60.isRDMSupported, false)

        // OemTlNzTlpid96 (0xAB3)
        XCTAssertEqual(OEMCode.tlNzTlpid96, 0xAB3)
        XCTAssertEqual(OEMCode.tlNzTlpid96.description, "OemTlNzTlpid96")
        XCTAssertEqual(OEMCode.tlNzTlpid96.mnemonic, "OemTlNzTlpid96")
        XCTAssertEqual(OEMCode.tlNzTlpid96.manufacturer, "Theatrelight New Zealand")
        XCTAssertEqual(OEMCode.tlNzTlpid96.product, "TLPID II 96- Plugin Dimmer Cabinet")
        XCTAssertEqual(OEMCode.tlNzTlpid96.dmxIn, 1)
        XCTAssertEqual(OEMCode.tlNzTlpid96.dmxOut, 0)
        XCTAssertEqual(OEMCode.tlNzTlpid96.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.tlNzTlpid96.isRDMSupported, false)

        // OemTlsDpc (0x28AD)
        XCTAssertEqual(OEMCode.tlsDpc, 0x28AD)
        XCTAssertEqual(OEMCode.tlsDpc.description, "OemTlsDpc")
        XCTAssertEqual(OEMCode.tlsDpc.mnemonic, "OemTlsDpc")
        XCTAssertEqual(OEMCode.tlsDpc.manufacturer, "TLS INTERNATIONAL")
        XCTAssertEqual(OEMCode.tlsDpc.product, "TLS DIGITAL PIXEL CONTROLLER")
        XCTAssertEqual(OEMCode.tlsDpc.dmxIn, 0)
        XCTAssertEqual(OEMCode.tlsDpc.dmxOut, 4)
        XCTAssertEqual(OEMCode.tlsDpc.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.tlsDpc.isRDMSupported, false)

        // OemTmbPPiqm1 (0x13DE)
        XCTAssertEqual(OEMCode.tmbPPiqm1, 0x13DE)
        XCTAssertEqual(OEMCode.tmbPPiqm1.description, "OemTmbPPiqm1")
        XCTAssertEqual(OEMCode.tmbPPiqm1.mnemonic, "OemTmbPPiqm1")
        XCTAssertEqual(OEMCode.tmbPPiqm1.manufacturer, "TMB")
        XCTAssertEqual(OEMCode.tmbPPiqm1.product, "ProPlex IQ Manager")
        XCTAssertEqual(OEMCode.tmbPPiqm1.dmxIn, 0)
        XCTAssertEqual(OEMCode.tmbPPiqm1.dmxOut, 0)
        XCTAssertEqual(OEMCode.tmbPPiqm1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.tmbPPiqm1.isRDMSupported, true)

        // OemTnfConceptTrsD512 (0x1010)
        XCTAssertEqual(OEMCode.tnfConceptTrsD512, 0x1010)
        XCTAssertEqual(OEMCode.tnfConceptTrsD512.description, "OemTnfConceptTrsD512")
        XCTAssertEqual(OEMCode.tnfConceptTrsD512.mnemonic, "OemTnfConceptTrsD512")
        XCTAssertEqual(OEMCode.tnfConceptTrsD512.manufacturer, "TNF Concept")
        XCTAssertEqual(OEMCode.tnfConceptTrsD512.product, "RTS DMX 512")
        XCTAssertEqual(OEMCode.tnfConceptTrsD512.dmxIn, 0)
        XCTAssertEqual(OEMCode.tnfConceptTrsD512.dmxOut, 1)
        XCTAssertEqual(OEMCode.tnfConceptTrsD512.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.tnfConceptTrsD512.isRDMSupported, false)

        // OemTotalLxEtherQuad (0xFF0)
        XCTAssertEqual(OEMCode.totalLxEtherQuad, 0xFF0)
        XCTAssertEqual(OEMCode.totalLxEtherQuad.description, "OemTotalLxEtherQuad")
        XCTAssertEqual(OEMCode.totalLxEtherQuad.mnemonic, "OemTotalLxEtherQuad")
        XCTAssertEqual(OEMCode.totalLxEtherQuad.manufacturer, "Total Light")
        XCTAssertEqual(OEMCode.totalLxEtherQuad.product, "Ether Quad")
        XCTAssertEqual(OEMCode.totalLxEtherQuad.dmxIn, 4)
        XCTAssertEqual(OEMCode.totalLxEtherQuad.dmxOut, 4)
        XCTAssertEqual(OEMCode.totalLxEtherQuad.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.totalLxEtherQuad.isRDMSupported, false)

        // OemTotLiMxD (0xA31)
        XCTAssertEqual(OEMCode.totLiMxD, 0xA31)
        XCTAssertEqual(OEMCode.totLiMxD.description, "OemTotLiMxD")
        XCTAssertEqual(OEMCode.totLiMxD.mnemonic, "OemTotLiMxD")
        XCTAssertEqual(OEMCode.totLiMxD.manufacturer, "Total Light")
        XCTAssertEqual(OEMCode.totLiMxD.product, "ArtMx Dual")
        XCTAssertEqual(OEMCode.totLiMxD.dmxIn, 2)
        XCTAssertEqual(OEMCode.totLiMxD.dmxOut, 2)
        XCTAssertEqual(OEMCode.totLiMxD.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.totLiMxD.isRDMSupported, false)

        // OemTotLiMxS (0xA30)
        XCTAssertEqual(OEMCode.totLiMxS, 0xA30)
        XCTAssertEqual(OEMCode.totLiMxS.description, "OemTotLiMxS")
        XCTAssertEqual(OEMCode.totLiMxS.mnemonic, "OemTotLiMxS")
        XCTAssertEqual(OEMCode.totLiMxS.manufacturer, "Total Light")
        XCTAssertEqual(OEMCode.totLiMxS.product, "ArtMx Single")
        XCTAssertEqual(OEMCode.totLiMxS.dmxIn, 1)
        XCTAssertEqual(OEMCode.totLiMxS.dmxOut, 1)
        XCTAssertEqual(OEMCode.totLiMxS.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.totLiMxS.isRDMSupported, false)

        // OemTrussLinkIp (0x13)
        XCTAssertEqual(OEMCode.trussLinkIp, 0x13)
        XCTAssertEqual(OEMCode.trussLinkIp.description, "OemTrussLinkIp")
        XCTAssertEqual(OEMCode.trussLinkIp.mnemonic, "OemTrussLinkIp")
        XCTAssertEqual(OEMCode.trussLinkIp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.trussLinkIp.product, "Truss-Link IP")
        XCTAssertEqual(OEMCode.trussLinkIp.dmxIn, 2)
        XCTAssertEqual(OEMCode.trussLinkIp.dmxOut, 0)
        XCTAssertEqual(OEMCode.trussLinkIp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.trussLinkIp.isRDMSupported, false)

        // OemTrussLinkOp (0x12)
        XCTAssertEqual(OEMCode.trussLinkOp, 0x12)
        XCTAssertEqual(OEMCode.trussLinkOp.description, "OemTrussLinkOp")
        XCTAssertEqual(OEMCode.trussLinkOp.mnemonic, "OemTrussLinkOp")
        XCTAssertEqual(OEMCode.trussLinkOp.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.trussLinkOp.product, "Truss-Link OP")
        XCTAssertEqual(OEMCode.trussLinkOp.dmxIn, 0)
        XCTAssertEqual(OEMCode.trussLinkOp.dmxOut, 2)
        XCTAssertEqual(OEMCode.trussLinkOp.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.trussLinkOp.isRDMSupported, false)

        // OemTrussLynxIp2 (0x213)
        XCTAssertEqual(OEMCode.trussLynxIp2, 0x213)
        XCTAssertEqual(OEMCode.trussLynxIp2.description, "OemTrussLynxIp2")
        XCTAssertEqual(OEMCode.trussLynxIp2.mnemonic, "OemTrussLynxIp2")
        XCTAssertEqual(OEMCode.trussLynxIp2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.trussLynxIp2.product, "Truss-Lynx 2")
        XCTAssertEqual(OEMCode.trussLynxIp2.dmxIn, 2)
        XCTAssertEqual(OEMCode.trussLynxIp2.dmxOut, 0)
        XCTAssertEqual(OEMCode.trussLynxIp2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.trussLynxIp2.isRDMSupported, false)

        // OemTrussLynxOp2 (0x212)
        XCTAssertEqual(OEMCode.trussLynxOp2, 0x212)
        XCTAssertEqual(OEMCode.trussLynxOp2.description, "OemTrussLynxOp2")
        XCTAssertEqual(OEMCode.trussLynxOp2.mnemonic, "OemTrussLynxOp2")
        XCTAssertEqual(OEMCode.trussLynxOp2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.trussLynxOp2.product, "Truss-Lynx 2")
        XCTAssertEqual(OEMCode.trussLynxOp2.dmxIn, 0)
        XCTAssertEqual(OEMCode.trussLynxOp2.dmxOut, 2)
        XCTAssertEqual(OEMCode.trussLynxOp2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.trussLynxOp2.isRDMSupported, true)

        // OemUnknown (0xFF)
        XCTAssertEqual(OEMCode.unknown, 0xFF)
        XCTAssertEqual(OEMCode.unknown.description, "OemUnknown")
        XCTAssertEqual(OEMCode.unknown.mnemonic, "OemUnknown")
        XCTAssertEqual(OEMCode.unknown.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.unknown.product, "OemUnknown")
        XCTAssertEqual(OEMCode.unknown.dmxIn, 0)
        XCTAssertEqual(OEMCode.unknown.dmxOut, 0)
        XCTAssertEqual(OEMCode.unknown.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.unknown.isRDMSupported, false)

        // OemUntSlns1 (0x28A9)
        XCTAssertEqual(OEMCode.untSlns1, 0x28A9)
        XCTAssertEqual(OEMCode.untSlns1.description, "OemUntSlns1")
        XCTAssertEqual(OEMCode.untSlns1.mnemonic, "OemUntSlns1")
        XCTAssertEqual(OEMCode.untSlns1.manufacturer, "UNT")
        XCTAssertEqual(OEMCode.untSlns1.product, "SLNS")
        XCTAssertEqual(OEMCode.untSlns1.dmxIn, 2)
        XCTAssertEqual(OEMCode.untSlns1.dmxOut, 10)
        XCTAssertEqual(OEMCode.untSlns1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.untSlns1.isRDMSupported, true)

        // OemUpLink (0x11)
        XCTAssertEqual(OEMCode.upLink, 0x11)
        XCTAssertEqual(OEMCode.upLink.description, "OemUpLink")
        XCTAssertEqual(OEMCode.upLink.mnemonic, "OemUpLink")
        XCTAssertEqual(OEMCode.upLink.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.upLink.product, "Up-Link")
        XCTAssertEqual(OEMCode.upLink.dmxIn, 2)
        XCTAssertEqual(OEMCode.upLink.dmxOut, 0)
        XCTAssertEqual(OEMCode.upLink.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.upLink.isRDMSupported, false)

        // OemUpLynx2 (0x211)
        XCTAssertEqual(OEMCode.upLynx2, 0x211)
        XCTAssertEqual(OEMCode.upLynx2.description, "OemUpLynx2")
        XCTAssertEqual(OEMCode.upLynx2.mnemonic, "OemUpLynx2")
        XCTAssertEqual(OEMCode.upLynx2.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.upLynx2.product, "Up-Lynx 2")
        XCTAssertEqual(OEMCode.upLynx2.dmxIn, 2)
        XCTAssertEqual(OEMCode.upLynx2.dmxOut, 0)
        XCTAssertEqual(OEMCode.upLynx2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.upLynx2.isRDMSupported, false)

        // OemUpLynx4 (0x2090)
        XCTAssertEqual(OEMCode.upLynx4, 0x2090)
        XCTAssertEqual(OEMCode.upLynx4.description, "OemUpLynx4")
        XCTAssertEqual(OEMCode.upLynx4.mnemonic, "OemUpLynx4")
        XCTAssertEqual(OEMCode.upLynx4.manufacturer, "Artistic Licence Engineering Ltd")
        XCTAssertEqual(OEMCode.upLynx4.product, "Up-Lynx (G4)")
        XCTAssertEqual(OEMCode.upLynx4.dmxIn, 2)
        XCTAssertEqual(OEMCode.upLynx4.dmxOut, 0)
        XCTAssertEqual(OEMCode.upLynx4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.upLynx4.isRDMSupported, false)

        // OemVanIntCham1 (0xB50)
        XCTAssertEqual(OEMCode.vanIntCham1, 0xB50)
        XCTAssertEqual(OEMCode.vanIntCham1.description, "OemVanIntCham1")
        XCTAssertEqual(OEMCode.vanIntCham1.mnemonic, "OemVanIntCham1")
        XCTAssertEqual(OEMCode.vanIntCham1.manufacturer, "Vanilla Internet Ltd.")
        XCTAssertEqual(OEMCode.vanIntCham1.product, "Chameleon")
        XCTAssertEqual(OEMCode.vanIntCham1.dmxIn, 4)
        XCTAssertEqual(OEMCode.vanIntCham1.dmxOut, 4)
        XCTAssertEqual(OEMCode.vanIntCham1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.vanIntCham1.isRDMSupported, false)

        // OemVertBlack1 (0x13F2)
        XCTAssertEqual(OEMCode.vertBlack1, 0x13F2)
        XCTAssertEqual(OEMCode.vertBlack1.description, "OemVertBlack1")
        XCTAssertEqual(OEMCode.vertBlack1.mnemonic, "OemVertBlack1")
        XCTAssertEqual(OEMCode.vertBlack1.manufacturer, "Vertigo ApS")
        XCTAssertEqual(OEMCode.vertBlack1.product, "BlackLED")
        XCTAssertEqual(OEMCode.vertBlack1.dmxIn, 0)
        XCTAssertEqual(OEMCode.vertBlack1.dmxOut, 4)
        XCTAssertEqual(OEMCode.vertBlack1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.vertBlack1.isRDMSupported, true)

        // OemVisProCty (0x1040)
        XCTAssertEqual(OEMCode.visProCty, 0x1040)
        XCTAssertEqual(OEMCode.visProCty.description, "OemVisProCty")
        XCTAssertEqual(OEMCode.visProCty.mnemonic, "OemVisProCty")
        XCTAssertEqual(OEMCode.visProCty.manufacturer, "Visual Productions")
        XCTAssertEqual(OEMCode.visProCty.product, "Cuety")
        XCTAssertEqual(OEMCode.visProCty.dmxIn, 0)
        XCTAssertEqual(OEMCode.visProCty.dmxOut, 1)
        XCTAssertEqual(OEMCode.visProCty.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.visProCty.isRDMSupported, false)

        // OemVisProdBstat (0xF30)
        XCTAssertEqual(OEMCode.visProdBstat, 0xF30)
        XCTAssertEqual(OEMCode.visProdBstat.description, "OemVisProdBstat")
        XCTAssertEqual(OEMCode.visProdBstat.mnemonic, "OemVisProdBstat")
        XCTAssertEqual(OEMCode.visProdBstat.manufacturer, "Visual Productions")
        XCTAssertEqual(OEMCode.visProdBstat.product, "B-Station")
        XCTAssertEqual(OEMCode.visProdBstat.dmxIn, 0)
        XCTAssertEqual(OEMCode.visProdBstat.dmxOut, 1)
        XCTAssertEqual(OEMCode.visProdBstat.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.visProdBstat.isRDMSupported, false)

        // OemVisProdCc2 (0x1273)
        XCTAssertEqual(OEMCode.visProdCc2, 0x1273)
        XCTAssertEqual(OEMCode.visProdCc2.description, "OemVisProdCc2")
        XCTAssertEqual(OEMCode.visProdCc2.mnemonic, "OemVisProdCc2")
        XCTAssertEqual(OEMCode.visProdCc2.manufacturer, "Visual Productions")
        XCTAssertEqual(OEMCode.visProdCc2.product, "CueCore2")
        XCTAssertEqual(OEMCode.visProdCc2.dmxIn, 4)
        XCTAssertEqual(OEMCode.visProdCc2.dmxOut, 4)
        XCTAssertEqual(OEMCode.visProdCc2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.visProdCc2.isRDMSupported, false)

        // OemVisProdCueCore1 (0xDC0)
        XCTAssertEqual(OEMCode.visProdCueCore1, 0xDC0)
        XCTAssertEqual(OEMCode.visProdCueCore1.description, "OemVisProdCueCore1")
        XCTAssertEqual(OEMCode.visProdCueCore1.mnemonic, "OemVisProdCueCore1")
        XCTAssertEqual(OEMCode.visProdCueCore1.manufacturer, "Visual Productions")
        XCTAssertEqual(OEMCode.visProdCueCore1.product, "CueCore")
        XCTAssertEqual(OEMCode.visProdCueCore1.dmxIn, 1)
        XCTAssertEqual(OEMCode.visProdCueCore1.dmxOut, 2)
        XCTAssertEqual(OEMCode.visProdCueCore1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.visProdCueCore1.isRDMSupported, false)

        // OemVisProdFstat (0xF31)
        XCTAssertEqual(OEMCode.visProdFstat, 0xF31)
        XCTAssertEqual(OEMCode.visProdFstat.description, "OemVisProdFstat")
        XCTAssertEqual(OEMCode.visProdFstat.mnemonic, "OemVisProdFstat")
        XCTAssertEqual(OEMCode.visProdFstat.manufacturer, "Visual Productions")
        XCTAssertEqual(OEMCode.visProdFstat.product, "F-Station")
        XCTAssertEqual(OEMCode.visProdFstat.dmxIn, 0)
        XCTAssertEqual(OEMCode.visProdFstat.dmxOut, 1)
        XCTAssertEqual(OEMCode.visProdFstat.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.visProdFstat.isRDMSupported, false)

        // OemVisProdIoCore1 (0xDC1)
        XCTAssertEqual(OEMCode.visProdIoCore1, 0xDC1)
        XCTAssertEqual(OEMCode.visProdIoCore1.description, "OemVisProdIoCore1")
        XCTAssertEqual(OEMCode.visProdIoCore1.mnemonic, "OemVisProdIoCore1")
        XCTAssertEqual(OEMCode.visProdIoCore1.manufacturer, "Visual Productions")
        XCTAssertEqual(OEMCode.visProdIoCore1.product, "IoCore")
        XCTAssertEqual(OEMCode.visProdIoCore1.dmxIn, 1)
        XCTAssertEqual(OEMCode.visProdIoCore1.dmxOut, 1)
        XCTAssertEqual(OEMCode.visProdIoCore1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.visProdIoCore1.isRDMSupported, false)

        // OemVisProdIoCore2a (0x2861)
        XCTAssertEqual(OEMCode.visProdIoCore2a, 0x2861)
        XCTAssertEqual(OEMCode.visProdIoCore2a.description, "OemVisProdIoCore2a")
        XCTAssertEqual(OEMCode.visProdIoCore2a.mnemonic, "OemVisProdIoCore2a")
        XCTAssertEqual(OEMCode.visProdIoCore2a.manufacturer, "Visual Productions")
        XCTAssertEqual(OEMCode.visProdIoCore2a.product, "IoCore2")
        XCTAssertEqual(OEMCode.visProdIoCore2a.dmxIn, 1)
        XCTAssertEqual(OEMCode.visProdIoCore2a.dmxOut, 1)
        XCTAssertEqual(OEMCode.visProdIoCore2a.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.visProdIoCore2a.isRDMSupported, false)

        // OemVisProdLpu1 (0x1270)
        XCTAssertEqual(OEMCode.visProdLpu1, 0x1270)
        XCTAssertEqual(OEMCode.visProdLpu1.description, "OemVisProdLpu1")
        XCTAssertEqual(OEMCode.visProdLpu1.mnemonic, "OemVisProdLpu1")
        XCTAssertEqual(OEMCode.visProdLpu1.manufacturer, "Visual Productions")
        XCTAssertEqual(OEMCode.visProdLpu1.product, "LPU-1")
        XCTAssertEqual(OEMCode.visProdLpu1.dmxIn, 0)
        XCTAssertEqual(OEMCode.visProdLpu1.dmxOut, 1)
        XCTAssertEqual(OEMCode.visProdLpu1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.visProdLpu1.isRDMSupported, false)

        // OemVisProdLpu2 (0x1271)
        XCTAssertEqual(OEMCode.visProdLpu2, 0x1271)
        XCTAssertEqual(OEMCode.visProdLpu2.description, "OemVisProdLpu2")
        XCTAssertEqual(OEMCode.visProdLpu2.mnemonic, "OemVisProdLpu2")
        XCTAssertEqual(OEMCode.visProdLpu2.manufacturer, "Visual Productions")
        XCTAssertEqual(OEMCode.visProdLpu2.product, "LPU-2")
        XCTAssertEqual(OEMCode.visProdLpu2.dmxIn, 0)
        XCTAssertEqual(OEMCode.visProdLpu2.dmxOut, 1)
        XCTAssertEqual(OEMCode.visProdLpu2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.visProdLpu2.isRDMSupported, false)

        // OemVisProdQc1 (0x1272)
        XCTAssertEqual(OEMCode.visProdQc1, 0x1272)
        XCTAssertEqual(OEMCode.visProdQc1.description, "OemVisProdQc1")
        XCTAssertEqual(OEMCode.visProdQc1.mnemonic, "OemVisProdQc1")
        XCTAssertEqual(OEMCode.visProdQc1.manufacturer, "Visual Productions")
        XCTAssertEqual(OEMCode.visProdQc1.product, "QuadCore")
        XCTAssertEqual(OEMCode.visProdQc1.dmxIn, 4)
        XCTAssertEqual(OEMCode.visProdQc1.dmxOut, 4)
        XCTAssertEqual(OEMCode.visProdQc1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.visProdQc1.isRDMSupported, false)

        // OemVisProdTimeCorea (0x2862)
        XCTAssertEqual(OEMCode.visProdTimeCorea, 0x2862)
        XCTAssertEqual(OEMCode.visProdTimeCorea.description, "OemVisProdTimeCorea")
        XCTAssertEqual(OEMCode.visProdTimeCorea.mnemonic, "OemVisProdTimeCorea")
        XCTAssertEqual(OEMCode.visProdTimeCorea.manufacturer, "Visual Productions")
        XCTAssertEqual(OEMCode.visProdTimeCorea.product, "TimeCore")
        XCTAssertEqual(OEMCode.visProdTimeCorea.dmxIn, 1)
        XCTAssertEqual(OEMCode.visProdTimeCorea.dmxOut, 1)
        XCTAssertEqual(OEMCode.visProdTimeCorea.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.visProdTimeCorea.isRDMSupported, false)

        // OemVisProQco (0x1041)
        XCTAssertEqual(OEMCode.visProQco, 0x1041)
        XCTAssertEqual(OEMCode.visProQco.description, "OemVisProQco")
        XCTAssertEqual(OEMCode.visProQco.mnemonic, "OemVisProQco")
        XCTAssertEqual(OEMCode.visProQco.manufacturer, "Visual Productions")
        XCTAssertEqual(OEMCode.visProQco.product, "QuadCore")
        XCTAssertEqual(OEMCode.visProQco.dmxIn, 0)
        XCTAssertEqual(OEMCode.visProQco.dmxOut, 4)
        XCTAssertEqual(OEMCode.visProQco.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.visProQco.isRDMSupported, false)

        // OemVisSchaltanMaster (0xF40)
        XCTAssertEqual(OEMCode.visSchaltanMaster, 0xF40)
        XCTAssertEqual(OEMCode.visSchaltanMaster.description, "OemVisSchaltanMaster")
        XCTAssertEqual(OEMCode.visSchaltanMaster.mnemonic, "OemVisSchaltanMaster")
        XCTAssertEqual(OEMCode.visSchaltanMaster.manufacturer, "LSS GmbH")
        XCTAssertEqual(OEMCode.visSchaltanMaster.product, "MasterPort RM")
        XCTAssertEqual(OEMCode.visSchaltanMaster.dmxIn, 4)
        XCTAssertEqual(OEMCode.visSchaltanMaster.dmxOut, 4)
        XCTAssertEqual(OEMCode.visSchaltanMaster.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.visSchaltanMaster.isRDMSupported, true)

        // OemVnrBooster (0x1E0)
        XCTAssertEqual(OEMCode.vnrBooster, 0x1E0)
        XCTAssertEqual(OEMCode.vnrBooster.description, "OemVnrBooster")
        XCTAssertEqual(OEMCode.vnrBooster.mnemonic, "OemVnrBooster")
        XCTAssertEqual(OEMCode.vnrBooster.manufacturer, "VNR")
        XCTAssertEqual(OEMCode.vnrBooster.product, "Merger-Booster")
        XCTAssertEqual(OEMCode.vnrBooster.dmxIn, 4)
        XCTAssertEqual(OEMCode.vnrBooster.dmxOut, 4)
        XCTAssertEqual(OEMCode.vnrBooster.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.vnrBooster.isRDMSupported, false)

        // OemVoidVirtualPanel1 (0x28BF)
        XCTAssertEqual(OEMCode.voidVirtualPanel1, 0x28BF)
        XCTAssertEqual(OEMCode.voidVirtualPanel1.description, "OemVoidVirtualPanel1")
        XCTAssertEqual(OEMCode.voidVirtualPanel1.mnemonic, "OemVoidVirtualPanel1")
        XCTAssertEqual(OEMCode.voidVirtualPanel1.manufacturer, "Voidcorp")
        XCTAssertEqual(OEMCode.voidVirtualPanel1.product, "VirtualPanel")
        XCTAssertEqual(OEMCode.voidVirtualPanel1.dmxIn, 2)
        XCTAssertEqual(OEMCode.voidVirtualPanel1.dmxOut, 0)
        XCTAssertEqual(OEMCode.voidVirtualPanel1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.voidVirtualPanel1.isRDMSupported, false)

        // OemVtcWrdm1 (0xF80)
        XCTAssertEqual(OEMCode.vtcWrdm1, 0xF80)
        XCTAssertEqual(OEMCode.vtcWrdm1.description, "OemVtcWrdm1")
        XCTAssertEqual(OEMCode.vtcWrdm1.mnemonic, "OemVtcWrdm1")
        XCTAssertEqual(OEMCode.vtcWrdm1.manufacturer, "VT-Control")
        XCTAssertEqual(OEMCode.vtcWrdm1.product, "WRDM V1.0")
        XCTAssertEqual(OEMCode.vtcWrdm1.dmxIn, 1)
        XCTAssertEqual(OEMCode.vtcWrdm1.dmxOut, 1)
        XCTAssertEqual(OEMCode.vtcWrdm1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.vtcWrdm1.isRDMSupported, true)

        // OemVuppImer (0x1080)
        XCTAssertEqual(OEMCode.vuppImer, 0x1080)
        XCTAssertEqual(OEMCode.vuppImer.description, "OemVuppImer")
        XCTAssertEqual(OEMCode.vuppImer.mnemonic, "OemVuppImer")
        XCTAssertEqual(OEMCode.vuppImer.manufacturer, "wupperTec")
        XCTAssertEqual(OEMCode.vuppImer.product, "iMerge")
        XCTAssertEqual(OEMCode.vuppImer.dmxIn, 4)
        XCTAssertEqual(OEMCode.vuppImer.dmxOut, 4)
        XCTAssertEqual(OEMCode.vuppImer.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.vuppImer.isRDMSupported, false)

        // OemVyvPhot1 (0xA10)
        XCTAssertEqual(OEMCode.vyvPhot1, 0xA10)
        XCTAssertEqual(OEMCode.vyvPhot1.description, "OemVyvPhot1")
        XCTAssertEqual(OEMCode.vyvPhot1.mnemonic, "OemVyvPhot1")
        XCTAssertEqual(OEMCode.vyvPhot1.manufacturer, "VYV Corporation")
        XCTAssertEqual(OEMCode.vyvPhot1.product, "Photon")
        XCTAssertEqual(OEMCode.vyvPhot1.dmxIn, 1)
        XCTAssertEqual(OEMCode.vyvPhot1.dmxOut, 0)
        XCTAssertEqual(OEMCode.vyvPhot1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.vyvPhot1.isRDMSupported, false)

        // OemWabIntegrity1 (0x2809)
        XCTAssertEqual(OEMCode.wabIntegrity1, 0x2809)
        XCTAssertEqual(OEMCode.wabIntegrity1.description, "OemWabIntegrity1")
        XCTAssertEqual(OEMCode.wabIntegrity1.mnemonic, "OemWabIntegrity1")
        XCTAssertEqual(OEMCode.wabIntegrity1.manufacturer, "W.A.Benjamin Electric Co.")
        XCTAssertEqual(OEMCode.wabIntegrity1.product, "Integrity RDM Conformance Test")
        XCTAssertEqual(OEMCode.wabIntegrity1.dmxIn, 0)
        XCTAssertEqual(OEMCode.wabIntegrity1.dmxOut, 0)
        XCTAssertEqual(OEMCode.wabIntegrity1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.wabIntegrity1.isRDMSupported, true)

        // OemWeiglProIo1 (0xBF0)
        XCTAssertEqual(OEMCode.weiglProIo1, 0xBF0)
        XCTAssertEqual(OEMCode.weiglProIo1.description, "OemWeiglProIo1")
        XCTAssertEqual(OEMCode.weiglProIo1.mnemonic, "OemWeiglProIo1")
        XCTAssertEqual(OEMCode.weiglProIo1.manufacturer, "Weigl Elektronik & Mediaprojekte")
        XCTAssertEqual(OEMCode.weiglProIo1.product, "Pro IO")
        XCTAssertEqual(OEMCode.weiglProIo1.dmxIn, 1)
        XCTAssertEqual(OEMCode.weiglProIo1.dmxOut, 1)
        XCTAssertEqual(OEMCode.weiglProIo1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.weiglProIo1.isRDMSupported, false)

        // OemWerpaxMd1 (0xAD0)
        XCTAssertEqual(OEMCode.werpaxMd1, 0xAD0)
        XCTAssertEqual(OEMCode.werpaxMd1.description, "OemWerpaxMd1")
        XCTAssertEqual(OEMCode.werpaxMd1.mnemonic, "OemWerpaxMd1")
        XCTAssertEqual(OEMCode.werpaxMd1.manufacturer, "WERPAX bvba")
        XCTAssertEqual(OEMCode.werpaxMd1.product, "MULTI-DMX")
        XCTAssertEqual(OEMCode.werpaxMd1.dmxIn, 2)
        XCTAssertEqual(OEMCode.werpaxMd1.dmxOut, 2)
        XCTAssertEqual(OEMCode.werpaxMd1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.werpaxMd1.isRDMSupported, true)

        // OemWhiteRabbitMcm1 (0xD60)
        XCTAssertEqual(OEMCode.whiteRabbitMcm1, 0xD60)
        XCTAssertEqual(OEMCode.whiteRabbitMcm1.description, "OemWhiteRabbitMcm1")
        XCTAssertEqual(OEMCode.whiteRabbitMcm1.mnemonic, "OemWhiteRabbitMcm1")
        XCTAssertEqual(OEMCode.whiteRabbitMcm1.manufacturer, "The White Rabbit Company, Inc.")
        XCTAssertEqual(OEMCode.whiteRabbitMcm1.product, "MCM - Mini-Communications Module")
        XCTAssertEqual(OEMCode.whiteRabbitMcm1.dmxIn, 4)
        XCTAssertEqual(OEMCode.whiteRabbitMcm1.dmxOut, 4)
        XCTAssertEqual(OEMCode.whiteRabbitMcm1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.whiteRabbitMcm1.isRDMSupported, false)

        // OemWlpsRemoteFollowSpot1 (0x2887)
        XCTAssertEqual(OEMCode.wlpsRemoteFollowSpot1, 0x2887)
        XCTAssertEqual(OEMCode.wlpsRemoteFollowSpot1.description, "OemWlpsRemoteFollowSpot1")
        XCTAssertEqual(OEMCode.wlpsRemoteFollowSpot1.mnemonic, "OemWlpsRemoteFollowSpot1")
        XCTAssertEqual(OEMCode.wlpsRemoteFollowSpot1.manufacturer, "WLPS")
        XCTAssertEqual(OEMCode.wlpsRemoteFollowSpot1.product, "Remote FollowSpot")
        XCTAssertEqual(OEMCode.wlpsRemoteFollowSpot1.dmxIn, 0)
        XCTAssertEqual(OEMCode.wlpsRemoteFollowSpot1.dmxOut, 1)
        XCTAssertEqual(OEMCode.wlpsRemoteFollowSpot1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.wlpsRemoteFollowSpot1.isRDMSupported, false)

        // OemWodieMedia (0x620)
        XCTAssertEqual(OEMCode.wodieMedia, 0x620)
        XCTAssertEqual(OEMCode.wodieMedia.description, "OemWodieMedia")
        XCTAssertEqual(OEMCode.wodieMedia.mnemonic, "OemWodieMedia")
        XCTAssertEqual(OEMCode.wodieMedia.manufacturer, "WodieLite")
        XCTAssertEqual(OEMCode.wodieMedia.product, "ArtMedia")
        XCTAssertEqual(OEMCode.wodieMedia.dmxIn, 0)
        XCTAssertEqual(OEMCode.wodieMedia.dmxOut, 4)
        XCTAssertEqual(OEMCode.wodieMedia.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.wodieMedia.isRDMSupported, false)

        // OemWybron0 (0x4E0)
        XCTAssertEqual(OEMCode.wybron0, 0x4E0)
        XCTAssertEqual(OEMCode.wybron0.description, "OemWybron0")
        XCTAssertEqual(OEMCode.wybron0.mnemonic, "OemWybron0")
        XCTAssertEqual(OEMCode.wybron0.manufacturer, "Wybron")
        XCTAssertEqual(OEMCode.wybron0.product, "PSU. 2")
        XCTAssertEqual(OEMCode.wybron0.dmxIn, 0)
        XCTAssertEqual(OEMCode.wybron0.dmxOut, 2)
        XCTAssertEqual(OEMCode.wybron0.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.wybron0.isRDMSupported, false)

        // OemXiamenGtDmx2000 (0xE70)
        XCTAssertEqual(OEMCode.xiamenGtDmx2000, 0xE70)
        XCTAssertEqual(OEMCode.xiamenGtDmx2000.description, "OemXiamenGtDmx2000")
        XCTAssertEqual(OEMCode.xiamenGtDmx2000.mnemonic, "OemXiamenGtDmx2000")
        XCTAssertEqual(OEMCode.xiamenGtDmx2000.manufacturer, "XiamenGreenTao Opto Electronics Co.,Ltd.")
        XCTAssertEqual(OEMCode.xiamenGtDmx2000.product, "GT-DMX-2000")
        XCTAssertEqual(OEMCode.xiamenGtDmx2000.dmxIn, 2)
        XCTAssertEqual(OEMCode.xiamenGtDmx2000.dmxOut, 2)
        XCTAssertEqual(OEMCode.xiamenGtDmx2000.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xiamenGtDmx2000.isRDMSupported, false)

        // OemXiamenGtDmx4000 (0xE71)
        XCTAssertEqual(OEMCode.xiamenGtDmx4000, 0xE71)
        XCTAssertEqual(OEMCode.xiamenGtDmx4000.description, "OemXiamenGtDmx4000")
        XCTAssertEqual(OEMCode.xiamenGtDmx4000.mnemonic, "OemXiamenGtDmx4000")
        XCTAssertEqual(OEMCode.xiamenGtDmx4000.manufacturer, "XiamenGreenTao Opto Electronics Co.,Ltd.")
        XCTAssertEqual(OEMCode.xiamenGtDmx4000.product, "GT-DMX-4000")
        XCTAssertEqual(OEMCode.xiamenGtDmx4000.dmxIn, 4)
        XCTAssertEqual(OEMCode.xiamenGtDmx4000.dmxOut, 4)
        XCTAssertEqual(OEMCode.xiamenGtDmx4000.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xiamenGtDmx4000.isRDMSupported, false)

        // OemXilver0 (0x4D0)
        XCTAssertEqual(OEMCode.xilver0, 0x4D0)
        XCTAssertEqual(OEMCode.xilver0.description, "OemXilver0")
        XCTAssertEqual(OEMCode.xilver0.mnemonic, "OemXilver0")
        XCTAssertEqual(OEMCode.xilver0.manufacturer, "Team Projects")
        XCTAssertEqual(OEMCode.xilver0.product, "Xilver Controller")
        XCTAssertEqual(OEMCode.xilver0.dmxIn, 0)
        XCTAssertEqual(OEMCode.xilver0.dmxOut, 0)
        XCTAssertEqual(OEMCode.xilver0.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.xilver0.isRDMSupported, false)

        // OemXingYeDzNsNet11 (0x2831)
        XCTAssertEqual(OEMCode.xingYeDzNsNet11, 0x2831)
        XCTAssertEqual(OEMCode.xingYeDzNsNet11.description, "OemXingYeDzNsNet11")
        XCTAssertEqual(OEMCode.xingYeDzNsNet11.mnemonic, "OemXingYeDzNsNet11")
        XCTAssertEqual(OEMCode.xingYeDzNsNet11.manufacturer, "XING YE DIAN ZI")
        XCTAssertEqual(OEMCode.xingYeDzNsNet11.product, "NS-NET01")
        XCTAssertEqual(OEMCode.xingYeDzNsNet11.dmxIn, 4)
        XCTAssertEqual(OEMCode.xingYeDzNsNet11.dmxOut, 4)
        XCTAssertEqual(OEMCode.xingYeDzNsNet11.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xingYeDzNsNet11.isRDMSupported, true)

        // OemXingYeDzNsNet21 (0x2830)
        XCTAssertEqual(OEMCode.xingYeDzNsNet21, 0x2830)
        XCTAssertEqual(OEMCode.xingYeDzNsNet21.description, "OemXingYeDzNsNet21")
        XCTAssertEqual(OEMCode.xingYeDzNsNet21.mnemonic, "OemXingYeDzNsNet21")
        XCTAssertEqual(OEMCode.xingYeDzNsNet21.manufacturer, "XING YE DIAN ZI")
        XCTAssertEqual(OEMCode.xingYeDzNsNet21.product, "NS-NET02")
        XCTAssertEqual(OEMCode.xingYeDzNsNet21.dmxIn, 8)
        XCTAssertEqual(OEMCode.xingYeDzNsNet21.dmxOut, 8)
        XCTAssertEqual(OEMCode.xingYeDzNsNet21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xingYeDzNsNet21.isRDMSupported, true)

        // OemXingYeDzNsNet31 (0x282F)
        XCTAssertEqual(OEMCode.xingYeDzNsNet31, 0x282F)
        XCTAssertEqual(OEMCode.xingYeDzNsNet31.description, "OemXingYeDzNsNet31")
        XCTAssertEqual(OEMCode.xingYeDzNsNet31.mnemonic, "OemXingYeDzNsNet31")
        XCTAssertEqual(OEMCode.xingYeDzNsNet31.manufacturer, "XING YE DIAN ZI")
        XCTAssertEqual(OEMCode.xingYeDzNsNet31.product, "NS-NET03")
        XCTAssertEqual(OEMCode.xingYeDzNsNet31.dmxIn, 16)
        XCTAssertEqual(OEMCode.xingYeDzNsNet31.dmxOut, 16)
        XCTAssertEqual(OEMCode.xingYeDzNsNet31.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xingYeDzNsNet31.isRDMSupported, true)

        // OemXingYeDzNsNetOne1 (0x282E)
        XCTAssertEqual(OEMCode.xingYeDzNsNetOne1, 0x282E)
        XCTAssertEqual(OEMCode.xingYeDzNsNetOne1.description, "OemXingYeDzNsNetOne1")
        XCTAssertEqual(OEMCode.xingYeDzNsNetOne1.mnemonic, "OemXingYeDzNsNetOne1")
        XCTAssertEqual(OEMCode.xingYeDzNsNetOne1.manufacturer, "XING YE DIAN ZI")
        XCTAssertEqual(OEMCode.xingYeDzNsNetOne1.product, "NS-NET-ONE")
        XCTAssertEqual(OEMCode.xingYeDzNsNetOne1.dmxIn, 1)
        XCTAssertEqual(OEMCode.xingYeDzNsNetOne1.dmxOut, 1)
        XCTAssertEqual(OEMCode.xingYeDzNsNetOne1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xingYeDzNsNetOne1.isRDMSupported, true)

        // OemXiNovNovDmx11 (0x2869)
        XCTAssertEqual(OEMCode.xiNovNovDmx11, 0x2869)
        XCTAssertEqual(OEMCode.xiNovNovDmx11.description, "OemXiNovNovDmx11")
        XCTAssertEqual(OEMCode.xiNovNovDmx11.mnemonic, "OemXiNovNovDmx11")
        XCTAssertEqual(OEMCode.xiNovNovDmx11.manufacturer, "Xian NovaStar Tech Co.,Ltd")
        XCTAssertEqual(OEMCode.xiNovNovDmx11.product, "NOVA-DMX11")
        XCTAssertEqual(OEMCode.xiNovNovDmx11.dmxIn, 1)
        XCTAssertEqual(OEMCode.xiNovNovDmx11.dmxOut, 1)
        XCTAssertEqual(OEMCode.xiNovNovDmx11.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.xiNovNovDmx11.isRDMSupported, false)

        // OemXlasMerc1 (0x28AA)
        XCTAssertEqual(OEMCode.xlasMerc1, 0x28AA)
        XCTAssertEqual(OEMCode.xlasMerc1.description, "OemXlasMerc1")
        XCTAssertEqual(OEMCode.xlasMerc1.mnemonic, "OemXlasMerc1")
        XCTAssertEqual(OEMCode.xlasMerc1.manufacturer, "X-Laser")
        XCTAssertEqual(OEMCode.xlasMerc1.product, "Mercury")
        XCTAssertEqual(OEMCode.xlasMerc1.dmxIn, 2)
        XCTAssertEqual(OEMCode.xlasMerc1.dmxOut, 2)
        XCTAssertEqual(OEMCode.xlasMerc1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.xlasMerc1.isRDMSupported, true)

        // OemYariLanDmx21 (0x2890)
        XCTAssertEqual(OEMCode.yariLanDmx21, 0x2890)
        XCTAssertEqual(OEMCode.yariLanDmx21.description, "OemYariLanDmx21")
        XCTAssertEqual(OEMCode.yariLanDmx21.mnemonic, "OemYariLanDmx21")
        XCTAssertEqual(OEMCode.yariLanDmx21.manufacturer, "Yarilo Pro")
        XCTAssertEqual(OEMCode.yariLanDmx21.product, "LANdmx2")
        XCTAssertEqual(OEMCode.yariLanDmx21.dmxIn, 2)
        XCTAssertEqual(OEMCode.yariLanDmx21.dmxOut, 2)
        XCTAssertEqual(OEMCode.yariLanDmx21.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.yariLanDmx21.isRDMSupported, true)

        // OemYpLANdmx41 (0x287D)
        XCTAssertEqual(OEMCode.ypLANdmx41, 0x287D)
        XCTAssertEqual(OEMCode.ypLANdmx41.description, "OemYpLANdmx41")
        XCTAssertEqual(OEMCode.ypLANdmx41.mnemonic, "OemYpLANdmx41")
        XCTAssertEqual(OEMCode.ypLANdmx41.manufacturer, "Yarilo Pro")
        XCTAssertEqual(OEMCode.ypLANdmx41.product, "LANdmx4")
        XCTAssertEqual(OEMCode.ypLANdmx41.dmxIn, 2)
        XCTAssertEqual(OEMCode.ypLANdmx41.dmxOut, 4)
        XCTAssertEqual(OEMCode.ypLANdmx41.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.ypLANdmx41.isRDMSupported, true)

        // OemZero1 (0x8C)
        XCTAssertEqual(OEMCode.zero1, 0x8C)
        XCTAssertEqual(OEMCode.zero1.description, "OemZero1")
        XCTAssertEqual(OEMCode.zero1.mnemonic, "OemZero1")
        XCTAssertEqual(OEMCode.zero1.manufacturer, "Zero 88")
        XCTAssertEqual(OEMCode.zero1.product, "Zero Out2")
        XCTAssertEqual(OEMCode.zero1.dmxIn, 0)
        XCTAssertEqual(OEMCode.zero1.dmxOut, 2)
        XCTAssertEqual(OEMCode.zero1.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.zero1.isRDMSupported, false)

        // OemZero2 (0x8D)
        XCTAssertEqual(OEMCode.zero2, 0x8D)
        XCTAssertEqual(OEMCode.zero2.description, "OemZero2")
        XCTAssertEqual(OEMCode.zero2.mnemonic, "OemZero2")
        XCTAssertEqual(OEMCode.zero2.manufacturer, "Zero 88")
        XCTAssertEqual(OEMCode.zero2.product, "Zero In2")
        XCTAssertEqual(OEMCode.zero2.dmxIn, 2)
        XCTAssertEqual(OEMCode.zero2.dmxOut, 0)
        XCTAssertEqual(OEMCode.zero2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.zero2.isRDMSupported, false)

        // OemZero88G4 (0x927)
        XCTAssertEqual(OEMCode.zero88G4, 0x927)
        XCTAssertEqual(OEMCode.zero88G4.description, "OemZero88G4")
        XCTAssertEqual(OEMCode.zero88G4.mnemonic, "OemZero88G4")
        XCTAssertEqual(OEMCode.zero88G4.manufacturer, "Zero 88")
        XCTAssertEqual(OEMCode.zero88G4.product, "G4")
        XCTAssertEqual(OEMCode.zero88G4.dmxIn, 0)
        XCTAssertEqual(OEMCode.zero88G4.dmxOut, 4)
        XCTAssertEqual(OEMCode.zero88G4.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.zero88G4.isRDMSupported, true)

        // OemZero88G8 (0x928)
        XCTAssertEqual(OEMCode.zero88G8, 0x928)
        XCTAssertEqual(OEMCode.zero88G8.description, "OemZero88G8")
        XCTAssertEqual(OEMCode.zero88G8.mnemonic, "OemZero88G8")
        XCTAssertEqual(OEMCode.zero88G8.manufacturer, "Zero 88")
        XCTAssertEqual(OEMCode.zero88G8.product, "G8")
        XCTAssertEqual(OEMCode.zero88G8.dmxIn, 0)
        XCTAssertEqual(OEMCode.zero88G8.dmxOut, 8)
        XCTAssertEqual(OEMCode.zero88G8.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.zero88G8.isRDMSupported, true)

        // OemZingKailua (0x10E1)
        XCTAssertEqual(OEMCode.zingKailua, 0x10E1)
        XCTAssertEqual(OEMCode.zingKailua.description, "OemZingKailua")
        XCTAssertEqual(OEMCode.zingKailua.mnemonic, "OemZingKailua")
        XCTAssertEqual(OEMCode.zingKailua.manufacturer, "Zingerli Show Engineering")
        XCTAssertEqual(OEMCode.zingKailua.product, "Kailua")
        XCTAssertEqual(OEMCode.zingKailua.dmxIn, 0)
        XCTAssertEqual(OEMCode.zingKailua.dmxOut, 0)
        XCTAssertEqual(OEMCode.zingKailua.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.zingKailua.isRDMSupported, true)

        // OemZingKailua2 (0x10E2)
        XCTAssertEqual(OEMCode.zingKailua2, 0x10E2)
        XCTAssertEqual(OEMCode.zingKailua2.description, "OemZingKailua2")
        XCTAssertEqual(OEMCode.zingKailua2.mnemonic, "OemZingKailua2")
        XCTAssertEqual(OEMCode.zingKailua2.manufacturer, "Zingerli Show Engineering")
        XCTAssertEqual(OEMCode.zingKailua2.product, "Kailua 2")
        XCTAssertEqual(OEMCode.zingKailua2.dmxIn, 1)
        XCTAssertEqual(OEMCode.zingKailua2.dmxOut, 1)
        XCTAssertEqual(OEMCode.zingKailua2.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.zingKailua2.isRDMSupported, true)

        // OemZingKatlait (0x10E0)
        XCTAssertEqual(OEMCode.zingKatlait, 0x10E0)
        XCTAssertEqual(OEMCode.zingKatlait.description, "OemZingKatlait")
        XCTAssertEqual(OEMCode.zingKatlait.mnemonic, "OemZingKatlait")
        XCTAssertEqual(OEMCode.zingKatlait.manufacturer, "Zingerli Show Engineering")
        XCTAssertEqual(OEMCode.zingKatlait.product, "Katlait")
        XCTAssertEqual(OEMCode.zingKatlait.dmxIn, 3)
        XCTAssertEqual(OEMCode.zingKatlait.dmxOut, 4)
        XCTAssertEqual(OEMCode.zingKatlait.hasPhysicalPorts, true)
        XCTAssertEqual(OEMCode.zingKatlait.isRDMSupported, true)

        // OemZingPina1 (0x10E3)
        XCTAssertEqual(OEMCode.zingPina1, 0x10E3)
        XCTAssertEqual(OEMCode.zingPina1.description, "OemZingPina1")
        XCTAssertEqual(OEMCode.zingPina1.mnemonic, "OemZingPina1")
        XCTAssertEqual(OEMCode.zingPina1.manufacturer, "Zingerli Show Engineering")
        XCTAssertEqual(OEMCode.zingPina1.product, "Pina")
        XCTAssertEqual(OEMCode.zingPina1.dmxIn, 0)
        XCTAssertEqual(OEMCode.zingPina1.dmxOut, 1)
        XCTAssertEqual(OEMCode.zingPina1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.zingPina1.isRDMSupported, true)

        // OemZingSina1 (0x10E4)
        XCTAssertEqual(OEMCode.zingSina1, 0x10E4)
        XCTAssertEqual(OEMCode.zingSina1.description, "OemZingSina1")
        XCTAssertEqual(OEMCode.zingSina1.mnemonic, "OemZingSina1")
        XCTAssertEqual(OEMCode.zingSina1.manufacturer, "Zingerli Show Engineering")
        XCTAssertEqual(OEMCode.zingSina1.product, "Sina")
        XCTAssertEqual(OEMCode.zingSina1.dmxIn, 0)
        XCTAssertEqual(OEMCode.zingSina1.dmxOut, 1)
        XCTAssertEqual(OEMCode.zingSina1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.zingSina1.isRDMSupported, true)

        // OemZingTukra1 (0x10E5)
        XCTAssertEqual(OEMCode.zingTukra1, 0x10E5)
        XCTAssertEqual(OEMCode.zingTukra1.description, "OemZingTukra1")
        XCTAssertEqual(OEMCode.zingTukra1.mnemonic, "OemZingTukra1")
        XCTAssertEqual(OEMCode.zingTukra1.manufacturer, "Zingerli Show Engineering")
        XCTAssertEqual(OEMCode.zingTukra1.product, "Tukra")
        XCTAssertEqual(OEMCode.zingTukra1.dmxIn, 0)
        XCTAssertEqual(OEMCode.zingTukra1.dmxOut, 0)
        XCTAssertEqual(OEMCode.zingTukra1.hasPhysicalPorts, false)
        XCTAssertEqual(OEMCode.zingTukra1.isRDMSupported, true)

    }
}
